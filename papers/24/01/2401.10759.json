{
    "title": "Interactions with Prompt Problems: A New Way to Teach Programming with Large Language Models. (arXiv:2401.10759v1 [cs.HC])",
    "abstract": "Large Language Models (LLMs) have upended decades of pedagogy in computing education. Students previously learned to code through \\textit{writing} many small problems with less emphasis on code reading and comprehension. Recent research has shown that free code generation tools powered by LLMs can solve introductory programming problems presented in natural language with ease. In this paper, we propose a new way to teach programming with Prompt Problems. Students receive a problem visually, indicating how input should be transformed to output, and must translate that to a prompt for an LLM to decipher. The problem is considered correct when the code that is generated by the student prompt can pass all test cases. In this paper we present the design of this tool, discuss student interactions with it as they learn, and provide insights into this new class of programming problems as well as the design tools that integrate LLMs.",
    "link": "http://arxiv.org/abs/2401.10759",
    "context": "Title: Interactions with Prompt Problems: A New Way to Teach Programming with Large Language Models. (arXiv:2401.10759v1 [cs.HC])\nAbstract: Large Language Models (LLMs) have upended decades of pedagogy in computing education. Students previously learned to code through \\textit{writing} many small problems with less emphasis on code reading and comprehension. Recent research has shown that free code generation tools powered by LLMs can solve introductory programming problems presented in natural language with ease. In this paper, we propose a new way to teach programming with Prompt Problems. Students receive a problem visually, indicating how input should be transformed to output, and must translate that to a prompt for an LLM to decipher. The problem is considered correct when the code that is generated by the student prompt can pass all test cases. In this paper we present the design of this tool, discuss student interactions with it as they learn, and provide insights into this new class of programming problems as well as the design tools that integrate LLMs.",
    "path": "papers/24/01/2401.10759.json",
    "total_tokens": 861,
    "translated_title": "使用提示问题进行编程教学的新方法：与大型语言模型的交互",
    "translated_abstract": "大型语言模型（LLMs）颠覆了计算机教育几十年来的教学方法。以前，学生通过编写许多小问题来学习编程，对代码阅读和理解的重视程度较低。最近的研究表明，由LLMs驱动的自由代码生成工具可以轻松解决用自然语言提出的初级编程问题。在本文中，我们提出了一种新的编程教学方式，即使用提示问题。学生通过视觉方式获得一个问题，指示输入如何转换为输出，然后将其转换为LLMs能够理解的提示。当由学生提示生成的代码能够通过所有测试用例时，问题被认为是正确的。在本文中，我们介绍了此工具的设计，讨论了学生在学习中与此工具的互动，并提供了关于这种新型编程问题及集成LLMs的设计工具的见解。",
    "tldr": "本文提出了一种新的编程教学方法，即使用提示问题，以与大型语言模型进行交互。学生通过视觉方式获得一个问题，并将其转换为LLMs能够理解的提示，以生成能够通过所有测试用例的代码。",
    "en_tdlr": "This paper proposes a new way to teach programming by interacting with prompt problems and large language models (LLMs). Students receive a visual problem and translate it into a prompt for an LLM to generate code that can pass all test cases."
}