{
    "title": "Shabari: Delayed Decision-Making for Faster and Efficient Serverless Function. (arXiv:2401.08859v1 [cs.DC])",
    "abstract": "Serverless computing relieves developers from the burden of resource management, thus providing ease-of-use to the users and the opportunity to optimize resource utilization for the providers. However, today's serverless systems lack performance guarantees for function invocations, thus limiting support for performance-critical applications: we observed severe performance variability (up to 6x). Providers lack visibility into user functions and hence find it challenging to right-size them: we observed heavy resource underutilization (up to 80%). To understand the causes behind the performance variability and underutilization, we conducted a measurement study of commonly deployed serverless functions and learned that the function performance and resource utilization depend crucially on function semantics and inputs. Our key insight is to delay making resource allocation decisions until after the function inputs are available. We introduce Shabari, a resource management framework for ser",
    "link": "http://arxiv.org/abs/2401.08859",
    "context": "Title: Shabari: Delayed Decision-Making for Faster and Efficient Serverless Function. (arXiv:2401.08859v1 [cs.DC])\nAbstract: Serverless computing relieves developers from the burden of resource management, thus providing ease-of-use to the users and the opportunity to optimize resource utilization for the providers. However, today's serverless systems lack performance guarantees for function invocations, thus limiting support for performance-critical applications: we observed severe performance variability (up to 6x). Providers lack visibility into user functions and hence find it challenging to right-size them: we observed heavy resource underutilization (up to 80%). To understand the causes behind the performance variability and underutilization, we conducted a measurement study of commonly deployed serverless functions and learned that the function performance and resource utilization depend crucially on function semantics and inputs. Our key insight is to delay making resource allocation decisions until after the function inputs are available. We introduce Shabari, a resource management framework for ser",
    "path": "papers/24/01/2401.08859.json",
    "total_tokens": 838,
    "translated_title": "Shabari: 延迟决策以实现更快、更高效的无服务器函数",
    "translated_abstract": "无服务器计算减轻了开发人员对资源管理的负担，为用户提供了易用性，并为提供者优化资源利用率提供了机会。然而，今天的无服务器系统在函数调用方面缺乏性能保证，从而限制了对性能关键应用程序的支持：我们观察到严重的性能变异性（高达6倍）。提供者缺乏对用户函数的可见性，因此很难对其进行合适的资源规模化：我们观察到严重的资源低利用率（高达80%）。为了理解性能变异性和低利用率背后的原因，我们对常见部署的无服务器函数进行了测量研究，并了解到函数性能和资源利用率关键取决于函数语义和输入。我们的主要认识是在函数输入可用之后延迟资源分配决策。我们引入了Shabari，一个用于无服务器的资源管理框架。",
    "tldr": "Shabari是一个延迟决策的无服务器资源管理框架，通过对函数输入的延迟来减轻无服务器系统中的性能变异性和资源低利用率问题。",
    "en_tdlr": "Shabari is a delayed decision-making resource management framework for serverless computing that addresses the issues of performance variability and resource underutilization by delaying resource allocation decisions until after the function inputs are available."
}