{
    "title": "Swing: Short-cutting Rings for Higher Bandwidth Allreduce",
    "abstract": "arXiv:2401.09356v2 Announce Type: replace-cross  Abstract: The allreduce collective operation accounts for a significant fraction of the runtime of workloads running on distributed systems. One factor determining its performance is the distance between communicating nodes, especially on networks like torus, where a higher distance implies multiple messages being forwarded on the same link, thus reducing the allreduce bandwidth. Torus networks are widely used on systems optimized for machine learning workloads (e.g., Google TPUs and Amazon Trainium devices), as well as on some of the Top500 supercomputers. To improve allreduce performance on torus networks we introduce Swing, a new algorithm that keeps a low distance between communicating nodes by swinging between torus directions. Our analysis and experimental evaluation show that Swing outperforms by up to 3x existing allreduce algorithms for vectors ranging from 32B to 128MiB, on different types of torus and torus-like topologies, re",
    "link": "https://arxiv.org/abs/2401.09356",
    "context": "Title: Swing: Short-cutting Rings for Higher Bandwidth Allreduce\nAbstract: arXiv:2401.09356v2 Announce Type: replace-cross  Abstract: The allreduce collective operation accounts for a significant fraction of the runtime of workloads running on distributed systems. One factor determining its performance is the distance between communicating nodes, especially on networks like torus, where a higher distance implies multiple messages being forwarded on the same link, thus reducing the allreduce bandwidth. Torus networks are widely used on systems optimized for machine learning workloads (e.g., Google TPUs and Amazon Trainium devices), as well as on some of the Top500 supercomputers. To improve allreduce performance on torus networks we introduce Swing, a new algorithm that keeps a low distance between communicating nodes by swinging between torus directions. Our analysis and experimental evaluation show that Swing outperforms by up to 3x existing allreduce algorithms for vectors ranging from 32B to 128MiB, on different types of torus and torus-like topologies, re",
    "path": "papers/24/01/2401.09356.json",
    "total_tokens": 808,
    "translated_title": "为实现更高带宽的Allreduce操作而设计的Swing算法",
    "translated_abstract": "Allreduce集体操作在分布式系统上运行的工作负载的运行时中占据了相当大的比例。其性能的一个影响因素是通信节点之间的距离，特别是在螺旋网络等网络中，较长的距离意味着多个消息在同一链路上转发，从而降低了Allreduce的带宽。为了提高螺旋网络上的Allreduce性能，我们引入了Swing，一种新算法，通过在螺旋方向之间摆动来保持通信节点之间的低距离。我们的分析和实验评估显示，Swing在不同类型的螺旋和类似螺旋拓扑上，对于从32B到128MiB的向量，优于现有的Allreduce算法多达3倍。",
    "tldr": "Swing算法通过摆动在螺旋方向之间保持通信节点之间的低距离，从而在螺旋网络上优化Allreduce操作的性能，相比现有算法提升高达3倍。"
}