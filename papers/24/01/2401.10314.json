{
    "title": "LangProp: A code optimization framework using Language Models applied to driving. (arXiv:2401.10314v1 [cs.SE])",
    "abstract": "LangProp is a framework for iteratively optimizing code generated by large language models (LLMs) in a supervised/reinforcement learning setting. While LLMs can generate sensible solutions zero-shot, the solutions are often sub-optimal. Especially for code generation tasks, it is likely that the initial code will fail on certain edge cases. LangProp automatically evaluates the code performance on a dataset of input-output pairs, as well as catches any exceptions, and feeds the results back to the LLM in the training loop, so that the LLM can iteratively improve the code it generates. By adopting a metricand data-driven training paradigm for this code optimization procedure, one could easily adapt findings from traditional machine learning techniques such as imitation learning, DAgger, and reinforcement learning. We demonstrate the first proof of concept of automated code optimization for autonomous driving in CARLA, showing that LangProp can generate interpretable and transparent dri",
    "link": "http://arxiv.org/abs/2401.10314",
    "context": "Title: LangProp: A code optimization framework using Language Models applied to driving. (arXiv:2401.10314v1 [cs.SE])\nAbstract: LangProp is a framework for iteratively optimizing code generated by large language models (LLMs) in a supervised/reinforcement learning setting. While LLMs can generate sensible solutions zero-shot, the solutions are often sub-optimal. Especially for code generation tasks, it is likely that the initial code will fail on certain edge cases. LangProp automatically evaluates the code performance on a dataset of input-output pairs, as well as catches any exceptions, and feeds the results back to the LLM in the training loop, so that the LLM can iteratively improve the code it generates. By adopting a metricand data-driven training paradigm for this code optimization procedure, one could easily adapt findings from traditional machine learning techniques such as imitation learning, DAgger, and reinforcement learning. We demonstrate the first proof of concept of automated code optimization for autonomous driving in CARLA, showing that LangProp can generate interpretable and transparent dri",
    "path": "papers/24/01/2401.10314.json",
    "total_tokens": 887,
    "translated_title": "LangProp: 一种应用于自动驾驶的使用语言模型的代码优化框架",
    "translated_abstract": "LangProp是一个框架，用于在监督/强化学习环境中迭代优化大型语言模型(LLM)生成的代码。虽然LLM能够零-shot地生成合理的解决方案，但这些解决方案往往是次优的。特别是对于代码生成任务，初始代码可能在某些边缘情况下失败。LangProp自动评估数据集上的代码性能，并捕捉任何异常，并将结果反馈给LLM进行训练，以使LLM可以迭代改进其生成的代码。通过采用基于度量和数据驱动的训练范式来进行代码优化过程，可以轻松地借鉴传统机器学习技术，如模仿学习、DAgger和强化学习。我们展示了在CARLA中自动驾驶的代码优化的第一个概念验证，证明了LangProp可以生成可解释和透明的驾驶代码。",
    "tldr": "LangProp是一种用于自动驾驶的代码优化框架，利用语言模型迭代优化生成的代码。它通过评估代码性能和捕捉异常来改进生成的代码，展示了在CARLA中实现自动驾驶的概念验证。",
    "en_tdlr": "LangProp is a code optimization framework applied to autonomous driving, using language models to iteratively improve the generated code. It automatically evaluates the code performance and catches exceptions to enhance the code generation process, and demonstrates a proof of concept in CARLA for autonomous driving."
}