{
    "title": "LLM-Powered Code Vulnerability Repair with Reinforcement Learning and Semantic Reward",
    "abstract": "arXiv:2401.03374v2 Announce Type: replace-cross  Abstract: In software development, the predominant emphasis on functionality often supersedes security concerns, a trend gaining momentum with AI-driven automation tools like GitHub Copilot. These tools significantly improve developers' efficiency in functional code development. Nevertheless, it remains a notable concern that such tools are also responsible for creating insecure code, predominantly because of pre-training on publicly available repositories with vulnerable code. Moreover, developers are called the \"weakest link in the chain\" since they have very minimal knowledge of code security. Although existing solutions provide a reasonable solution to vulnerable code, they must adequately describe and educate the developers on code security to ensure that the security issues are not repeated. Therefore we introduce a multipurpose code vulnerability analysis system \\texttt{SecRepair}, powered by a large language model, CodeGen2 assis",
    "link": "https://arxiv.org/abs/2401.03374",
    "context": "Title: LLM-Powered Code Vulnerability Repair with Reinforcement Learning and Semantic Reward\nAbstract: arXiv:2401.03374v2 Announce Type: replace-cross  Abstract: In software development, the predominant emphasis on functionality often supersedes security concerns, a trend gaining momentum with AI-driven automation tools like GitHub Copilot. These tools significantly improve developers' efficiency in functional code development. Nevertheless, it remains a notable concern that such tools are also responsible for creating insecure code, predominantly because of pre-training on publicly available repositories with vulnerable code. Moreover, developers are called the \"weakest link in the chain\" since they have very minimal knowledge of code security. Although existing solutions provide a reasonable solution to vulnerable code, they must adequately describe and educate the developers on code security to ensure that the security issues are not repeated. Therefore we introduce a multipurpose code vulnerability analysis system \\texttt{SecRepair}, powered by a large language model, CodeGen2 assis",
    "path": "papers/24/01/2401.03374.json",
    "total_tokens": 868,
    "translated_title": "基于LLM、强化学习和语义奖励的代码漏洞修复",
    "translated_abstract": "在软件开发中，对功能的主要强调往往超越了安全性问题，这一趋势随着GitHub Copilot等AI驱动的自动化工具的兴起而越来越明显。这些工具显着提高了开发人员在功能代码开发中的效率。然而，仍然存在一个显著的问题，即这些工具也负责创建不安全的代码，主要是因为在公开可用的具有漏洞代码的存储库上进行了预训练。此外，开发人员被称为“链条中最薄弱的一环”，因为他们对代码安全性几乎没有什么了解。尽管现有解决方案为有漏洞的代码提供了一个合理的解决方案，但它们必须充分描述和教育开发人员有关代码安全性，以确保安全问题不再重演。因此，我们引入了一个多功能的代码漏洞分析系统\\texttt{SecRepair}，它由一个大型语言模型CodeGen2辅助。",
    "tldr": "引入了一种由大型语言模型驱动的多功能代码漏洞分析系统，旨在通过强化学习和语义奖励修复因AI驱动的自动化工具而产生的不安全代码。",
    "en_tdlr": "Introduced a multi-purpose code vulnerability analysis system powered by a large language model, aiming to repair insecure code generated by AI-driven automation tools through reinforcement learning and semantic reward."
}