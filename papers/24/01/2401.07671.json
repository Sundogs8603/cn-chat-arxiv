{
    "title": "CLSA-CIM: A Cross-Layer Scheduling Approach for Computing-in-Memory Architectures. (arXiv:2401.07671v2 [cs.AR] UPDATED)",
    "abstract": "The demand for efficient machine learning (ML) accelerators is growing rapidly, driving the development of novel computing concepts such as resistive random access memory (RRAM)-based tiled computing-in-memory (CIM) architectures. CIM allows to compute within the memory unit, resulting in faster data processing and reduced power consumption. Efficient compiler algorithms are essential to exploit the potential of tiled CIM architectures. While conventional ML compilers focus on code generation for CPUs, GPUs, and other von Neumann architectures, adaptations are needed to cover CIM architectures. Cross-layer scheduling is a promising approach, as it enhances the utilization of CIM cores, thereby accelerating computations. Although similar concepts are implicitly used in previous work, there is a lack of clear and quantifiable algorithmic definitions for cross-layer scheduling for tiled CIM architectures. To close this gap, we present CLSA-CIM, a cross-layer scheduling algorithm for tiled",
    "link": "http://arxiv.org/abs/2401.07671",
    "context": "Title: CLSA-CIM: A Cross-Layer Scheduling Approach for Computing-in-Memory Architectures. (arXiv:2401.07671v2 [cs.AR] UPDATED)\nAbstract: The demand for efficient machine learning (ML) accelerators is growing rapidly, driving the development of novel computing concepts such as resistive random access memory (RRAM)-based tiled computing-in-memory (CIM) architectures. CIM allows to compute within the memory unit, resulting in faster data processing and reduced power consumption. Efficient compiler algorithms are essential to exploit the potential of tiled CIM architectures. While conventional ML compilers focus on code generation for CPUs, GPUs, and other von Neumann architectures, adaptations are needed to cover CIM architectures. Cross-layer scheduling is a promising approach, as it enhances the utilization of CIM cores, thereby accelerating computations. Although similar concepts are implicitly used in previous work, there is a lack of clear and quantifiable algorithmic definitions for cross-layer scheduling for tiled CIM architectures. To close this gap, we present CLSA-CIM, a cross-layer scheduling algorithm for tiled",
    "path": "papers/24/01/2401.07671.json",
    "total_tokens": 881,
    "translated_title": "CLSA-CIM: 一种用于计算内存架构的跨层调度方法",
    "translated_abstract": "高效的机器学习加速器需求迅速增长，推动了新型计算概念的发展，如基于阻性随机存取存储器（RRAM）的平铺计算内存（CIM）架构。CIM允许在内存单元内进行计算，从而加快数据处理速度，降低功耗。高效的编译器算法对于充分利用平铺CIM架构的潜力至关重要。传统的机器学习编译器专注于为CPU、GPU和其他冯·诺伊曼架构生成代码，需要进行适应，以覆盖CIM架构。跨层调度是一种有前途的方法，它提高了CIM核心的利用率，从而加速了计算。尽管类似的概念在以前的工作中隐含地使用，但对于平铺CIM架构的跨层调度缺乏清晰且可量化的算法定义。为了弥补这个空白，我们提出了CLSA-CIM，一种适用于平铺CIM架构的跨层调度算法。",
    "tldr": "CLSA-CIM是一种用于计算内存架构的跨层调度算法，能够提高平铺CIM架构的利用率，加速计算。"
}