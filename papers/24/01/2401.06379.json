{
    "title": "Vehicle: Bridging the Embedding Gap in the Verification of Neuro-Symbolic Programs. (arXiv:2401.06379v1 [cs.AI])",
    "abstract": "Neuro-symbolic programs -- programs containing both machine learning components and traditional symbolic code -- are becoming increasingly widespread. However, we believe that there is still a lack of a general methodology for verifying these programs whose correctness depends on the behaviour of the machine learning components. In this paper, we identify the ``embedding gap'' -- the lack of techniques for linking semantically-meaningful ``problem-space'' properties to equivalent ``embedding-space'' properties -- as one of the key issues, and describe Vehicle, a tool designed to facilitate the end-to-end verification of neural-symbolic programs in a modular fashion. Vehicle provides a convenient language for specifying ``problem-space'' properties of neural networks and declaring their relationship to the ``embedding-space\", and a powerful compiler that automates interpretation of these properties in the language of a chosen machine-learning training environment, neural network verifie",
    "link": "http://arxiv.org/abs/2401.06379",
    "context": "Title: Vehicle: Bridging the Embedding Gap in the Verification of Neuro-Symbolic Programs. (arXiv:2401.06379v1 [cs.AI])\nAbstract: Neuro-symbolic programs -- programs containing both machine learning components and traditional symbolic code -- are becoming increasingly widespread. However, we believe that there is still a lack of a general methodology for verifying these programs whose correctness depends on the behaviour of the machine learning components. In this paper, we identify the ``embedding gap'' -- the lack of techniques for linking semantically-meaningful ``problem-space'' properties to equivalent ``embedding-space'' properties -- as one of the key issues, and describe Vehicle, a tool designed to facilitate the end-to-end verification of neural-symbolic programs in a modular fashion. Vehicle provides a convenient language for specifying ``problem-space'' properties of neural networks and declaring their relationship to the ``embedding-space\", and a powerful compiler that automates interpretation of these properties in the language of a chosen machine-learning training environment, neural network verifie",
    "path": "papers/24/01/2401.06379.json",
    "total_tokens": 860,
    "translated_title": "Vehicle: 在验证神经符号化程序中弥合嵌入缺口",
    "translated_abstract": "神经符号化程序是包含机器学习组件和传统符号化代码的程序，正在变得越来越普遍。然而，我们认为目前缺乏一种通用的方法来验证这些程序，因为它们的正确性取决于机器学习组件的行为。在本文中，我们将“嵌入缺口”——以语义有意义的“问题空间”属性与等效的“嵌入空间”属性之间缺乏技术的问题——视为关键问题之一，并描述了一个名为Vehicle的工具，以模块化的方式促进神经符号化程序的端到端验证。Vehicle提供了一种方便的语言，用于指定神经网络的“问题空间”属性并声明它们与“嵌入空间”的关系，以及一个强大的编译器，可以自动将这些属性解释为所选择的机器学习训练环境、神经网络验证工具支持的语言。",
    "tldr": "本文提出了一个名为Vehicle的工具，它能够在验证神经符号化程序中弥合嵌入缺口，为指定神经网络属性和解释其与嵌入空间的关系提供了方便的语言和强大的编译器。"
}