{
    "title": "Are Latent Vulnerabilities Hidden Gems for Software Vulnerability Prediction? An Empirical Study. (arXiv:2401.11105v1 [cs.SE])",
    "abstract": "Collecting relevant and high-quality data is integral to the development of effective Software Vulnerability (SV) prediction models. Most of the current SV datasets rely on SV-fixing commits to extract vulnerable functions and lines. However, none of these datasets have considered latent SVs existing between the introduction and fix of the collected SVs. There is also little known about the usefulness of these latent SVs for SV prediction. To bridge these gaps, we conduct a large-scale study on the latent vulnerable functions in two commonly used SV datasets and their utilization for function-level and line-level SV predictions. Leveraging the state-of-the-art SZZ algorithm, we identify more than 100k latent vulnerable functions in the studied datasets. We find that these latent functions can increase the number of SVs by 4x on average and correct up to 5k mislabeled functions, yet they have a noise level of around 6%. Despite the noise, we show that the state-of-the-art SV prediction ",
    "link": "http://arxiv.org/abs/2401.11105",
    "context": "Title: Are Latent Vulnerabilities Hidden Gems for Software Vulnerability Prediction? An Empirical Study. (arXiv:2401.11105v1 [cs.SE])\nAbstract: Collecting relevant and high-quality data is integral to the development of effective Software Vulnerability (SV) prediction models. Most of the current SV datasets rely on SV-fixing commits to extract vulnerable functions and lines. However, none of these datasets have considered latent SVs existing between the introduction and fix of the collected SVs. There is also little known about the usefulness of these latent SVs for SV prediction. To bridge these gaps, we conduct a large-scale study on the latent vulnerable functions in two commonly used SV datasets and their utilization for function-level and line-level SV predictions. Leveraging the state-of-the-art SZZ algorithm, we identify more than 100k latent vulnerable functions in the studied datasets. We find that these latent functions can increase the number of SVs by 4x on average and correct up to 5k mislabeled functions, yet they have a noise level of around 6%. Despite the noise, we show that the state-of-the-art SV prediction ",
    "path": "papers/24/01/2401.11105.json",
    "total_tokens": 975,
    "translated_title": "潜在漏洞是软件漏洞预测中的隐藏宝石吗？一项实证研究。",
    "translated_abstract": "收集相关高质量的数据对于开发有效的软件漏洞预测模型至关重要。目前的大部分软件漏洞数据集都依赖于漏洞修复提交来提取漏洞函数和代码行。然而，这些数据集没有考虑到收集的漏洞之间存在的潜在漏洞。关于这些潜在漏洞在漏洞预测中的实用性也知之甚少。为了填补这些空白，我们对两个常用的软件漏洞数据集中的潜在漏洞函数进行了大规模研究，并对其在函数级别和代码行级别上的漏洞预测进行了利用。通过最先进的SZZ算法，我们在研究的数据集中发现了超过10万个潜在漏洞函数。我们发现这些潜在函数平均能增加4倍的漏洞数量，并纠正多达5,000个错误标记的函数，但噪声水平约为6%。尽管有噪声，我们证明了最先进的漏洞预测模型可以从这些潜在漏洞中受益。",
    "tldr": "该研究通过对潜在漏洞的研究，发现它们可以有效增加漏洞数量并纠正错误标记的函数，尽管存在噪声，但最先进的漏洞预测模型仍可以从中受益。"
}