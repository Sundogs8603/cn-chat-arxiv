{
    "title": "VeriBug: An Attention-based Framework for Bug-Localization in Hardware Designs. (arXiv:2401.09494v1 [cs.AR])",
    "abstract": "In recent years, there has been an exponential growth in the size and complexity of System-on-Chip designs targeting different specialized applications. The cost of an undetected bug in these systems is much higher than in traditional processor systems as it may imply the loss of property or life. The problem is further exacerbated by the ever-shrinking time-to-market and ever-increasing demand to churn out billions of devices. Despite decades of research in simulation and formal methods for debugging and verification, it is still one of the most time-consuming and resource intensive processes in contemporary hardware design cycle. In this work, we propose VeriBug, which leverages recent advances in deep learning to accelerate debugging at the Register-Transfer Level and generates explanations of likely root causes. First, VeriBug uses control-data flow graph of a hardware design and learns to execute design statements by analyzing the context of operands and their assignments. Then, i",
    "link": "http://arxiv.org/abs/2401.09494",
    "context": "Title: VeriBug: An Attention-based Framework for Bug-Localization in Hardware Designs. (arXiv:2401.09494v1 [cs.AR])\nAbstract: In recent years, there has been an exponential growth in the size and complexity of System-on-Chip designs targeting different specialized applications. The cost of an undetected bug in these systems is much higher than in traditional processor systems as it may imply the loss of property or life. The problem is further exacerbated by the ever-shrinking time-to-market and ever-increasing demand to churn out billions of devices. Despite decades of research in simulation and formal methods for debugging and verification, it is still one of the most time-consuming and resource intensive processes in contemporary hardware design cycle. In this work, we propose VeriBug, which leverages recent advances in deep learning to accelerate debugging at the Register-Transfer Level and generates explanations of likely root causes. First, VeriBug uses control-data flow graph of a hardware design and learns to execute design statements by analyzing the context of operands and their assignments. Then, i",
    "path": "papers/24/01/2401.09494.json",
    "total_tokens": 855,
    "translated_title": "VeriBug: 一种基于注意力机制的硬件设计漏洞定位框架",
    "translated_abstract": "近年来，面向不同特定应用的SoC设计的规模和复杂性呈指数增长。在这些系统中，未检测到的漏洞的成本远高于传统处理器系统，因为它可能意味着财产或生命的损失。由于不断缩短的市场推出时间和不断增长的设备需求，这个问题变得更加严重。尽管在仿真和形式化方法方面进行了数十年的研究来进行调试和验证，但它仍然是当代硬件设计周期中耗时和资源密集型的过程之一。在这项工作中，我们提出了VeriBug，它利用深度学习的最新进展来加速寄存器传输级别的调试，并生成可能的根本原因的解释。首先，VeriBug使用硬件设计的控制数据流图，通过分析操作数及其分配的上下文来学习执行设计语句。",
    "tldr": "VeriBug是一种基于注意力机制的硬件设计漏洞定位框架，利用深度学习技术加速寄存器传输级别的调试，并生成可能的根本原因的解释。",
    "en_tdlr": "VeriBug is an attention-based framework for bug localization in hardware designs. It uses deep learning to accelerate debugging at the Register-Transfer Level and generates explanations of likely root causes."
}