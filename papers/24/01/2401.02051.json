{
    "title": "An Example of Evolutionary Computation + Large Language Model Beating Human: Design of Efficient Guided Local Search. (arXiv:2401.02051v1 [cs.NE])",
    "abstract": "It is often very tedious for human experts to design efficient algorithms. Recently, we have proposed a novel Algorithm Evolution using Large Language Model (AEL) framework for automatic algorithm design. AEL combines the power of a large language model and the paradigm of evolutionary computation to design, combine, and modify algorithms automatically. In this paper, we use AEL to design the guide algorithm for guided local search (GLS) to solve the well-known traveling salesman problem (TSP). AEL automatically evolves elite GLS algorithms in two days, with minimal human effort and no model training. Experimental results on 1,000 TSP20-TSP100 instances and TSPLib instances show that AEL-designed GLS outperforms state-of-the-art human-designed GLS with the same iteration budget. It achieves a 0% gap on TSP20 and TSP50 and a 0.032% gap on TSP100 in 1,000 iterations. Our findings mark the emergence of a new era in automatic algorithm design.",
    "link": "http://arxiv.org/abs/2401.02051",
    "context": "Title: An Example of Evolutionary Computation + Large Language Model Beating Human: Design of Efficient Guided Local Search. (arXiv:2401.02051v1 [cs.NE])\nAbstract: It is often very tedious for human experts to design efficient algorithms. Recently, we have proposed a novel Algorithm Evolution using Large Language Model (AEL) framework for automatic algorithm design. AEL combines the power of a large language model and the paradigm of evolutionary computation to design, combine, and modify algorithms automatically. In this paper, we use AEL to design the guide algorithm for guided local search (GLS) to solve the well-known traveling salesman problem (TSP). AEL automatically evolves elite GLS algorithms in two days, with minimal human effort and no model training. Experimental results on 1,000 TSP20-TSP100 instances and TSPLib instances show that AEL-designed GLS outperforms state-of-the-art human-designed GLS with the same iteration budget. It achieves a 0% gap on TSP20 and TSP50 and a 0.032% gap on TSP100 in 1,000 iterations. Our findings mark the emergence of a new era in automatic algorithm design.",
    "path": "papers/24/01/2401.02051.json",
    "total_tokens": 957,
    "translated_title": "进化计算与大语言模型击败人类：高效引导局部搜索设计的例子",
    "translated_abstract": "对人类专家来说，设计高效算法通常非常繁琐。最近，我们提出了一种新颖的算法进化与大语言模型（AEL）框架，用于自动算法设计。AEL将大语言模型的能力与进化计算的范式相结合，实现自动设计、组合和修改算法。在本文中，我们使用AEL来设计引导局部搜索（GLS）的引导算法，以解决著名的旅行商问题（TSP）。AEL自动演化出优秀的GLS算法，在两天内实现，只需要极少的人力投入和无需模型训练。在1,000个TSP20-TSP100实例和TSPLib实例上的实验结果表明，AEL设计的GLS算法在相同的迭代预算下优于最先进的人工设计的GLS算法。在1,000次迭代中，它在TSP20和TSP50上达到0%间隙，在TSP100上达到0.032%间隙。我们的发现标志着自动算法设计的新时代的出现。",
    "tldr": "使用进化计算和大语言模型的算法进化框架，自动设计了高效的引导局部搜索算法来解决旅行商问题，在实验中表现优于人工设计的算法，标志着自动算法设计的新时代出现。",
    "en_tdlr": "An algorithm evolution framework combining evolutionary computation and large language models was used to automatically design an efficient guided local search (GLS) algorithm for solving the traveling salesman problem (TSP). Experimental results showed that the automatically designed GLS algorithm outperformed human-designed algorithms, marking the emergence of a new era in automatic algorithm design."
}