{
    "title": "Copilot Refinement: Addressing Code Smells in Copilot-Generated Python Code. (arXiv:2401.14176v1 [cs.SE])",
    "abstract": "As one of the most popular dynamic languages, Python experiences a decrease in readability and maintainability when code smells are present. Recent advancements in Large Language Models have sparked growing interest in AI-enabled tools for both code generation and refactoring. GitHub Copilot is one such tool that has gained widespread usage. Copilot Chat, released on September 2023, functions as an interactive tool aims at facilitating natural language-powered coding. However, limited attention has been given to understanding code smells in Copilot-generated Python code and Copilot's ability to fix the code smells it generates. To this end, we built a dataset comprising 102 code smells in Copilot-generated Python code. Our aim is to first explore the occurrence of code smells in Copilot-generated Python code and then evaluate the effectiveness of Copilot in fixing these code smells employing different prompts. The results show that 8 out of 10 types of Python smells can be detected in ",
    "link": "http://arxiv.org/abs/2401.14176",
    "context": "Title: Copilot Refinement: Addressing Code Smells in Copilot-Generated Python Code. (arXiv:2401.14176v1 [cs.SE])\nAbstract: As one of the most popular dynamic languages, Python experiences a decrease in readability and maintainability when code smells are present. Recent advancements in Large Language Models have sparked growing interest in AI-enabled tools for both code generation and refactoring. GitHub Copilot is one such tool that has gained widespread usage. Copilot Chat, released on September 2023, functions as an interactive tool aims at facilitating natural language-powered coding. However, limited attention has been given to understanding code smells in Copilot-generated Python code and Copilot's ability to fix the code smells it generates. To this end, we built a dataset comprising 102 code smells in Copilot-generated Python code. Our aim is to first explore the occurrence of code smells in Copilot-generated Python code and then evaluate the effectiveness of Copilot in fixing these code smells employing different prompts. The results show that 8 out of 10 types of Python smells can be detected in ",
    "path": "papers/24/01/2401.14176.json",
    "total_tokens": 871,
    "translated_title": "Copilot细化：解决Copilot生成的Python代码中的代码异味",
    "translated_abstract": "作为最流行的动态语言之一，Python在存在代码异味时可读性和可维护性会下降。大型语言模型的最新进展引发了对AI支持的代码生成和重构工具的日益关注。GitHub Copilot是其中一种被广泛使用的工具。Copilot Chat是在2023年9月发布的一种交互式工具，旨在为自然语言驱动的编码提供便利。然而，对于理解Copilot生成的Python代码中的代码异味以及Copilot修复其生成的代码异味的能力，人们并没有给予足够的关注。为此，我们构建了一个包含102个Copilot生成的Python代码中的代码异味的数据集。我们的目标是首先探索Copilot生成的Python代码中代码异味的发生情况，然后评估Copilot在使用不同提示修复这些代码异味时的有效性。结果显示，10种Python代码异味中有8种可以在Copilot生成的代码中检测到。",
    "tldr": "本研究旨在探索Copilot生成的Python代码中的代码异味，评估Copilot修复这些问题的能力。结果表明，有8种Python代码异味可以在Copilot生成的代码中检测到。",
    "en_tdlr": "This study aims to explore code smells in Copilot-generated Python code and evaluate Copilot's ability to fix them. The results show that 8 out of 10 types of Python smells can be detected in Copilot-generated code."
}