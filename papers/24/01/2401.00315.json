{
    "title": "Bidirectional Temporal Plan Graph: Enabling Switchable Passing Orders for More Efficient Multi-Agent Path Finding Plan Execution. (arXiv:2401.00315v2 [cs.AI] UPDATED)",
    "abstract": "The Multi-Agent Path Finding (MAPF) problem involves planning collision-free paths for multiple agents in a shared environment. The majority of MAPF solvers rely on the assumption that an agent can arrive at a specific location at a specific timestep. However, real-world execution uncertainties can cause agents to deviate from this assumption, leading to collisions and deadlocks. Prior research solves this problem by having agents follow a Temporal Plan Graph (TPG), enforcing a consistent passing order at every location as defined in the MAPF plan. However, we show that TPGs are overly strict because, in some circumstances, satisfying the passing order requires agents to wait unnecessarily, leading to longer execution time. To overcome this issue, we introduce a new graphical representation called a Bidirectional Temporal Plan Graph (BTPG), which allows switching passing orders during execution to avoid unnecessary waiting time. We design two anytime algorithms for constructing a BTPG:",
    "link": "http://arxiv.org/abs/2401.00315",
    "context": "Title: Bidirectional Temporal Plan Graph: Enabling Switchable Passing Orders for More Efficient Multi-Agent Path Finding Plan Execution. (arXiv:2401.00315v2 [cs.AI] UPDATED)\nAbstract: The Multi-Agent Path Finding (MAPF) problem involves planning collision-free paths for multiple agents in a shared environment. The majority of MAPF solvers rely on the assumption that an agent can arrive at a specific location at a specific timestep. However, real-world execution uncertainties can cause agents to deviate from this assumption, leading to collisions and deadlocks. Prior research solves this problem by having agents follow a Temporal Plan Graph (TPG), enforcing a consistent passing order at every location as defined in the MAPF plan. However, we show that TPGs are overly strict because, in some circumstances, satisfying the passing order requires agents to wait unnecessarily, leading to longer execution time. To overcome this issue, we introduce a new graphical representation called a Bidirectional Temporal Plan Graph (BTPG), which allows switching passing orders during execution to avoid unnecessary waiting time. We design two anytime algorithms for constructing a BTPG:",
    "path": "papers/24/01/2401.00315.json",
    "total_tokens": 931,
    "translated_title": "双向时间计划图：为更高效的多智能体路径规划执行提供可切换的通行顺序",
    "translated_abstract": "多智能体路径规划（MAPF）问题涉及为共享环境中的多个智能体规划无碰撞路径。大多数MAPF解算器依赖于智能体能够在特定时间步到达特定位置的假设。然而，现实世界的执行不确定性可能导致智能体偏离此假设，从而导致碰撞和死锁。先前的研究通过让智能体遵循一个时间计划图（TPG），在每个位置强制执行MAPF计划中定义的一致通行顺序来解决这个问题。然而，我们发现TPG过于严格，因为在某些情况下，满足通行顺序需要智能体无必要地等待，导致执行时间变长。为了克服这个问题，我们引入了一种新的图形表示，称为双向时间计划图（BTPG），允许在执行过程中切换通行顺序，避免不必要的等待时间。我们设计了两种构建BTPG的任意时间算法：",
    "tldr": "引入了一种新的图形表示，双向时间计划图（BTPG），允许在执行过程中切换通行顺序，避免不必要的等待时间，解决了多智能体路径规划中的执行效率问题。",
    "en_tdlr": "Introduced a new graphical representation, Bidirectional Temporal Plan Graph (BTPG), which allows switching passing orders during execution to avoid unnecessary waiting time, solving the efficiency problem in multi-agent path finding."
}