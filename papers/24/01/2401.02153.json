{
    "title": "Unit Testing in ASP Revisited: Language and Test-Driven Development Environment. (arXiv:2401.02153v1 [cs.SE])",
    "abstract": "Unit testing frameworks are nowadays considered a best practice, included in almost all modern software development processes, to achieve rapid development of correct specifications. Knowledge representation and reasoning paradigms such as Answer Set Programming (ASP), that have been used in industry-level applications, are not an exception. Indeed, the first unit testing specification language for ASP was proposed in 2011 as a feature of the ASPIDE development environment. Later, a more portable unit testing language was included in the LANA annotation language. In this paper we revisit both languages and tools for unit testing in ASP. We propose a new unit test specification language that allows one to inline tests within ASP programs, and we identify the computational complexity of the tasks associated with checking the various program-correctness assertions. Test-case specifications are transparent to the traditional evaluation, but can be interpreted by a specific testing tool. Th",
    "link": "http://arxiv.org/abs/2401.02153",
    "context": "Title: Unit Testing in ASP Revisited: Language and Test-Driven Development Environment. (arXiv:2401.02153v1 [cs.SE])\nAbstract: Unit testing frameworks are nowadays considered a best practice, included in almost all modern software development processes, to achieve rapid development of correct specifications. Knowledge representation and reasoning paradigms such as Answer Set Programming (ASP), that have been used in industry-level applications, are not an exception. Indeed, the first unit testing specification language for ASP was proposed in 2011 as a feature of the ASPIDE development environment. Later, a more portable unit testing language was included in the LANA annotation language. In this paper we revisit both languages and tools for unit testing in ASP. We propose a new unit test specification language that allows one to inline tests within ASP programs, and we identify the computational complexity of the tasks associated with checking the various program-correctness assertions. Test-case specifications are transparent to the traditional evaluation, but can be interpreted by a specific testing tool. Th",
    "path": "papers/24/01/2401.02153.json",
    "total_tokens": 782,
    "translated_title": "ASP中的单元测试重新审视：语言和测试驱动开发环境",
    "translated_abstract": "单元测试框架现如今被视为一种最佳实践，几乎包含在所有现代软件开发过程中，以实现快速开发正确的规范。Answer Set Programming（ASP）等知识表示和推理范例在工业级应用中也不例外。事实上，ASPIDE开发环境的首个ASP单元测试规范语言是在2011年提出的。随后，在LANA注释语言中包含了更加可移植的单元测试语言。本文重新审视了ASP中的两种语言和工具以进行单元测试。我们提出了一种新的单元测试规范语言，可以在ASP程序内联测试，并确定与检查各种程序正确性断言相关的任务的计算复杂度。用例规范对传统评估来说是透明的，但可以由特定的测试工具解释。",
    "tldr": "本文重新审视了ASP中的单元测试语言和工具，提出了一种新的内联测试规范语言，并确定了相应任务的计算复杂度。",
    "en_tdlr": "This paper revisits the unit testing language and tools in ASP, proposes a new inline test specification language, and identifies the computational complexity of associated tasks."
}