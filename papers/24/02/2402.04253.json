{
    "title": "AnyTool: Self-Reflective, Hierarchical Agents for Large-Scale API Calls",
    "abstract": "We introduce AnyTool, a large language model agent designed to revolutionize the utilization of a vast array of tools in addressing user queries. We utilize over 16,000 APIs from Rapid API, operating under the assumption that a subset of these APIs could potentially resolve the queries. AnyTool primarily incorporates three elements: an API retriever with a hierarchical structure, a solver aimed at resolving user queries using a selected set of API candidates, and a self-reflection mechanism, which re-activates AnyTool if the initial solution proves impracticable. AnyTool is powered by the function calling feature of GPT-4, eliminating the need for training external modules. We also revisit the evaluation protocol introduced by previous works and identify a limitation in this protocol that leads to an artificially high pass rate. By revising the evaluation protocol to better reflect practical application scenarios, we introduce an additional benchmark, termed AnyToolBench. Experiments a",
    "link": "https://arxiv.org/abs/2402.04253",
    "context": "Title: AnyTool: Self-Reflective, Hierarchical Agents for Large-Scale API Calls\nAbstract: We introduce AnyTool, a large language model agent designed to revolutionize the utilization of a vast array of tools in addressing user queries. We utilize over 16,000 APIs from Rapid API, operating under the assumption that a subset of these APIs could potentially resolve the queries. AnyTool primarily incorporates three elements: an API retriever with a hierarchical structure, a solver aimed at resolving user queries using a selected set of API candidates, and a self-reflection mechanism, which re-activates AnyTool if the initial solution proves impracticable. AnyTool is powered by the function calling feature of GPT-4, eliminating the need for training external modules. We also revisit the evaluation protocol introduced by previous works and identify a limitation in this protocol that leads to an artificially high pass rate. By revising the evaluation protocol to better reflect practical application scenarios, we introduce an additional benchmark, termed AnyToolBench. Experiments a",
    "path": "papers/24/02/2402.04253.json",
    "total_tokens": 954,
    "translated_title": "AnyTool: 大规模API调用的自我反思、层次化代理机制",
    "translated_abstract": "我们介绍了AnyTool，这是一个大型语言模型代理系统，旨在革新利用各种工具来解决用户查询的方法。在我们的研究中，我们使用来自Rapid API的16000多个API，假设其中一部分API可能能够解决查询。AnyTool主要包括三个元素：具有层次结构的API检索器、解决器以及自我反思机制，后者能够在初始解决方案无法实现时重新激活AnyTool。AnyTool依靠GPT-4的函数调用功能，无需训练外部模块。我们还重新审视了之前工作中引入的评估协议，并发现该协议存在一个限制，导致通过率人为上升。通过修改评估协议以更好地反映实际应用场景，我们引入了一个名为AnyToolBench的附加基准测试。实验表明，AnyTool 在大规模API调用方面表现出色。",
    "tldr": "AnyTool是一个自我反思、层次化代理系统，用于大规模API调用，它通过使用16000多个API解决用户查询，并具有重新激活机制以应对问题。与之前工作相比，我们重新审视了评估协议，并引入了一个新的基准测试，以更好地反映实际应用场景。实验表明，AnyTool在大规模API调用方面表现出色。"
}