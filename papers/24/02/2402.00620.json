{
    "title": "Actor Identification in Discourse: A Challenge for LLMs?",
    "abstract": "The identification of political actors who put forward claims in public debate is a crucial step in the construction of discourse networks, which are helpful to analyze societal debates. Actor identification is, however, rather challenging: Often, the locally mentioned speaker of a claim is only a pronoun (\"He proposed that [claim]\"), so recovering the canonical actor name requires discourse understanding. We compare a traditional pipeline of dedicated NLP components (similar to those applied to the related task of coreference) with a LLM, which appears a good match for this generation task. Evaluating on a corpus of German actors in newspaper reports, we find surprisingly that the LLM performs worse. Further analysis reveals that the LLM is very good at identifying the right reference, but struggles to generate the correct canonical form. This points to an underlying issue in LLMs with controlling generated output. Indeed, a hybrid model combining the LLM with a classifier to normaliz",
    "link": "https://arxiv.org/abs/2402.00620",
    "context": "Title: Actor Identification in Discourse: A Challenge for LLMs?\nAbstract: The identification of political actors who put forward claims in public debate is a crucial step in the construction of discourse networks, which are helpful to analyze societal debates. Actor identification is, however, rather challenging: Often, the locally mentioned speaker of a claim is only a pronoun (\"He proposed that [claim]\"), so recovering the canonical actor name requires discourse understanding. We compare a traditional pipeline of dedicated NLP components (similar to those applied to the related task of coreference) with a LLM, which appears a good match for this generation task. Evaluating on a corpus of German actors in newspaper reports, we find surprisingly that the LLM performs worse. Further analysis reveals that the LLM is very good at identifying the right reference, but struggles to generate the correct canonical form. This points to an underlying issue in LLMs with controlling generated output. Indeed, a hybrid model combining the LLM with a classifier to normaliz",
    "path": "papers/24/02/2402.00620.json",
    "total_tokens": 909,
    "translated_title": "论述中的角色识别：LLMs的挑战？",
    "translated_abstract": "在构建辩论网络并分析社会辩论时，识别政治角色提出的主张是一个关键步骤。然而，角色识别是非常具有挑战性的：通常，主张的本地提及人只是一个代词（“他建议[主张]”），因此恢复出正式的角色名称需要进行辩论理解。我们将一个传统的专用NLP组件流水线（类似于相关指称任务中应用的组件）与一个LLM进行比较，LLM似乎很适合这个生成任务。通过在德国报纸报道的角色语料库上进行评估，我们发现LLM表现出乎意料地较差。进一步的分析揭示LLM在识别正确引用方面非常好，但在生成正确的正式形式方面遇到了困难。这指向了LLMs在控制生成输出方面存在的潜在问题。事实上，将LLM与分类器结合起来进行规范化的混合模型能改善LLM的性能。",
    "tldr": "论文探讨了在辩论中识别政治角色的挑战，使用了传统的NLP组件与LLM进行比较，并发现LLM在生成正确的正式形式方面存在困难。作者提出了将LLM与分类器结合的混合模型来改善性能。"
}