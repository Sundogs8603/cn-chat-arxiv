{
    "title": "Correctness Verification of Neural Networks Approximating Differential Equations",
    "abstract": "Verification of Neural Networks (NNs) that approximate the solution of Partial Differential Equations (PDEs) is a major milestone towards enhancing their trustworthiness and accelerating their deployment, especially for safety-critical systems. If successful, such NNs can become integral parts of simulation software tools which can accelerate the simulation of complex dynamic systems more than 100 times. However, the verification of these functions poses major challenges; it is not straightforward how to efficiently bound them or how to represent the derivative of the NN. This work addresses both these problems. First, we define the NN derivative as a finite difference approximation. Then, we formulate the PDE residual bounding problem alongside the Initial Value Problem's error propagation. Finally, for the first time, we tackle the problem of bounding an NN function without a priori knowledge of the output domain. For this, we build a parallel branching algorithm that combines the in",
    "link": "https://arxiv.org/abs/2402.07621",
    "context": "Title: Correctness Verification of Neural Networks Approximating Differential Equations\nAbstract: Verification of Neural Networks (NNs) that approximate the solution of Partial Differential Equations (PDEs) is a major milestone towards enhancing their trustworthiness and accelerating their deployment, especially for safety-critical systems. If successful, such NNs can become integral parts of simulation software tools which can accelerate the simulation of complex dynamic systems more than 100 times. However, the verification of these functions poses major challenges; it is not straightforward how to efficiently bound them or how to represent the derivative of the NN. This work addresses both these problems. First, we define the NN derivative as a finite difference approximation. Then, we formulate the PDE residual bounding problem alongside the Initial Value Problem's error propagation. Finally, for the first time, we tackle the problem of bounding an NN function without a priori knowledge of the output domain. For this, we build a parallel branching algorithm that combines the in",
    "path": "papers/24/02/2402.07621.json",
    "total_tokens": 826,
    "translated_title": "神经网络逼近微分方程的正确性验证",
    "translated_abstract": "验证逼近偏微分方程（PDE）解的神经网络（NN）是提高其可信度和加速部署的重要里程碑，特别是对于安全关键系统。如果成功，这些NN可以成为模拟软件工具的重要组成部分，可以将复杂动态系统的模拟加速100倍以上。然而，这些函数的验证面临重大挑战；如何高效地界定它们或如何表示NN的导数都不是直接的。本文解决了这两个问题。首先，我们将NN的导数定义为有限差分近似。然后，我们将PDE残差界定问题与初始值问题的误差传播进行了形式化。最后，我们首次解决了在没有输出域先验知识的情况下界定NN函数的问题。为此，我们构建了一个并行分支算法，将近似处理领域融合在一起。",
    "tldr": "这项工作解决了神经网络逼近微分方程解的正确性验证问题，通过定义神经网络的导数近似和建立并行分支算法，有效界定了函数的上下界，并处理了没有输出域先验知识的情况。"
}