{
    "title": "Navigating the Maize: Cyclic and conditional computational graphs for molecular simulation",
    "abstract": "arXiv:2402.10064v1 Announce Type: cross  Abstract: Many computational chemistry and molecular simulation workflows can be expressed as graphs. This abstraction is useful to modularize and potentially reuse existing components, as well as provide parallelization and ease reproducibility. Existing tools represent the computation as a directed acyclic graph (DAG), thus allowing efficient execution by parallelization of concurrent branches. These systems can, however, generally not express cyclic and conditional workflows. We therefore developed Maize, a workflow manager for cyclic and conditional graphs based on the principles of flow-based programming. By running each node of the graph concurrently in separate processes and allowing communication at any time through dedicated inter-node channels, arbitrary graph structures can be executed. We demonstrate the effectiveness of the tool on a dynamic active learning task in computational drug design, involving the use of a small molecule gen",
    "link": "https://arxiv.org/abs/2402.10064",
    "context": "Title: Navigating the Maize: Cyclic and conditional computational graphs for molecular simulation\nAbstract: arXiv:2402.10064v1 Announce Type: cross  Abstract: Many computational chemistry and molecular simulation workflows can be expressed as graphs. This abstraction is useful to modularize and potentially reuse existing components, as well as provide parallelization and ease reproducibility. Existing tools represent the computation as a directed acyclic graph (DAG), thus allowing efficient execution by parallelization of concurrent branches. These systems can, however, generally not express cyclic and conditional workflows. We therefore developed Maize, a workflow manager for cyclic and conditional graphs based on the principles of flow-based programming. By running each node of the graph concurrently in separate processes and allowing communication at any time through dedicated inter-node channels, arbitrary graph structures can be executed. We demonstrate the effectiveness of the tool on a dynamic active learning task in computational drug design, involving the use of a small molecule gen",
    "path": "papers/24/02/2402.10064.json",
    "total_tokens": 775,
    "translated_title": "导航玉米：分子模拟的循环和条件计算图",
    "translated_abstract": "许多计算化学和分子模拟工作流程可以表示为计算图。这种抽象有助于模块化和潜在地重用现有组件，并提供并行化和易于复制。现有工具将计算表示为有向无环图(DAG)，从而通过并行化并发分支来实现高效执行。然而，这些系统通常无法表示循环和条件工作流程。因此，我们开发了Maize，一种基于流程编程原理的、用于循环和条件图的工作流管理器。通过在单独的进程中同时运行图中的每个节点，并在任何时间通过专用的节点间通道进行通信，可以执行任意的图结构。我们通过在计算药物设计中进行动态主动学习任务来展示工具的有效性，其中涉及使用小分子 gen",
    "tldr": "该论文介绍了一种用于分子模拟的循环和条件计算图的工作流管理器，通过并行化和通信实现任意图结构的执行，具有很高的实用性和效果。"
}