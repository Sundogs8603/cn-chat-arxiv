{
    "title": "REPOFUSE: Repository-Level Code Completion with Fused Dual Context",
    "abstract": "arXiv:2402.14323v1 Announce Type: cross  Abstract: The success of language models in code assistance has spurred the proposal of repository-level code completion as a means to enhance prediction accuracy, utilizing the context from the entire codebase. However, this amplified context can inadvertently increase inference latency, potentially undermining the developer experience and deterring tool adoption-a challenge we termed the Context-Latency Conundrum. This paper introduces RepoGenix, a pioneering solution designed to enhance repository-level code completion without the latency trade-off. RepoGenix uniquely fuses two types of contexts: the analogy context, rooted in code analogies, and the rationale context, which encompasses in-depth semantic relationships. We propose a novel rank truncated generation (RTG) technique that efficiently condenses these contexts into prompts with restricted size. This enables RepoGenix to deliver precise code completions while maintaining inference ef",
    "link": "https://arxiv.org/abs/2402.14323",
    "context": "Title: REPOFUSE: Repository-Level Code Completion with Fused Dual Context\nAbstract: arXiv:2402.14323v1 Announce Type: cross  Abstract: The success of language models in code assistance has spurred the proposal of repository-level code completion as a means to enhance prediction accuracy, utilizing the context from the entire codebase. However, this amplified context can inadvertently increase inference latency, potentially undermining the developer experience and deterring tool adoption-a challenge we termed the Context-Latency Conundrum. This paper introduces RepoGenix, a pioneering solution designed to enhance repository-level code completion without the latency trade-off. RepoGenix uniquely fuses two types of contexts: the analogy context, rooted in code analogies, and the rationale context, which encompasses in-depth semantic relationships. We propose a novel rank truncated generation (RTG) technique that efficiently condenses these contexts into prompts with restricted size. This enables RepoGenix to deliver precise code completions while maintaining inference ef",
    "path": "papers/24/02/2402.14323.json",
    "total_tokens": 872,
    "translated_title": "REPOFUSE：具有融合双重上下文的仓库级代码自动补全",
    "translated_abstract": "语言模型在代码辅助方面取得的成功推动了提出仓库级代码自动补全作为提高预测准确性的手段，利用整个代码库的上下文。然而，这种增强的上下文可能会无意中增加推理延迟，潜在地损害开发者体验并妨碍工具的采用-这是我们称之为上下文-延迟困境的挑战。本文介绍了 RepoGenix，这是一个旨在提高仓库级代码自动补全而无需延迟折衷的开创性解决方案。RepoGenix 独特地融合了两种类型的上下文：根植于代码类比的类比上下文和包含深度语义关系的理性上下文。我们提出了一种新颖的截断排名生成（RTG）技术，有效地将这些上下文压缩为限制大小的提示。这使得 RepoGenix 能够在保持推理效率的同时提供精确的代码自动补全。",
    "tldr": "RepoGenix独特融合类比上下文和理性上下文，并提出了截断排名生成（RTG）技术，以提高仓库级代码自动补全的准确性而不牺牲推理效率。",
    "en_tdlr": "RepoGenix uniquely fuses analogy context and rationale context and proposes rank truncated generation (RTG) technique to enhance repository-level code completion accuracy without sacrificing inference efficiency."
}