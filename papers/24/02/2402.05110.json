{
    "title": "Opening the AI black box: program synthesis via mechanistic interpretability",
    "abstract": "We present MIPS, a novel method for program synthesis based on automated mechanistic interpretability of neural networks trained to perform the desired task, auto-distilling the learned algorithm into Python code. We test MIPS on a benchmark of 62 algorithmic tasks that can be learned by an RNN and find it highly complementary to GPT-4: MIPS solves 32 of them, including 13 that are not solved by GPT-4 (which also solves 30). MIPS uses an integer autoencoder to convert the RNN into a finite state machine, then applies Boolean or integer symbolic regression to capture the learned algorithm. As opposed to large language models, this program synthesis technique makes no use of (and is therefore not limited by) human training data such as algorithms and code from GitHub. We discuss opportunities and challenges for scaling up this approach to make machine-learned models more interpretable and trustworthy.",
    "link": "https://arxiv.org/abs/2402.05110",
    "context": "Title: Opening the AI black box: program synthesis via mechanistic interpretability\nAbstract: We present MIPS, a novel method for program synthesis based on automated mechanistic interpretability of neural networks trained to perform the desired task, auto-distilling the learned algorithm into Python code. We test MIPS on a benchmark of 62 algorithmic tasks that can be learned by an RNN and find it highly complementary to GPT-4: MIPS solves 32 of them, including 13 that are not solved by GPT-4 (which also solves 30). MIPS uses an integer autoencoder to convert the RNN into a finite state machine, then applies Boolean or integer symbolic regression to capture the learned algorithm. As opposed to large language models, this program synthesis technique makes no use of (and is therefore not limited by) human training data such as algorithms and code from GitHub. We discuss opportunities and challenges for scaling up this approach to make machine-learned models more interpretable and trustworthy.",
    "path": "papers/24/02/2402.05110.json",
    "total_tokens": 897,
    "translated_title": "打开AI黑箱：通过机械解释性实现程序合成",
    "translated_abstract": "我们提出了一种新颖的方法MIPS，基于神经网络自动机械解释性训练所需任务，将学习到的算法转化为Python代码。我们在一个包含62个可通过RNN学习的算法任务的基准测试中对MIPS进行了测试，发现它与GPT-4非常互补：MIPS解决了其中32个问题，其中包括GPT-4无法解决的13个问题（GPT-4解决了30个问题）。MIPS使用整数自动编码器将RNN转化为有限状态机，然后应用布尔或整数符号回归来捕捉学习到的算法。与大型语言模型相比，这种程序合成技术不使用（因此不受限于）如GitHub上的算法和代码等人工训练数据。我们讨论了扩展这种方法以使机器学习模型更可解释和可信的机会和挑战。",
    "tldr": "本文提出了一种新的程序合成方法MIPS，通过机械解释性训练神经网络，将学习到的算法转化为Python代码。MIPS在基准测试中表现出色，解决了32个算法任务，其中13个是其他方法无法解决的。该方法不使用人工训练数据，具有较高的可扩展性和解释性。",
    "en_tdlr": "This paper presents MIPS, a new method for program synthesis that converts the learned algorithm into Python code by training neural networks with mechanistic interpretability. MIPS performs well in benchmark tests, solving 32 algorithmic tasks, including 13 that other methods cannot solve. It does not rely on human training data and offers scalability and interpretability."
}