{
    "title": "Code Needs Comments: Enhancing Code LLMs with Comment Augmentation",
    "abstract": "arXiv:2402.13013v1 Announce Type: new  Abstract: The programming skill is one crucial ability for Large Language Models (LLMs), necessitating a deep understanding of programming languages (PLs) and their correlation with natural languages (NLs). We examine the impact of pre-training data on code-focused LLMs' performance by assessing the comment density as a measure of PL-NL alignment. Given the scarcity of code-comment aligned data in pre-training corpora, we introduce a novel data augmentation method that generates comments for existing code, coupled with a data filtering strategy that filters out code data poorly correlated with natural language. We conducted experiments on three code-focused LLMs and observed consistent improvements in performance on two widely-used programming skill benchmarks. Notably, the model trained on the augmented data outperformed both the model used for generating comments and the model further trained on the data without augmentation.",
    "link": "https://arxiv.org/abs/2402.13013",
    "context": "Title: Code Needs Comments: Enhancing Code LLMs with Comment Augmentation\nAbstract: arXiv:2402.13013v1 Announce Type: new  Abstract: The programming skill is one crucial ability for Large Language Models (LLMs), necessitating a deep understanding of programming languages (PLs) and their correlation with natural languages (NLs). We examine the impact of pre-training data on code-focused LLMs' performance by assessing the comment density as a measure of PL-NL alignment. Given the scarcity of code-comment aligned data in pre-training corpora, we introduce a novel data augmentation method that generates comments for existing code, coupled with a data filtering strategy that filters out code data poorly correlated with natural language. We conducted experiments on three code-focused LLMs and observed consistent improvements in performance on two widely-used programming skill benchmarks. Notably, the model trained on the augmented data outperformed both the model used for generating comments and the model further trained on the data without augmentation.",
    "path": "papers/24/02/2402.13013.json",
    "total_tokens": 813,
    "translated_title": "代码需要注释：使用注释增强代码LLMs",
    "translated_abstract": "编程技能是大型语言模型（LLMs）的一个重要能力，需要深入理解编程语言（PLs）及其与自然语言（NLs）的相关性。我们通过评估注释密度作为PL-NL对齐的衡量标准，来研究预训练数据对以代码为焦点的LLMs性能的影响。由于预训练语料库中缺乏与代码注释对齐的数据，我们引入了一种新的数据增强方法，为现有代码生成注释，同时采用数据过滤策略来滤除与自然语言关联性较差的代码数据。我们在三个以代码为焦点的LLMs上进行了实验，并观察到在两个广泛使用的编程技能基准测试中性能的一致提升。值得注意的是，在增强数据上训练的模型优于生成注释的模型以及在没有增强数据的情况下进一步训练的模型。",
    "tldr": "通过引入新的数据增强方法，为现有代码生成注释，并利用数据过滤策略来提高以代码为焦点的语言模型的性能。"
}