{
    "title": "Exploring Interaction Patterns for Debugging: Enhancing Conversational Capabilities of AI-assistants",
    "abstract": "The widespread availability of Large Language Models (LLMs) within Integrated Development Environments (IDEs) has led to their speedy adoption. Conversational interactions with LLMs enable programmers to obtain natural language explanations for various software development tasks. However, LLMs often leap to action without sufficient context, giving rise to implicit assumptions and inaccurate responses. Conversations between developers and LLMs are primarily structured as question-answer pairs, where the developer is responsible for asking the the right questions and sustaining conversations across multiple turns. In this paper, we draw inspiration from interaction patterns and conversation analysis -- to design Robin, an enhanced conversational AI-assistant for debugging. Through a within-subjects user study with 12 industry professionals, we find that equipping the LLM to -- (1) leverage the insert expansion interaction pattern, (2) facilitate turn-taking, and (3) utilize debugging wo",
    "link": "https://arxiv.org/abs/2402.06229",
    "context": "Title: Exploring Interaction Patterns for Debugging: Enhancing Conversational Capabilities of AI-assistants\nAbstract: The widespread availability of Large Language Models (LLMs) within Integrated Development Environments (IDEs) has led to their speedy adoption. Conversational interactions with LLMs enable programmers to obtain natural language explanations for various software development tasks. However, LLMs often leap to action without sufficient context, giving rise to implicit assumptions and inaccurate responses. Conversations between developers and LLMs are primarily structured as question-answer pairs, where the developer is responsible for asking the the right questions and sustaining conversations across multiple turns. In this paper, we draw inspiration from interaction patterns and conversation analysis -- to design Robin, an enhanced conversational AI-assistant for debugging. Through a within-subjects user study with 12 industry professionals, we find that equipping the LLM to -- (1) leverage the insert expansion interaction pattern, (2) facilitate turn-taking, and (3) utilize debugging wo",
    "path": "papers/24/02/2402.06229.json",
    "total_tokens": 859,
    "translated_title": "探索针对调试的交互模式：增强AI助手的对话能力",
    "translated_abstract": "大规模语言模型（LLM）在集成开发环境（IDEs）中的广泛应用已经迅速普及。与LLMs的对话交互使程序员能够获取各种软件开发任务的自然语言解释。然而，LLMs经常在没有足够上下文的情况下立即采取行动，导致隐含的假设和不准确的回应。开发者和LLMs之间的对话主要以问答对的形式进行，开发者负责提出正确的问题并在多个回合中维持对话。在本文中，我们从交互模式和对话分析中汲取灵感，设计了一个增强的用于调试的对话型AI助手Robin。通过对12位行业专业人员进行的一项用户研究，我们发现，为LLM配备以下功能可以改善其性能：(1)利用插入扩展交互模式，(2)促进轮流发言，(3)利用调试工作。",
    "tldr": "本文研究了增强AI助手的对话能力，设计了一个名为Robin的增强型对话型AI助手，通过使用交互模式和对话分析，提高了其在调试方面的性能。",
    "en_tdlr": "This paper explores enhancing the conversational capabilities of AI-assistants and presents Robin, an enhanced conversational AI-assistant for debugging. By utilizing interaction patterns and conversation analysis, Robin improves performance in debugging tasks."
}