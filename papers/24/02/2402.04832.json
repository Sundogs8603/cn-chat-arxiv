{
    "title": "Structured d-DNNF Is Not Closed Under Negation",
    "abstract": "Both structured d-DNNF and SDD can be exponentially more succinct than OBDD. Moreover, SDD is essentially as tractable as OBDD. But this has left two important open questions. Firstly, does OBDD support more tractable transformations than structured d-DNNF? And secondly, is structured d-DNNF more succinct than SDD? In this paper, we answer both questions in the affirmative. For the first question we show that, unlike OBDD, structured d-DNNF does not support polytime negation, disjunction, or existential quantification operations. As a corollary, we deduce that there are functions with an equivalent polynomial-sized structured d-DNNF but with no such representation as an SDD, thus answering the second question. We also lift this second result to arithmetic circuits (AC) to show a succinctness gap between PSDD and the monotone AC analogue to structured d-DNNF.",
    "link": "https://arxiv.org/abs/2402.04832",
    "context": "Title: Structured d-DNNF Is Not Closed Under Negation\nAbstract: Both structured d-DNNF and SDD can be exponentially more succinct than OBDD. Moreover, SDD is essentially as tractable as OBDD. But this has left two important open questions. Firstly, does OBDD support more tractable transformations than structured d-DNNF? And secondly, is structured d-DNNF more succinct than SDD? In this paper, we answer both questions in the affirmative. For the first question we show that, unlike OBDD, structured d-DNNF does not support polytime negation, disjunction, or existential quantification operations. As a corollary, we deduce that there are functions with an equivalent polynomial-sized structured d-DNNF but with no such representation as an SDD, thus answering the second question. We also lift this second result to arithmetic circuits (AC) to show a succinctness gap between PSDD and the monotone AC analogue to structured d-DNNF.",
    "path": "papers/24/02/2402.04832.json",
    "total_tokens": 778,
    "translated_title": "结构化的d-DNNF不支持否定",
    "translated_abstract": "结构化的d-DNNF和SDD比OBDD更简洁。此外，SDD的可处理性与OBDD基本相同。但这留下了两个重要的问题。首先，OBDD是否支持比结构化的d-DNNF更可处理的转换？其次，结构化的d-DNNF是否比SDD更简洁？在本文中，我们对这两个问题给予了肯定的回答。对于第一个问题，我们证明了与OBDD不同，结构化的d-DNNF不支持多项式时间的否定、析取或存在量化操作。作为推论，我们推断出存在一些函数，其等价的多项式大小的结构化d-DNNF表示不存在SDD表示，从而回答了第二个问题。我们还利用这个第二个结果对算术电路（AC）进行了推广，展示了PSDD和结构化d-DNNF的单调AC对应之间的简洁差距。",
    "tldr": "结构化的d-DNNF不支持多项式时间的否定、析取或存在量化操作，回答了OBDD是否支持更可处理的转换问题。结构化的d-DNNF比SDD更简洁，不存在等价的多项式大小的SDD表示。"
}