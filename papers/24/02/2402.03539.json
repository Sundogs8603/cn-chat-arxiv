{
    "title": "Extended Version of: On the Structural Hardness of Answer Set Programming: Can Structure Efficiently Confine the Power of Disjunctions?",
    "abstract": "Answer Set Programming (ASP) is a generic problem modeling and solving framework with a strong focus on knowledge representation and a rapid growth of industrial applications. So far, the study of complexity resulted in characterizing hardness and determining their sources, fine-grained insights in the form of dichotomy-style results, as well as detailed parameterized complexity landscapes. Unfortunately, for the well-known parameter treewidth disjunctive programs require double-exponential runtime under reasonable complexity assumptions. This quickly becomes out of reach. We deal with the classification of structural parameters for disjunctive ASP on the program's rule structure (incidence graph).   First, we provide a polynomial kernel to obtain single-exponential runtime in terms of vertex cover size, despite subset-minimization being not represented in the program's structure. Then we turn our attention to strictly better structural parameters between vertex cover size and treewidt",
    "link": "https://arxiv.org/abs/2402.03539",
    "context": "Title: Extended Version of: On the Structural Hardness of Answer Set Programming: Can Structure Efficiently Confine the Power of Disjunctions?\nAbstract: Answer Set Programming (ASP) is a generic problem modeling and solving framework with a strong focus on knowledge representation and a rapid growth of industrial applications. So far, the study of complexity resulted in characterizing hardness and determining their sources, fine-grained insights in the form of dichotomy-style results, as well as detailed parameterized complexity landscapes. Unfortunately, for the well-known parameter treewidth disjunctive programs require double-exponential runtime under reasonable complexity assumptions. This quickly becomes out of reach. We deal with the classification of structural parameters for disjunctive ASP on the program's rule structure (incidence graph).   First, we provide a polynomial kernel to obtain single-exponential runtime in terms of vertex cover size, despite subset-minimization being not represented in the program's structure. Then we turn our attention to strictly better structural parameters between vertex cover size and treewidt",
    "path": "papers/24/02/2402.03539.json",
    "total_tokens": 834,
    "translated_title": "对回答集编程的结构难度进行的扩展研究：结构能否有效限制析取的能力？",
    "translated_abstract": "回答集编程（ASP）是一个通用的问题建模和求解框架，主要关注知识表示和工业应用的快速增长。迄今为止，复杂性的研究导致了难度的特征化和确定其来源，以及类似二分法结果的细节性参数化复杂性分析。不幸的是，在已知的参数树宽下，合取规模的非合取程序在合理的复杂性假设下需要双指数时间运行，这很快变得难以达到。我们研究了关于非合取ASP的结构参数的分类问题（入射图）。首先，我们提供了一个多项式核来获得与顶点覆盖大小对应的单指数时间运行，尽管子集最小化在程序的结构中没有被表示。然后，我们将注意力转向顶点覆盖大小和树宽之间严格更好的结构参数。",
    "tldr": "我们进行了对回答集编程的结构参数的分类研究，并提供了一种多项式核以实现与顶点覆盖大小对应的单指数时间运行。",
    "en_tdlr": "We conducted a classification study on the structural parameters of answer set programming, and provided a polynomial kernel for achieving single-exponential runtime in terms of vertex cover size."
}