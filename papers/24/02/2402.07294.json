{
    "title": "On the Effectiveness of Machine Learning-based Call Graph Pruning: An Empirical Study",
    "abstract": "Static call graph (CG) construction often over-approximates call relations, leading to sound, but imprecise results. Recent research has explored machine learning (ML)-based CG pruning as a means to enhance precision by eliminating false edges. However, current methods suffer from a limited evaluation dataset, imbalanced training data, and reduced recall, which affects practical downstream analyses. Prior results were also not compared with advanced static CG construction techniques yet. This study tackles these issues. We introduce the NYXCorpus, a dataset of real-world Java programs with high test coverage and we collect traces from test executions and build a ground truth of dynamic CGs. We leverage these CGs to explore conservative pruning strategies during the training and inference of ML-based CG pruners. We conduct a comparative analysis of static CGs generated using zero control flow analysis (0-CFA) and those produced by a context-sensitive 1-CFA algorithm, evaluating both wit",
    "link": "https://arxiv.org/abs/2402.07294",
    "context": "Title: On the Effectiveness of Machine Learning-based Call Graph Pruning: An Empirical Study\nAbstract: Static call graph (CG) construction often over-approximates call relations, leading to sound, but imprecise results. Recent research has explored machine learning (ML)-based CG pruning as a means to enhance precision by eliminating false edges. However, current methods suffer from a limited evaluation dataset, imbalanced training data, and reduced recall, which affects practical downstream analyses. Prior results were also not compared with advanced static CG construction techniques yet. This study tackles these issues. We introduce the NYXCorpus, a dataset of real-world Java programs with high test coverage and we collect traces from test executions and build a ground truth of dynamic CGs. We leverage these CGs to explore conservative pruning strategies during the training and inference of ML-based CG pruners. We conduct a comparative analysis of static CGs generated using zero control flow analysis (0-CFA) and those produced by a context-sensitive 1-CFA algorithm, evaluating both wit",
    "path": "papers/24/02/2402.07294.json",
    "total_tokens": 900,
    "translated_title": "机器学习基于调用图剪枝的有效性：一个实证研究",
    "translated_abstract": "静态调用图(CG)构建经常过度近似调用关系，导致结果精确但不准确。最近的研究探索了基于机器学习(ML)的CG剪枝作为一种提高精确性的手段，通过消除虚假边缘。然而，目前的方法存在评估数据集有限、训练数据不平衡，以及召回率降低等问题，这影响了实际的下游分析。之前的结果也没有与先进的静态CG构建技术进行比较。这项研究解决了这些问题。我们引入了NYXCorpus，一个具有高测试覆盖率的真实Java程序数据集，并从测试执行中收集轨迹并构建动态CG的基准。我们利用这些CG来探索ML-based CG剪枝器在训练和推断过程中的保守剪枝策略。我们对静态CG使用零控制流分析(0-CFA)生成的结果和由上下文敏感的1-CFA算法生成的结果进行了比较分析。",
    "tldr": "本研究通过引入具有高测试覆盖率的真实Java程序数据集，探索了机器学习基于调用图剪枝的有效性，并通过对比分析静态调用图生成技术来解决当前方法存在的问题。"
}