{
    "title": "Neural Models for Source Code Synthesis and Completion",
    "abstract": "Natural language (NL) to code suggestion systems assist developers in Integrated Development Environments (IDEs) by translating NL utterances into compilable code snippet. The current approaches mainly involve hard-coded, rule-based systems based on semantic parsing. These systems make heavy use of hand-crafted rules that map patterns in NL or elements in its syntax parse tree to various query constructs and can only work on a limited subset of NL with a restricted NL syntax. These systems are unable to extract semantic information from the coding intents of the developer, and often fail to infer types, names, and the context of the source code to get accurate system-level code suggestions. In this master thesis, we present sequence-to-sequence deep learning models and training paradigms to map NL to general-purpose programming languages that can assist users with suggestions of source code snippets, given a NL intent, and also extend auto-completion functionality of the source code to",
    "link": "https://arxiv.org/abs/2402.06690",
    "context": "Title: Neural Models for Source Code Synthesis and Completion\nAbstract: Natural language (NL) to code suggestion systems assist developers in Integrated Development Environments (IDEs) by translating NL utterances into compilable code snippet. The current approaches mainly involve hard-coded, rule-based systems based on semantic parsing. These systems make heavy use of hand-crafted rules that map patterns in NL or elements in its syntax parse tree to various query constructs and can only work on a limited subset of NL with a restricted NL syntax. These systems are unable to extract semantic information from the coding intents of the developer, and often fail to infer types, names, and the context of the source code to get accurate system-level code suggestions. In this master thesis, we present sequence-to-sequence deep learning models and training paradigms to map NL to general-purpose programming languages that can assist users with suggestions of source code snippets, given a NL intent, and also extend auto-completion functionality of the source code to",
    "path": "papers/24/02/2402.06690.json",
    "total_tokens": 873,
    "translated_title": "源代码合成和补全的神经模型",
    "translated_abstract": "自然语言（NL）到代码建议系统通过将NL表达转化为可编译的代码片段来帮助集成开发环境（IDE）中的开发人员。当前的方法主要涉及基于语义解析的硬编码、规则系统。这些系统主要依靠手工制定的规则将NL的模式或其语法解析树中的元素映射到各种查询结构，并且只能处理受限制的NL子集和限制的NL语法。这些系统无法从开发者的编码意图中提取语义信息，常常无法推断类型、名称和源代码的上下文以获得准确的系统级代码建议。在本硕士论文中，我们提出了序列到序列的深度学习模型和训练范式，以将NL映射到通用编程语言，可以根据NL的意图为用户提供源代码片段的建议，并扩展源代码的自动补全功能。",
    "tldr": "本论文提出了一种基于序列到序列的深度学习模型和训练方法，用于将自然语言转化为可编译的代码片段，并为开发人员提供源代码建议和自动补全功能。这一方法能够提取开发者的编码意图并准确推断类型、名称和上下文等信息。",
    "en_tdlr": "This paper presents a sequence-to-sequence deep learning model and training approach for translating natural language into compilable code snippets, providing source code suggestions and auto-completion functionality for developers. The approach extracts coding intents and accurately infers types, names, and context information."
}