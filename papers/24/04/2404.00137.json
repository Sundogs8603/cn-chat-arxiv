{
    "title": "Budget-aware Query Tuning: An AutoML Perspective",
    "abstract": "arXiv:2404.00137v1 Announce Type: cross  Abstract: Modern database systems rely on cost-based query optimizers to come up with good execution plans for input queries. Such query optimizers rely on cost models to estimate the costs of candidate query execution plans. A cost model represents a function from a set of cost units to query execution cost, where each cost unit specifies the unit cost of executing a certain type of query processing operation (such as table scan or join). These cost units are traditionally viewed as constants, whose values only depend on the platform configuration where the database system runs on top of but are invariant for queries processed by the database system. In this paper, we challenge this classic view by thinking of these cost units as variables instead. We show that, by varying the cost-unit values one can obtain query plans that significantly outperform the default query plans returned by the query optimizer when viewing the cost units as constants",
    "link": "https://arxiv.org/abs/2404.00137",
    "context": "Title: Budget-aware Query Tuning: An AutoML Perspective\nAbstract: arXiv:2404.00137v1 Announce Type: cross  Abstract: Modern database systems rely on cost-based query optimizers to come up with good execution plans for input queries. Such query optimizers rely on cost models to estimate the costs of candidate query execution plans. A cost model represents a function from a set of cost units to query execution cost, where each cost unit specifies the unit cost of executing a certain type of query processing operation (such as table scan or join). These cost units are traditionally viewed as constants, whose values only depend on the platform configuration where the database system runs on top of but are invariant for queries processed by the database system. In this paper, we challenge this classic view by thinking of these cost units as variables instead. We show that, by varying the cost-unit values one can obtain query plans that significantly outperform the default query plans returned by the query optimizer when viewing the cost units as constants",
    "path": "papers/24/04/2404.00137.json",
    "total_tokens": 642,
    "translated_title": "预算感知查询优化：自动机器学习视角",
    "translated_abstract": "现代数据库系统依赖基于成本的查询优化器为输入查询提供良好的执行计划。这种查询优化器依赖成本模型来估算候选查询执行计划的成本。本文挑战了传统观念，将这些成本单位视为变量，表明通过调整成本单位值，可以获得明显优于将成本单位视为常数时查询优化器返回的默认查询计划的查询计划。",
    "tldr": "将传统成本单位视为变量，通过调整值可以获得比默认查询计划更优的查询计划",
    "en_tdlr": "Treating traditional cost units as variables and adjusting their values can lead to query plans that outperform default query plans."
}