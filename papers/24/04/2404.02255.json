{
    "title": "$\\texttt{LM}^\\texttt{2}$: A Simple Society of Language Models Solves Complex Reasoning",
    "abstract": "arXiv:2404.02255v1 Announce Type: cross  Abstract: Despite demonstrating emergent reasoning abilities, Large Language Models (LLMS) often lose track of complex, multi-step reasoning. Existing studies show that providing guidance via decomposing the original question into multiple subproblems elicits more robustness in LLM reasoning -- a decomposer generates the subproblems, and a solver solves each of these subproblems. However, these techniques fail to accommodate coordination between the decomposer and the solver modules (either in a single model or different specialized ones) -- the decomposer does not keep track of the ability of the solver to follow the decomposed reasoning. In this paper, we propose LM2 to address these challenges. LM2 modularizes the decomposition, solution, and verification into three different language models. The decomposer module identifies the key concepts necessary to solve the problem and generates step-by-step subquestions according to the reasoning requ",
    "link": "https://arxiv.org/abs/2404.02255",
    "context": "Title: $\\texttt{LM}^\\texttt{2}$: A Simple Society of Language Models Solves Complex Reasoning\nAbstract: arXiv:2404.02255v1 Announce Type: cross  Abstract: Despite demonstrating emergent reasoning abilities, Large Language Models (LLMS) often lose track of complex, multi-step reasoning. Existing studies show that providing guidance via decomposing the original question into multiple subproblems elicits more robustness in LLM reasoning -- a decomposer generates the subproblems, and a solver solves each of these subproblems. However, these techniques fail to accommodate coordination between the decomposer and the solver modules (either in a single model or different specialized ones) -- the decomposer does not keep track of the ability of the solver to follow the decomposed reasoning. In this paper, we propose LM2 to address these challenges. LM2 modularizes the decomposition, solution, and verification into three different language models. The decomposer module identifies the key concepts necessary to solve the problem and generates step-by-step subquestions according to the reasoning requ",
    "path": "papers/24/04/2404.02255.json",
    "total_tokens": 881,
    "translated_title": "$\\texttt{LM}^\\texttt{2}$: 一种简单的语言模型协同解决复杂推理问题",
    "translated_abstract": "尽管展示了出现推理能力，但大型语言模型(LLMS)经常会在复杂的、多步骤的推理中迷失方向。现有研究表明，通过将原始问题分解为多个子问题来提供指导，可以引发LLM推理的更强健性——一个分解器生成子问题，一个解算器解决每个这些子问题。然而，这些技术未能适应分解器和解算器模块之间的协调(无论是在单一模型中还是在不同的专门模型中)——分解器没有跟踪解算器按照分解的推理。在本文中，我们提出了LM2来应对这些挑战。LM2将分解、解决和验证模块化为三种不同的语言模型。分解器模块识别解决问题所需的关键概念，并根据推理要求生成逐步子问题。",
    "tldr": "LM2提出了一种简单的语言模型$\\texttt{LM}^\\texttt{2}$，该模型将分解、解决和验证模块化，通过分解器识别关键概念并生成逐步子问题，从而协同解决复杂推理问题。",
    "en_tdlr": "LM2 introduces a simple language model $\\texttt{LM}^\\texttt{2}$ that modularizes decomposition, solution, and verification, with the decomposer identifying key concepts and generating step-by-step subquestions to cooperatively solve complex reasoning."
}