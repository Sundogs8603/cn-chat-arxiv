{
    "title": "Exploring How Multiple Levels of GPT-Generated Programming Hints Support or Disappoint Novices",
    "abstract": "arXiv:2404.02213v1 Announce Type: cross  Abstract: Recent studies have integrated large language models (LLMs) into diverse educational contexts, including providing adaptive programming hints, a type of feedback focuses on helping students move forward during problem-solving. However, most existing LLM-based hint systems are limited to one single hint type. To investigate whether and how different levels of hints can support students' problem-solving and learning, we conducted a think-aloud study with 12 novices using the LLM Hint Factory, a system providing four levels of hints from general natural language guidance to concrete code assistance, varying in format and granularity. We discovered that high-level natural language hints alone can be helpless or even misleading, especially when addressing next-step or syntax-related help requests. Adding lower-level hints, like code examples with in-line comments, can better support students. The findings open up future work on customizing ",
    "link": "https://arxiv.org/abs/2404.02213",
    "context": "Title: Exploring How Multiple Levels of GPT-Generated Programming Hints Support or Disappoint Novices\nAbstract: arXiv:2404.02213v1 Announce Type: cross  Abstract: Recent studies have integrated large language models (LLMs) into diverse educational contexts, including providing adaptive programming hints, a type of feedback focuses on helping students move forward during problem-solving. However, most existing LLM-based hint systems are limited to one single hint type. To investigate whether and how different levels of hints can support students' problem-solving and learning, we conducted a think-aloud study with 12 novices using the LLM Hint Factory, a system providing four levels of hints from general natural language guidance to concrete code assistance, varying in format and granularity. We discovered that high-level natural language hints alone can be helpless or even misleading, especially when addressing next-step or syntax-related help requests. Adding lower-level hints, like code examples with in-line comments, can better support students. The findings open up future work on customizing ",
    "path": "papers/24/04/2404.02213.json",
    "total_tokens": 855,
    "translated_title": "探讨多层次的GPT生成的编程提示如何支持或使新手失望",
    "translated_abstract": "最近的研究已经将大型语言模型(LLMs)整合到不同的教育背景中，包括提供自适应编程提示，这种反馈类型侧重于帮助学生在解决问题时前进。然而，大多数现有的基于LLM的提示系统仅限于一种提示类型。为了调查不同级别的提示是否以及如何支持学生的问题解决和学习，我们对12名新手进行了一项自述思考研究，使用了LLM Hint Factory，这是一个系统，提供四个级别的提示，从一般的自然语言指导到具体的代码辅助，格式和粒度各不相同。我们发现仅使用高级别的自然语言提示可能是无助的，甚至会误导，特别是在处理下一步或与语法相关的帮助请求时。添加低级别的提示，如带有行内注释的代码示例，可以更好地支持学生。这些发现为定制化未来的工作打开了大门。",
    "tldr": "这项研究发现，向新手提供从一般自然语言指导到具体代码辅助等四个级别的提示，能更好地支持他们的问题解决和学习。",
    "en_tdlr": "This study found that providing novices with four levels of hints ranging from general natural language guidance to concrete code assistance better supports their problem-solving and learning."
}