{
    "title": "Development and Application of a Monte Carlo Tree Search Algorithm for Simulating Da Vinci Code Game Strategies",
    "abstract": "arXiv:2403.10720v1 Announce Type: new  Abstract: In this study, we explore the efficiency of the Monte Carlo Tree Search (MCTS), a prominent decision-making algorithm renowned for its effectiveness in complex decision environments, contingent upon the volume of simulations conducted. Notwithstanding its broad applicability, the algorithm's performance can be adversely impacted in certain scenarios, particularly within the domain of game strategy development. This research posits that the inherent branch divergence within the Da Vinci Code board game significantly impedes parallelism when executed on Graphics Processing Units (GPUs). To investigate this hypothesis, we implemented and meticulously evaluated two variants of the MCTS algorithm, specifically designed to assess the impact of branch divergence on computational performance. Our comparative analysis reveals a linear improvement in performance with the CPU-based implementation, in stark contrast to the GPU implementation, which ",
    "link": "https://arxiv.org/abs/2403.10720",
    "context": "Title: Development and Application of a Monte Carlo Tree Search Algorithm for Simulating Da Vinci Code Game Strategies\nAbstract: arXiv:2403.10720v1 Announce Type: new  Abstract: In this study, we explore the efficiency of the Monte Carlo Tree Search (MCTS), a prominent decision-making algorithm renowned for its effectiveness in complex decision environments, contingent upon the volume of simulations conducted. Notwithstanding its broad applicability, the algorithm's performance can be adversely impacted in certain scenarios, particularly within the domain of game strategy development. This research posits that the inherent branch divergence within the Da Vinci Code board game significantly impedes parallelism when executed on Graphics Processing Units (GPUs). To investigate this hypothesis, we implemented and meticulously evaluated two variants of the MCTS algorithm, specifically designed to assess the impact of branch divergence on computational performance. Our comparative analysis reveals a linear improvement in performance with the CPU-based implementation, in stark contrast to the GPU implementation, which ",
    "path": "papers/24/03/2403.10720.json",
    "total_tokens": 851,
    "translated_title": "开发和应用蒙特卡洛树搜索算法模拟达芬奇密码游戏策略",
    "translated_abstract": "在这项研究中，我们探讨了蒙特卡洛树搜索（MCTS）的效率，这是一种著名的决策算法，以其在复杂决策环境中的有效性而闻名，取决于进行的模拟数量。尽管该算法具有广泛的适用性，但在某些场景中，特别是在游戏策略开发领域，其性能可能会受到不利影响。本研究认为，达芬奇密码棋盘游戏中固有的分支分歧显著阻碍了在图形处理单元（GPU）上执行时的并行性。为了调查这一假设，我们实现并细致评估了两个变体的MCTS算法，专门设计用于评估分支分歧对计算性能的影响。我们的比较分析显示，与基于CPU的实现相比，在性能方面存在线性改进，与GPU实现形成鲜明对比。",
    "tldr": "本研究通过实现和评估两个MCTS算法变体，发现达芬奇密码棋盘游戏中的分支分歧明显阻碍了GPU执行时的并行性。",
    "en_tdlr": "This study implemented and evaluated two variants of the MCTS algorithm to find that branch divergence within the Da Vinci Code board game significantly impedes parallelism in GPU execution."
}