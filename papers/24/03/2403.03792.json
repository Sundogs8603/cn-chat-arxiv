{
    "title": "Neural Exec: Learning (and Learning from) Execution Triggers for Prompt Injection Attacks",
    "abstract": "arXiv:2403.03792v1 Announce Type: cross  Abstract: We introduce a new family of prompt injection attacks, termed Neural Exec. Unlike known attacks that rely on handcrafted strings (e.g., \"Ignore previous instructions and...\"), we show that it is possible to conceptualize the creation of execution triggers as a differentiable search problem and use learning-based methods to autonomously generate them.   Our results demonstrate that a motivated adversary can forge triggers that are not only drastically more effective than current handcrafted ones but also exhibit inherent flexibility in shape, properties, and functionality. In this direction, we show that an attacker can design and generate Neural Execs capable of persisting through multi-stage preprocessing pipelines, such as in the case of Retrieval-Augmented Generation (RAG)-based applications. More critically, our findings show that attackers can produce triggers that deviate markedly in form and shape from any known attack, sidestep",
    "link": "https://arxiv.org/abs/2403.03792",
    "context": "Title: Neural Exec: Learning (and Learning from) Execution Triggers for Prompt Injection Attacks\nAbstract: arXiv:2403.03792v1 Announce Type: cross  Abstract: We introduce a new family of prompt injection attacks, termed Neural Exec. Unlike known attacks that rely on handcrafted strings (e.g., \"Ignore previous instructions and...\"), we show that it is possible to conceptualize the creation of execution triggers as a differentiable search problem and use learning-based methods to autonomously generate them.   Our results demonstrate that a motivated adversary can forge triggers that are not only drastically more effective than current handcrafted ones but also exhibit inherent flexibility in shape, properties, and functionality. In this direction, we show that an attacker can design and generate Neural Execs capable of persisting through multi-stage preprocessing pipelines, such as in the case of Retrieval-Augmented Generation (RAG)-based applications. More critically, our findings show that attackers can produce triggers that deviate markedly in form and shape from any known attack, sidestep",
    "path": "papers/24/03/2403.03792.json",
    "total_tokens": 834,
    "translated_title": "神经执行：学习执行触发器用于提示注入攻击",
    "translated_abstract": "我们引入了一种名为神经执行（Neural Exec）的新型提示注入攻击。与依赖手工制作的字符串（例如“忽略先前的指令并...”）的已知攻击不同，我们展示了将创建执行触发器概念化为可微分搜索问题，并使用基于学习的方法自动生成执行触发器的可能性。我们的结果表明，一个积极进取的对手可以伪造出不仅比当前手工制作的触发器更加有效，而且在形状、属性和功能上表现出固有灵活性的触发器。在这方面，我们展示了攻击者可以设计和生成能够在经历多阶段预处理流水线的情况下持久存在的神经执行（Neural Exec），例如在基于检索增强生成（RAG）的应用中。更为关键的是，我们的发现表明，攻击者可以生成与任何已知攻击明显不同的形式和形状的触发器，绕过...",
    "tldr": "通过学习方法生成的执行触发器可以比当前手工制作的触发器更加有效，并表现出形状、属性和功能上的固有灵活性。",
    "en_tdlr": "Execution triggers generated through learning methods can be more effective than currently handcrafted ones, and exhibit inherent flexibility in shape, properties, and functionality."
}