{
    "title": "Automatic Generation of Python Programs Using Context-Free Grammars",
    "abstract": "arXiv:2403.06503v1 Announce Type: cross  Abstract: In recent years, data has emerged as the new gold, serving as a powerful tool for creating intelligent systems. However, procuring high-quality data remains challenging, especially for code. To address this, we developed TinyPy Generator, a tool that generates random Python programs using a context-free grammar. The generated programs are guaranteed to be correct by construction. Our system uses custom production rules (in the Backus-Naur Form (BNF) format) to recursively generate code. This allows us to generate code with different levels of complexity, ranging from code containing only assignments to more complex code containing conditionals and loops. Our proposed tool enables effortless large-scale Python code generation, beneficial for a wide range of applications. TinyPy Generator is particularly useful in the field of machine learning, where it can generate substantial amounts of Python code for training Python language models. ",
    "link": "https://arxiv.org/abs/2403.06503",
    "context": "Title: Automatic Generation of Python Programs Using Context-Free Grammars\nAbstract: arXiv:2403.06503v1 Announce Type: cross  Abstract: In recent years, data has emerged as the new gold, serving as a powerful tool for creating intelligent systems. However, procuring high-quality data remains challenging, especially for code. To address this, we developed TinyPy Generator, a tool that generates random Python programs using a context-free grammar. The generated programs are guaranteed to be correct by construction. Our system uses custom production rules (in the Backus-Naur Form (BNF) format) to recursively generate code. This allows us to generate code with different levels of complexity, ranging from code containing only assignments to more complex code containing conditionals and loops. Our proposed tool enables effortless large-scale Python code generation, beneficial for a wide range of applications. TinyPy Generator is particularly useful in the field of machine learning, where it can generate substantial amounts of Python code for training Python language models. ",
    "path": "papers/24/03/2403.06503.json",
    "total_tokens": 807,
    "translated_title": "使用上下文无关文法自动生成Python程序",
    "translated_abstract": "近年来，数据已经成为新的黄金，成为创建智能系统的强大工具。然而，获取高质量的数据仍然具有挑战性，尤其是对于代码。为了解决这个问题，我们开发了TinyPy Generator，这是一个使用上下文无关文法生成随机Python程序的工具。生成的程序通过构造保证正确性。我们的系统使用自定义的产生规则（采用巴科斯-诺尔范式（BNF）格式）递归地生成代码。这使我们能够生成具有不同复杂程度的代码，范围从仅包含赋值的代码到包含条件和循环的更复杂代码。我们提出的工具实现了轻松的大规模Python代码生成，在各种应用中具有益处。TinyPy Generator在机器学习领域特别有用，可以为训练Python语言模型生成大量Python代码。",
    "tldr": "使用上下文无关文法自动生成Python程序的TinyPy Generator工具可以确保生成的程序的正确性，并能轻松生成大规模Python代码，尤其适用于机器学习领域。",
    "en_tdlr": "The TinyPy Generator tool, using context-free grammars to automatically generate Python programs, ensures correctness of the generated code and facilitates large-scale Python code generation, particularly beneficial in the field of machine learning."
}