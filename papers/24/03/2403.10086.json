{
    "title": "Large Language Models to Generate System-Level Test Programs Targeting Non-functional Properties",
    "abstract": "arXiv:2403.10086v1 Announce Type: cross  Abstract: System-Level Test (SLT) has been a part of the test flow for integrated circuits for over a decade and still gains importance. However, no systematic approaches exist for test program generation, especially targeting non-functional properties of the Device under Test (DUT). Currently, test engineers manually compose test suites from off-the-shelf software, approximating the end-user environment of the DUT. This is a challenging and tedious task that does not guarantee sufficient control over non-functional properties. This paper proposes Large Language Models (LLMs) to generate test programs. We take a first glance at how pre-trained LLMs perform in test program generation to optimize non-functional properties of the DUT. Therefore, we write a prompt to generate C code snippets that maximize the instructions per cycle of a super-scalar, out-of-order architecture in simulation. Additionally, we apply prompt and hyperparameter optimizati",
    "link": "https://arxiv.org/abs/2403.10086",
    "context": "Title: Large Language Models to Generate System-Level Test Programs Targeting Non-functional Properties\nAbstract: arXiv:2403.10086v1 Announce Type: cross  Abstract: System-Level Test (SLT) has been a part of the test flow for integrated circuits for over a decade and still gains importance. However, no systematic approaches exist for test program generation, especially targeting non-functional properties of the Device under Test (DUT). Currently, test engineers manually compose test suites from off-the-shelf software, approximating the end-user environment of the DUT. This is a challenging and tedious task that does not guarantee sufficient control over non-functional properties. This paper proposes Large Language Models (LLMs) to generate test programs. We take a first glance at how pre-trained LLMs perform in test program generation to optimize non-functional properties of the DUT. Therefore, we write a prompt to generate C code snippets that maximize the instructions per cycle of a super-scalar, out-of-order architecture in simulation. Additionally, we apply prompt and hyperparameter optimizati",
    "path": "papers/24/03/2403.10086.json",
    "total_tokens": 645,
    "translated_title": "使用大型语言模型生成针对非功能属性的系统级测试程序",
    "translated_abstract": "系统级测试（SLT）已经成为集成电路测试流程的一部分超过十年，并且仍然越来越重要。然而，目前不存在针对测试程序生成的系统化方法，特别是针对被测设备（DUT）的非功能属性。本文提出使用大型语言模型（LLMs）来生成测试程序。我们首次尝试了预训练的LLMs在测试程序生成中的表现，以优化DUT的非功能属性。",
    "tldr": "本文提出使用大型语言模型（LLMs）生成测试程序，以优化非功能属性。"
}