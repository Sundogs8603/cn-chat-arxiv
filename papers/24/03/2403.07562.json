{
    "title": "A Flexible Cell Classification for ML Projects in Jupyter Notebooks",
    "abstract": "arXiv:2403.07562v1 Announce Type: cross  Abstract: Jupyter Notebook is an interactive development environment commonly used for rapid experimentation of machine learning (ML) solutions. Describing the ML activities performed along code cells improves the readability and understanding of Notebooks. Manual annotation of code cells is time-consuming and error-prone. Therefore, tools have been developed that classify the cells of a notebook concerning the ML activity performed in them. However, the current tools are not flexible, as they work based on look-up tables that have been created, which map function calls of commonly used ML libraries to ML activities. These tables must be manually adjusted to account for new or changed libraries.   This paper presents a more flexible approach to cell classification based on a hybrid classification approach that combines a rule-based and a decision tree classifier. We discuss the design rationales and describe the developed classifiers in detail. ",
    "link": "https://arxiv.org/abs/2403.07562",
    "context": "Title: A Flexible Cell Classification for ML Projects in Jupyter Notebooks\nAbstract: arXiv:2403.07562v1 Announce Type: cross  Abstract: Jupyter Notebook is an interactive development environment commonly used for rapid experimentation of machine learning (ML) solutions. Describing the ML activities performed along code cells improves the readability and understanding of Notebooks. Manual annotation of code cells is time-consuming and error-prone. Therefore, tools have been developed that classify the cells of a notebook concerning the ML activity performed in them. However, the current tools are not flexible, as they work based on look-up tables that have been created, which map function calls of commonly used ML libraries to ML activities. These tables must be manually adjusted to account for new or changed libraries.   This paper presents a more flexible approach to cell classification based on a hybrid classification approach that combines a rule-based and a decision tree classifier. We discuss the design rationales and describe the developed classifiers in detail. ",
    "path": "papers/24/03/2403.07562.json",
    "total_tokens": 741,
    "translated_title": "Jupyter笔记本中的机器学习项目灵活单元分类",
    "translated_abstract": "Jupyter Notebook是一个常用的交互式开发环境，用于快速实验机器学习（ML）解决方案。描述代码单元中执行的ML活动可提高笔记本的可读性和理解性。手动注释代码单元耗时且容易出错。因此，已开发出工具，根据在其中执行的ML活动对笔记本的单元进行分类。然而，目前的工具缺乏灵活性，因为它们基于已创建的查找表工作，该查找表将常用ML库的函数调用映射到ML活动。这些表必须手动调整以考虑新的或更改的库。",
    "tldr": "本文提出了一种基于混合分类方法的更灵活的单元分类方法，结合了基于规则和决策树分类器。我们讨论了设计原理，并详细描述了开发的分类器。"
}