{
    "title": "Hydro: Adaptive Query Processing of ML Queries",
    "abstract": "arXiv:2403.14902v1 Announce Type: cross  Abstract: Query optimization in relational database management systems (DBMSs) is critical for fast query processing. The query optimizer relies on precise selectivity and cost estimates to effectively optimize queries prior to execution. While this strategy is effective for relational DBMSs, it is not sufficient for DBMSs tailored for processing machine learning (ML) queries. In ML-centric DBMSs, query optimization is challenging for two reasons. First, the performance bottleneck of the queries shifts to user-defined functions (UDFs) that often wrap around deep learning models, making it difficult to accurately estimate UDF statistics without profiling the query. This leads to inaccurate statistics and sub-optimal query plans. Second, the optimal query plan for ML queries is data-dependent, necessitating DBMSs to adapt the query plan on the fly during execution. So, a static query plan is not sufficient for such queries.   In this paper, we pre",
    "link": "https://arxiv.org/abs/2403.14902",
    "context": "Title: Hydro: Adaptive Query Processing of ML Queries\nAbstract: arXiv:2403.14902v1 Announce Type: cross  Abstract: Query optimization in relational database management systems (DBMSs) is critical for fast query processing. The query optimizer relies on precise selectivity and cost estimates to effectively optimize queries prior to execution. While this strategy is effective for relational DBMSs, it is not sufficient for DBMSs tailored for processing machine learning (ML) queries. In ML-centric DBMSs, query optimization is challenging for two reasons. First, the performance bottleneck of the queries shifts to user-defined functions (UDFs) that often wrap around deep learning models, making it difficult to accurately estimate UDF statistics without profiling the query. This leads to inaccurate statistics and sub-optimal query plans. Second, the optimal query plan for ML queries is data-dependent, necessitating DBMSs to adapt the query plan on the fly during execution. So, a static query plan is not sufficient for such queries.   In this paper, we pre",
    "path": "papers/24/03/2403.14902.json",
    "total_tokens": 853,
    "translated_title": "Hydro: 自适应机器学习查询处理",
    "translated_abstract": "关系数据库管理系统（DBMSs）中的查询优化对于快速查询处理至关重要。查询优化器依赖于精确的选择性和成本估计，以便在执行之前有效地优化查询。传统的DBMSs可以有效利用该策略，但对于专门用于处理机器学习（ML）查询的DBMSs来说则不够。在以ML为中心的DBMSs中，查询优化面临两个挑战。首先，查询的性能瓶颈转移到用户定义函数（UDFs）上，这些函数通常封装深度学习模型，使得在没有对查询进行分析的情况下准确估计UDF统计数据变得困难。这导致统计数据不准确和查询计划次优。其次，ML查询的最佳查询计划取决于数据，因此DBMSs需要在执行过程中动态调整查询计划。因此，静态查询计划对这类查询来说是不够的。",
    "tldr": "该论文提出了一种Hydro系统，用于处理机器学习查询，通过动态调整查询计划以适应数据的变化，解决了传统DBMSs在处理ML查询时遇到的性能瓶颈和优化挑战。",
    "en_tdlr": "This paper introduces Hydro system for processing machine learning queries, which addresses the performance bottleneck and optimization challenges faced by traditional DBMSs when dealing with ML queries by dynamically adjusting query plans to adapt to changing data."
}