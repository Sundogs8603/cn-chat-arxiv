{
    "title": "Guiding Enumerative Program Synthesis with Large Language Models",
    "abstract": "arXiv:2403.03997v1 Announce Type: new  Abstract: Pre-trained Large Language Models (LLMs) are beginning to dominate the discourse around automatic code generation with natural language specifications. In contrast, the best-performing synthesizers in the domain of formal synthesis with precise logical specifications are still based on enumerative algorithms. In this paper, we evaluate the abilities of LLMs to solve formal synthesis benchmarks by carefully crafting a library of prompts for the domain. When one-shot synthesis fails, we propose a novel enumerative synthesis algorithm, which integrates calls to an LLM into a weighted probabilistic search. This allows the synthesizer to provide the LLM with information about the progress of the enumerator, and the LLM to provide the enumerator with syntactic guidance in an iterative loop. We evaluate our techniques on benchmarks from the Syntax-Guided Synthesis (SyGuS) competition. We find that GPT-3.5 as a stand-alone tool for formal synthe",
    "link": "https://arxiv.org/abs/2403.03997",
    "context": "Title: Guiding Enumerative Program Synthesis with Large Language Models\nAbstract: arXiv:2403.03997v1 Announce Type: new  Abstract: Pre-trained Large Language Models (LLMs) are beginning to dominate the discourse around automatic code generation with natural language specifications. In contrast, the best-performing synthesizers in the domain of formal synthesis with precise logical specifications are still based on enumerative algorithms. In this paper, we evaluate the abilities of LLMs to solve formal synthesis benchmarks by carefully crafting a library of prompts for the domain. When one-shot synthesis fails, we propose a novel enumerative synthesis algorithm, which integrates calls to an LLM into a weighted probabilistic search. This allows the synthesizer to provide the LLM with information about the progress of the enumerator, and the LLM to provide the enumerator with syntactic guidance in an iterative loop. We evaluate our techniques on benchmarks from the Syntax-Guided Synthesis (SyGuS) competition. We find that GPT-3.5 as a stand-alone tool for formal synthe",
    "path": "papers/24/03/2403.03997.json",
    "total_tokens": 820,
    "translated_title": "用大型语言模型引导列举式程序合成",
    "translated_abstract": "预训练的大型语言模型 (LLMs) 开始主导围绕使用自然语言规范生成代码的讨论。与此相比，在精确逻辑规范领域中表现最佳的合成器仍然基于列举算法。本文通过精心制作领域提示库评估了LLMs解决形式合成基准的能力。当一次合成失败时，我们提出了一种新颖的列举式合成算法，将LLM的调用集成到加权概率搜索中。这样，合成器可以向LLM提供有关枚举器进展情况的信息，LLM可以向枚举器在迭代循环中提供语法指导。我们在来自语法引导合成 (SyGuS) 竞赛的基准上评估了我们的技术。",
    "tldr": "该论文评估了大型语言模型在形式合成基准上的能力，并提出了一种结合列举算法和大型语言模型的合成算法，以在迭代循环中提供语法指导和信息交流。",
    "en_tdlr": "This paper evaluates the capabilities of large language models in formal synthesis benchmarks and proposes a synthesis algorithm that integrates enumerative algorithms with large language models to provide syntactic guidance and information exchange in an iterative loop."
}