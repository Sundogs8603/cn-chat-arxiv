{
    "title": "SATDAUG -- A Balanced and Augmented Dataset for Detecting Self-Admitted Technical Debt",
    "abstract": "arXiv:2403.07690v1 Announce Type: cross  Abstract: Self-admitted technical debt (SATD) refers to a form of technical debt in which developers explicitly acknowledge and document the existence of technical shortcuts, workarounds, or temporary solutions within the codebase. Over recent years, researchers have manually labeled datasets derived from various software development artifacts: source code comments, messages from the issue tracker and pull request sections, and commit messages. These datasets are designed for training, evaluation, performance validation, and improvement of machine learning and deep learning models to accurately identify SATD instances. However, class imbalance poses a serious challenge across all the existing datasets, particularly when researchers are interested in categorizing the specific types of SATD. In order to address the scarcity of labeled data for SATD \\textit{identification} (i.e., whether an instance is SATD or not) and \\textit{categorization} (i.e.",
    "link": "https://arxiv.org/abs/2403.07690",
    "context": "Title: SATDAUG -- A Balanced and Augmented Dataset for Detecting Self-Admitted Technical Debt\nAbstract: arXiv:2403.07690v1 Announce Type: cross  Abstract: Self-admitted technical debt (SATD) refers to a form of technical debt in which developers explicitly acknowledge and document the existence of technical shortcuts, workarounds, or temporary solutions within the codebase. Over recent years, researchers have manually labeled datasets derived from various software development artifacts: source code comments, messages from the issue tracker and pull request sections, and commit messages. These datasets are designed for training, evaluation, performance validation, and improvement of machine learning and deep learning models to accurately identify SATD instances. However, class imbalance poses a serious challenge across all the existing datasets, particularly when researchers are interested in categorizing the specific types of SATD. In order to address the scarcity of labeled data for SATD \\textit{identification} (i.e., whether an instance is SATD or not) and \\textit{categorization} (i.e.",
    "path": "papers/24/03/2403.07690.json",
    "total_tokens": 826,
    "translated_title": "SATDAUG -- 一种用于检测自认技术债的平衡和增强数据集",
    "translated_abstract": "自认技术债(SATD)是指开发人员明确承认并记录代码库中存在的技术捷径、变通方法或临时解决方案的一种形式。近年来，研究人员对各种软件开发工件进行手动标记，包括源代码注释、问题跟踪器和拉取请求部分的消息以及提交消息。这些数据集旨在用于训练、评估、性能验证和改进机器学习和深度学习模型，以准确识别SATD实例。然而，现有数据集存在严重的类别不平衡问题，特别是当研究人员有兴趣对SATD的特定类型进行分类时。为解决SATD识别（即一个实例是否为SATD）和分类（即区分不同类型的SATD）的标记数据稀缺问题，本文提出了一种新的平衡和增强的SATD数据集（SATDAUG）。",
    "tldr": "SATDAUG这一平衡和增强的数据集旨在解决自认技术债识别和分类中现有数据集存在的类别不平衡问题。",
    "en_tdlr": "SATDAUG dataset aims to address the class imbalance issue in identifying and categorizing self-admitted technical debt instances in existing datasets."
}