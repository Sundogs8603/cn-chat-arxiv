{
    "title": "UniSparse: An Intermediate Language for General Sparse Format Customization",
    "abstract": "arXiv:2403.05802v1 Announce Type: new  Abstract: The ongoing trend of hardware specialization has led to a growing use of custom data formats when processing sparse workloads, which are typically memory-bound. These formats facilitate optimized software/hardware implementations by utilizing sparsity pattern- or target-aware data structures and layouts to enhance memory access latency and bandwidth utilization. However, existing sparse tensor programming models and compilers offer little or no support for productively customizing the sparse formats. Additionally, because these frameworks represent formats using a limited set of per-dimension attributes, they lack the flexibility to accommodate numerous new variations of custom sparse data structures and layouts. To overcome this deficiency, we propose UniSparse, an intermediate language that provides a unified abstraction for representing and customizing sparse formats. Unlike the existing attribute-based frameworks, UniSparse decouples",
    "link": "https://arxiv.org/abs/2403.05802",
    "context": "Title: UniSparse: An Intermediate Language for General Sparse Format Customization\nAbstract: arXiv:2403.05802v1 Announce Type: new  Abstract: The ongoing trend of hardware specialization has led to a growing use of custom data formats when processing sparse workloads, which are typically memory-bound. These formats facilitate optimized software/hardware implementations by utilizing sparsity pattern- or target-aware data structures and layouts to enhance memory access latency and bandwidth utilization. However, existing sparse tensor programming models and compilers offer little or no support for productively customizing the sparse formats. Additionally, because these frameworks represent formats using a limited set of per-dimension attributes, they lack the flexibility to accommodate numerous new variations of custom sparse data structures and layouts. To overcome this deficiency, we propose UniSparse, an intermediate language that provides a unified abstraction for representing and customizing sparse formats. Unlike the existing attribute-based frameworks, UniSparse decouples",
    "path": "papers/24/03/2403.05802.json",
    "total_tokens": 809,
    "translated_title": "UniSparse：一种用于通用稀疏格式定制的中间语言",
    "translated_abstract": "硬件专门化的持续趋势导致在处理稀疏工作量时越来越多地使用自定义数据格式，这些工作量通常受限于内存。这些格式通过利用稀疏模式或面向目标的数据结构和布局来优化软硬件实现，以增强内存访问延迟和带宽利用率。然而，现有的稀疏张量编程模型和编译器很少或根本不支持有效定制稀疏格式。此外，由于这些框架使用有限的每个维度属性集表示格式，它们缺乏灵活性，无法适应大量新的自定义稀疏数据结构和布局变体。为了克服这一不足，我们提出了UniSparse，一种提供统一抽象以表示和定制稀疏格式的中间语言。与现有的基于属性的框架不同，UniSparse解耦",
    "tldr": "UniSparse提出了一种中间语言，用于统一抽象和定制稀疏格式，提供了更灵活的方式支持新的自定义稀疏数据结构和布局变体"
}