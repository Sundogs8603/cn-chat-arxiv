{
    "title": "SIP: Autotuning GPU Native Schedules via Stochastic Instruction Perturbation",
    "abstract": "arXiv:2403.16863v1 Announce Type: cross  Abstract: Large language models (LLMs) have become a significant workload since their appearance. However, they are also computationally expensive as they have billions of parameters and are trained with massive amounts of data. Thus, recent works have developed dedicated CUDA kernels for LLM training and inference instead of relying on compilergenerated ones, so that hardware resources are as fully utilized as possible. In this work, we explore the possibility of GPU native instruction optimization to further push the CUDA kernels to extreme performance. Contrary to prior works, we adopt an automatic optimization approach by defining a search space of possible GPU native instruction schedules, and then we apply stochastic search to perform optimization. Experiments show that SIP can further improve CUDA kernel throughput by automatically discovering better GPU native instruction schedules and the optimized schedules are tested by 10 million tes",
    "link": "https://arxiv.org/abs/2403.16863",
    "context": "Title: SIP: Autotuning GPU Native Schedules via Stochastic Instruction Perturbation\nAbstract: arXiv:2403.16863v1 Announce Type: cross  Abstract: Large language models (LLMs) have become a significant workload since their appearance. However, they are also computationally expensive as they have billions of parameters and are trained with massive amounts of data. Thus, recent works have developed dedicated CUDA kernels for LLM training and inference instead of relying on compilergenerated ones, so that hardware resources are as fully utilized as possible. In this work, we explore the possibility of GPU native instruction optimization to further push the CUDA kernels to extreme performance. Contrary to prior works, we adopt an automatic optimization approach by defining a search space of possible GPU native instruction schedules, and then we apply stochastic search to perform optimization. Experiments show that SIP can further improve CUDA kernel throughput by automatically discovering better GPU native instruction schedules and the optimized schedules are tested by 10 million tes",
    "path": "papers/24/03/2403.16863.json",
    "total_tokens": 782,
    "translated_title": "通过随机指令扰动实现GPU本机调度的自动调优",
    "translated_abstract": "大语言模型(LLMs)自出现以来已成为一个重要的工作负载。然而，由于其拥有数十亿参数并使用大量数据进行训练，它们的计算成本也很高。因此，最近的研究开发了专门用于LLM训练和推断的CUDA内核，而不是依赖于编译器生成的内核，以便尽可能充分利用硬件资源。在这项工作中，我们探讨了通过GPU本机指令优化进一步推动CUDA内核达到极致性能的可能性。与以往的工作相反，我们采用自动优化方法，定义了可能的GPU本机指令调度搜索空间，然后采用随机搜索进行优化。实验表明，通过自动发现更好的GPU本机指令调度，SIP能够进一步提高CUDA内核的吞吐量，并对优化后的调度进行了1000万次测试。",
    "tldr": "通过随机搜索自动发现更好的GPU本机指令调度，进一步提高CUDA内核的吞吐量",
    "en_tdlr": "Automatically discovering better GPU native instruction schedules through stochastic search to further improve CUDA kernel throughput."
}