{
    "title": "Strict Partitioning for Sporadic Rigid Gang Tasks",
    "abstract": "arXiv:2403.10726v1 Announce Type: cross  Abstract: The rigid gang task model is based on the idea of executing multiple threads simultaneously on a fixed number of processors to increase efficiency and performance. Although there is extensive literature on global rigid gang scheduling, partitioned approaches have several practical advantages (e.g., task isolation and reduced scheduling overheads). In this paper, we propose a new partitioned scheduling strategy for rigid gang tasks, named strict partitioning. The method creates disjoint partitions of tasks and processors to avoid inter-partition interference. Moreover, it tries to assign tasks with similar volumes (i.e., parallelisms) to the same partition so that the intra-partition interference can be reduced. Within each partition, the tasks can be scheduled using any type of scheduler, which allows the use of a less pessimistic schedulability test. Extensive synthetic experiments and a case study based on Edge TPU benchmarks show th",
    "link": "https://arxiv.org/abs/2403.10726",
    "context": "Title: Strict Partitioning for Sporadic Rigid Gang Tasks\nAbstract: arXiv:2403.10726v1 Announce Type: cross  Abstract: The rigid gang task model is based on the idea of executing multiple threads simultaneously on a fixed number of processors to increase efficiency and performance. Although there is extensive literature on global rigid gang scheduling, partitioned approaches have several practical advantages (e.g., task isolation and reduced scheduling overheads). In this paper, we propose a new partitioned scheduling strategy for rigid gang tasks, named strict partitioning. The method creates disjoint partitions of tasks and processors to avoid inter-partition interference. Moreover, it tries to assign tasks with similar volumes (i.e., parallelisms) to the same partition so that the intra-partition interference can be reduced. Within each partition, the tasks can be scheduled using any type of scheduler, which allows the use of a less pessimistic schedulability test. Extensive synthetic experiments and a case study based on Edge TPU benchmarks show th",
    "path": "papers/24/03/2403.10726.json",
    "total_tokens": 830,
    "translated_title": "针对零星刚性流式任务的严格分区方法",
    "translated_abstract": "刚性流式任务模型基于在固定数量的处理器上同时执行多个线程以提高效率和性能的思想。虽然全局刚性流式调度有大量文献，但分区方法具有几个实际优势（例如任务隔离和减少调度开销）。本文提出了一种新的用于刚性流式任务的分区调度策略，称为严格分区。该方法创建任务和处理器的不相交分区，以避免分区间干扰。此外，它尝试将具有相似容量（即并行性）的任务分配给同一分区，以减少分区内干扰。在每个分区内，任务可以使用任何类型的调度器进行调度，这允许使用不那么悲观的可调度测试。大量的合成实验证明和基于Edge TPU基准的案例研究显示",
    "tldr": "提出了一种新的严格分区调度策略，用于零星刚性流式任务，通过创建不相交的任务和处理器分区，并尝试将相似容量的任务分配给同一分区，以减少干扰。"
}