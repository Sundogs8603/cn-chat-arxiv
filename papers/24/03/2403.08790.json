{
    "title": "Using Sequential Runtime Distributions for the Parallel Speedup Prediction of SAT Local Search",
    "abstract": "arXiv:2403.08790v1 Announce Type: cross  Abstract: This paper presents a detailed analysis of the scalability and parallelization of local search algorithms for the Satisfiability problem. We propose a framework to estimate the parallel performance of a given algorithm by analyzing the runtime behavior of its sequential version. Indeed, by approximating the runtime distribution of the sequential process with statistical methods, the runtime behavior of the parallel process can be predicted by a model based on order statistics. We apply this approach to study the parallel performance of two SAT local search solvers, namely Sparrow and CCASAT, and compare the predicted performances to the results of an actual experimentation on parallel hardware up to 384 cores. We show that the model is accurate and predicts performance close to the empirical data. Moreover, as we study different types of instances (random and crafted), we observe that the local search solvers exhibit different behavior",
    "link": "https://arxiv.org/abs/2403.08790",
    "context": "Title: Using Sequential Runtime Distributions for the Parallel Speedup Prediction of SAT Local Search\nAbstract: arXiv:2403.08790v1 Announce Type: cross  Abstract: This paper presents a detailed analysis of the scalability and parallelization of local search algorithms for the Satisfiability problem. We propose a framework to estimate the parallel performance of a given algorithm by analyzing the runtime behavior of its sequential version. Indeed, by approximating the runtime distribution of the sequential process with statistical methods, the runtime behavior of the parallel process can be predicted by a model based on order statistics. We apply this approach to study the parallel performance of two SAT local search solvers, namely Sparrow and CCASAT, and compare the predicted performances to the results of an actual experimentation on parallel hardware up to 384 cores. We show that the model is accurate and predicts performance close to the empirical data. Moreover, as we study different types of instances (random and crafted), we observe that the local search solvers exhibit different behavior",
    "path": "papers/24/03/2403.08790.json",
    "total_tokens": 835,
    "translated_title": "使用顺序运行时间分布对SAT本地搜索的并行加速预测",
    "translated_abstract": "本文对可满足性问题的本地搜索算法的可扩展性和并行化进行了详细分析。我们提出了一个框架来通过分析其顺序版本的运行时行为来估计给定算法的并行性能。通过用统计方法近似顺序过程的运行时间分布，可以基于顺序统计量建立模型来预测并行过程的运行时行为。我们将这种方法应用于研究两种SAT本地搜索求解器，即Sparrow和CCASAT的并行性能，并将预测的性能与在高达384个核心的并行硬件上进行的实际实验结果进行比较。我们展示了该模型的准确性，并预测性能接近经验数据。此外，当我们研究不同类型的实例（随机和精心设计）时，我们观察到本地搜索求解器表现出不同的行为。",
    "tldr": "通过分析顺序版本的运行时行为来预测给定算法的并行性能，本文提出了一种使用顺序运行时间分布进行SAT本地搜索并行加速预测的方法，并在实验中展示了模型准确预测性能的能力。",
    "en_tdlr": "This paper proposes a method to predict the parallel performance of SAT local search algorithms by analyzing the runtime behavior of their sequential versions, showing accurate performance prediction capabilities in experiments."
}