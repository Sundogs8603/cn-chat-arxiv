{
    "title": "PipeRAG: Fast Retrieval-Augmented Generation via Algorithm-System Co-design",
    "abstract": "arXiv:2403.05676v1 Announce Type: new  Abstract: Retrieval-augmented generation (RAG) can enhance the generation quality of large language models (LLMs) by incorporating external token databases. However, retrievals from large databases can constitute a substantial portion of the overall generation time, particularly when retrievals are periodically performed to align the retrieved content with the latest states of generation. In this paper, we introduce PipeRAG, a novel algorithm-system co-design approach to reduce generation latency and enhance generation quality. PipeRAG integrates (1) pipeline parallelism to enable concurrent retrieval and generation processes, (2) flexible retrieval intervals to maximize the efficiency of pipeline parallelism, and (3) a performance model to automatically balance retrieval quality and latency based on the generation states and underlying hardware. Our evaluation shows that, by combining the three aforementioned methods, PipeRAG achieves up to 2.6$\\",
    "link": "https://arxiv.org/abs/2403.05676",
    "context": "Title: PipeRAG: Fast Retrieval-Augmented Generation via Algorithm-System Co-design\nAbstract: arXiv:2403.05676v1 Announce Type: new  Abstract: Retrieval-augmented generation (RAG) can enhance the generation quality of large language models (LLMs) by incorporating external token databases. However, retrievals from large databases can constitute a substantial portion of the overall generation time, particularly when retrievals are periodically performed to align the retrieved content with the latest states of generation. In this paper, we introduce PipeRAG, a novel algorithm-system co-design approach to reduce generation latency and enhance generation quality. PipeRAG integrates (1) pipeline parallelism to enable concurrent retrieval and generation processes, (2) flexible retrieval intervals to maximize the efficiency of pipeline parallelism, and (3) a performance model to automatically balance retrieval quality and latency based on the generation states and underlying hardware. Our evaluation shows that, by combining the three aforementioned methods, PipeRAG achieves up to 2.6$\\",
    "path": "papers/24/03/2403.05676.json",
    "total_tokens": 797,
    "translated_title": "PipeRAG: 通过算法-系统共同设计实现快速检索增强生成",
    "translated_abstract": "检索增强生成（RAG）可以通过整合外部标记数据库提高大语言模型（LLMs）的生成质量。然而，从大型数据库中检索在整体生成时间中可能占据相当大比例，特别是当定期执行检索以将检索内容与生成的最新状态对齐时。本文介绍了PipeRAG，这是一种新颖的算法-系统共同设计方法，旨在减少生成延迟并提高生成质量。PipeRAG结合了（1）管道并行性，以实现并发检索和生成过程，（2）灵活的检索间隔，以最大化管道并行性的效率，并且（3）性能模型，根据生成的状态和底层硬件自动平衡检索质量和延迟。我们的评估结果表明，通过结合这三种方法，PipeRAG实现了高达2.6倍的提升。",
    "tldr": "PipeRAG通过算法-系统共同设计，在生成过程中实现了快速检索增强，将检索时间大大降低并提高生成质量。",
    "en_tdlr": "PipeRAG achieves fast retrieval-augmented generation through algorithm-system co-design, significantly reducing retrieval time and enhancing generation quality."
}