{
    "title": "depyf: Open the Opaque Box of PyTorch Compiler for Machine Learning Researchers",
    "abstract": "arXiv:2403.13839v1 Announce Type: cross  Abstract: PyTorch \\texttt{2.x} introduces a compiler designed to accelerate deep learning programs. However, for machine learning researchers, adapting to the PyTorch compiler to full potential can be challenging. The compiler operates at the Python bytecode level, making it appear as an opaque box. To address this, we introduce \\texttt{depyf}, a tool designed to demystify the inner workings of the PyTorch compiler. \\texttt{depyf} decompiles bytecode generated by PyTorch back into equivalent source code, and establishes connections between in-memory code objects and their on-disk source code counterparts. This feature enables users to step through the source code line by line using debuggers, thus enhancing their understanding of the underlying processes. Notably, \\texttt{depyf} is non-intrusive and user-friendly, primarily relying on two convenient context managers for its core functionality. The project is \\href{https://github.com/thuml/depyf}",
    "link": "https://arxiv.org/abs/2403.13839",
    "context": "Title: depyf: Open the Opaque Box of PyTorch Compiler for Machine Learning Researchers\nAbstract: arXiv:2403.13839v1 Announce Type: cross  Abstract: PyTorch \\texttt{2.x} introduces a compiler designed to accelerate deep learning programs. However, for machine learning researchers, adapting to the PyTorch compiler to full potential can be challenging. The compiler operates at the Python bytecode level, making it appear as an opaque box. To address this, we introduce \\texttt{depyf}, a tool designed to demystify the inner workings of the PyTorch compiler. \\texttt{depyf} decompiles bytecode generated by PyTorch back into equivalent source code, and establishes connections between in-memory code objects and their on-disk source code counterparts. This feature enables users to step through the source code line by line using debuggers, thus enhancing their understanding of the underlying processes. Notably, \\texttt{depyf} is non-intrusive and user-friendly, primarily relying on two convenient context managers for its core functionality. The project is \\href{https://github.com/thuml/depyf}",
    "path": "papers/24/03/2403.13839.json",
    "total_tokens": 903,
    "translated_title": "depyf：为机器学习研究者打开PyTorch编译器的神秘盒子",
    "translated_abstract": "PyTorch 2.x引入了一个旨在加速深度学习程序的编译器。然而，对于机器学习研究者来说，充分利用PyTorch编译器可能具有挑战性。编译器在Python字节码级别运行，使其看起来像一个神秘的盒子。为解决这一问题，我们引入了depyf，这是一个旨在揭开PyTorch编译器内部机制的工具。depyf可以将PyTorch生成的字节码反编译为等效的源代码，并建立内存中代码对象与磁盘上源代码对应的联系。这个特性使用户可以使用调试器逐行查看源代码，从而增进对底层过程的理解。值得注意的是，depyf是非侵入性且用户友好的，主要依赖于两个方便的上下文管理器来实现其核心功能。",
    "tldr": "depyf是一个非侵入性和用户友好的工具，旨在帮助机器学习研究者揭开PyTorch编译器的内部工作机制，并通过反编译将字节码转换为源代码，从而增进用户对底层过程的理解。",
    "en_tdlr": "depyf is a non-intrusive and user-friendly tool designed to help machine learning researchers uncover the inner workings of the PyTorch compiler by decompiling bytecode into source code, enhancing users' understanding of the underlying processes."
}