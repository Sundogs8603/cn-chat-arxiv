{
    "title": "Can Language Models Pretend Solvers? Logic Code Simulation with LLMs",
    "abstract": "arXiv:2403.16097v1 Announce Type: new  Abstract: Transformer-based large language models (LLMs) have demonstrated significant potential in addressing logic problems. capitalizing on the great capabilities of LLMs for code-related activities, several frameworks leveraging logical solvers for logic reasoning have been proposed recently. While existing research predominantly focuses on viewing LLMs as natural language logic solvers or translators, their roles as logic code interpreters and executors have received limited attention. This study delves into a novel aspect, namely logic code simulation, which forces LLMs to emulate logical solvers in predicting the results of logical programs. To further investigate this novel task, we formulate our three research questions: Can LLMs efficiently simulate the outputs of logic codes? What strength arises along with logic code simulation? And what pitfalls? To address these inquiries, we curate three novel datasets tailored for the logic code si",
    "link": "https://arxiv.org/abs/2403.16097",
    "context": "Title: Can Language Models Pretend Solvers? Logic Code Simulation with LLMs\nAbstract: arXiv:2403.16097v1 Announce Type: new  Abstract: Transformer-based large language models (LLMs) have demonstrated significant potential in addressing logic problems. capitalizing on the great capabilities of LLMs for code-related activities, several frameworks leveraging logical solvers for logic reasoning have been proposed recently. While existing research predominantly focuses on viewing LLMs as natural language logic solvers or translators, their roles as logic code interpreters and executors have received limited attention. This study delves into a novel aspect, namely logic code simulation, which forces LLMs to emulate logical solvers in predicting the results of logical programs. To further investigate this novel task, we formulate our three research questions: Can LLMs efficiently simulate the outputs of logic codes? What strength arises along with logic code simulation? And what pitfalls? To address these inquiries, we curate three novel datasets tailored for the logic code si",
    "path": "papers/24/03/2403.16097.json",
    "total_tokens": 907,
    "translated_title": "语言模型能够模拟求解器吗？LLMs的逻辑代码模拟",
    "translated_abstract": "基于Transformer的大型语言模型(LLMs)在解决逻辑问题方面展示了重要潜力。利用LLMs在代码相关活动中的卓越能力，最近提出了几种利用逻辑求解器进行逻辑推理的框架。虽然现有研究主要集中在将LLMs视为自然语言逻辑求解器或翻译器，但它们作为逻辑代码解释器和执行器的角色受到了较少关注。本研究深入探讨了一个新颖的方面，即逻辑代码模拟，它迫使LLMs在预测逻辑程序的结果时模拟逻辑求解器。为进一步研究这一新颖任务，我们制定了三个研究问题：LLMs能否有效地模拟逻辑代码的输出？逻辑代码模拟伴随着哪些优势？以及存在哪些缺陷？为了回答这些问题，我们整理了三个针对逻辑代码模拟的新颖数据集。",
    "tldr": "这项研究探讨了一种新颖的任务，即逻辑代码模拟，迫使LLMs在预测逻辑程序的结果时模拟逻辑求解器，同时提出了三个研究问题以深入调查这一任务对LLMs的影响。"
}