{
    "title": "Query Complexity of Tournament Solutions. (arXiv:1611.06189v4 [cs.DS] UPDATED)",
    "abstract": "A directed graph where there is exactly one edge between every pair of vertices is called a {\\em tournament}. Finding the \"best\" set of vertices of a tournament is a well studied problem in social choice theory. A {\\em tournament solution} takes a tournament as input and outputs a subset of vertices of the input tournament. However, in many applications, for example, choosing the best set of drugs from a given set of drugs, the edges of the tournament are given only implicitly and knowing the orientation of an edge is costly. In such scenarios, we would like to know the best set of vertices (according to some tournament solution) by \"querying\" as few edges as possible. We, in this paper, precisely study this problem for commonly used tournament solutions: given an oracle access to the edges of a tournament T, find $f(T)$ by querying as few edges as possible, for a tournament solution f. We first show that the set of Condorcet non-losers in a tournament can be found by querying $2n-\\lfl",
    "link": "http://arxiv.org/abs/1611.06189",
    "context": "Title: Query Complexity of Tournament Solutions. (arXiv:1611.06189v4 [cs.DS] UPDATED)\nAbstract: A directed graph where there is exactly one edge between every pair of vertices is called a {\\em tournament}. Finding the \"best\" set of vertices of a tournament is a well studied problem in social choice theory. A {\\em tournament solution} takes a tournament as input and outputs a subset of vertices of the input tournament. However, in many applications, for example, choosing the best set of drugs from a given set of drugs, the edges of the tournament are given only implicitly and knowing the orientation of an edge is costly. In such scenarios, we would like to know the best set of vertices (according to some tournament solution) by \"querying\" as few edges as possible. We, in this paper, precisely study this problem for commonly used tournament solutions: given an oracle access to the edges of a tournament T, find $f(T)$ by querying as few edges as possible, for a tournament solution f. We first show that the set of Condorcet non-losers in a tournament can be found by querying $2n-\\lfl",
    "path": "papers/16/11/1611.06189.json",
    "total_tokens": 815,
    "translated_title": "竞赛解决方案的查询复杂度",
    "translated_abstract": "在社会选择理论中，研究如何找到竞赛的最佳顶点集合是一个既定的问题。然而，在许多应用中，例如从给定的药物集合中选择最佳药物，只有隐式给出竞赛边缘，并且了解边缘的方向是昂贵的。在这种情况下，我们希望用尽可能少的查询边缘的方式找到最佳顶点集合。本文精确研究了常用竞赛解决方案的这个问题：通过查询尽可能少的边缘，给定一个竞赛T的边缘访问，找到$f(T)$的值，其中$f$是竞赛解决方案。我们首先展示了在竞赛中找到由康多塞不败者组成的集合可以通过查询$2n-\\lfl",
    "tldr": "本文研究了竞赛解决方案的查询复杂度问题，通过尽可能少的查询边缘的方式找到最佳顶点集合。",
    "en_tdlr": "This paper examines the query complexity of tournament solutions and aims to find the best set of vertices by querying as few edges as possible."
}