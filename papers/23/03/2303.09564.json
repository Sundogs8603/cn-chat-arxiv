{
    "title": "TypeT5: Seq2seq Type Inference using Static Analysis. (arXiv:2303.09564v1 [cs.SE])",
    "abstract": "There has been growing interest in automatically predicting missing type annotations in programs written in Python and JavaScript. While prior methods have achieved impressive accuracy when predicting the most common types, they often perform poorly on rare or complex types. In this paper, we present a new type inference method that treats type prediction as a code infilling task by leveraging CodeT5, a state-of-the-art seq2seq pre-trained language model for code. Our method uses static analysis to construct dynamic contexts for each code element whose type signature is to be predicted by the model. We also propose an iterative decoding scheme that incorporates previous type predictions in the model's input context, allowing information exchange between related code elements. Our evaluation shows that the proposed approach, TypeT5, not only achieves a higher overall accuracy (particularly on rare and complex types) but also produces more coherent results with fewer type errors -- while",
    "link": "http://arxiv.org/abs/2303.09564",
    "context": "Title: TypeT5: Seq2seq Type Inference using Static Analysis. (arXiv:2303.09564v1 [cs.SE])\nAbstract: There has been growing interest in automatically predicting missing type annotations in programs written in Python and JavaScript. While prior methods have achieved impressive accuracy when predicting the most common types, they often perform poorly on rare or complex types. In this paper, we present a new type inference method that treats type prediction as a code infilling task by leveraging CodeT5, a state-of-the-art seq2seq pre-trained language model for code. Our method uses static analysis to construct dynamic contexts for each code element whose type signature is to be predicted by the model. We also propose an iterative decoding scheme that incorporates previous type predictions in the model's input context, allowing information exchange between related code elements. Our evaluation shows that the proposed approach, TypeT5, not only achieves a higher overall accuracy (particularly on rare and complex types) but also produces more coherent results with fewer type errors -- while",
    "path": "papers/23/03/2303.09564.json",
    "total_tokens": 847,
    "translated_title": "TypeT5: 基于静态分析的Seq2seq类型推断",
    "translated_abstract": "自动预测Python和JavaScript程序中缺少的类型注释越来越受到关注。尽管先前的方法在预测最常见的类型时取得了令人印象深刻的准确度，但在罕见或复杂类型上表现不佳。在本文中，我们提出了一种新的类型推断方法，将类型预测视为代码填充任务，并利用CodeT5，这是一种用于代码的最先进的seq2seq预训练语言模型。我们的方法使用静态分析为每个代码元素构造动态上下文，其类型签名由模型预测。我们还提出了一种迭代解码方案，将先前的类型预测纳入模型的输入上下文中，允许相关代码元素之间进行信息交换。我们的评估表明，所提出的TypeT5方法不仅在整体准确性方面表现更好（特别是在罕见和复杂类型方面），而且产生的结果更具连贯性，类型错误更少。",
    "tldr": "TypeT5是一种利用CodeT5进行静态分析的新型类型推断方法，能够在预测罕见和复杂类型时显著提高准确性，并减少类型错误。"
}