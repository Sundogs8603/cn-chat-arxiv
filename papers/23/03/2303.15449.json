{
    "title": "BACKpropagation through BACK substitution with a BACKslash. (arXiv:2303.15449v1 [math.NA])",
    "abstract": "We present a linear algebra formulation of backpropagation which allows the calculation of gradients by using a generically written ``backslash'' or Gaussian elimination on triangular systems of equations. Generally the matrix elements are operators. This paper has three contributions:  1. It is of intellectual value to replace traditional treatments of automatic differentiation with a (left acting) operator theoretic, graph-based approach.  2. Operators can be readily placed in matrices in software in programming languages such as Ju lia as an implementation option.  3. We introduce a novel notation, ``transpose dot'' operator ``$\\{\\}^{T_\\bullet}$'' that allows the reversal of operators.  We demonstrate the elegance of the operators approach in a suitable programming language consisting of generic linear algebra operators such as Julia \\cite{bezanson2017julia}, and that it is possible to realize this abstraction in code. Our implementation shows how generic linear algebra can allow op",
    "link": "http://arxiv.org/abs/2303.15449",
    "context": "Title: BACKpropagation through BACK substitution with a BACKslash. (arXiv:2303.15449v1 [math.NA])\nAbstract: We present a linear algebra formulation of backpropagation which allows the calculation of gradients by using a generically written ``backslash'' or Gaussian elimination on triangular systems of equations. Generally the matrix elements are operators. This paper has three contributions:  1. It is of intellectual value to replace traditional treatments of automatic differentiation with a (left acting) operator theoretic, graph-based approach.  2. Operators can be readily placed in matrices in software in programming languages such as Ju lia as an implementation option.  3. We introduce a novel notation, ``transpose dot'' operator ``$\\{\\}^{T_\\bullet}$'' that allows the reversal of operators.  We demonstrate the elegance of the operators approach in a suitable programming language consisting of generic linear algebra operators such as Julia \\cite{bezanson2017julia}, and that it is possible to realize this abstraction in code. Our implementation shows how generic linear algebra can allow op",
    "path": "papers/23/03/2303.15449.json",
    "total_tokens": 891,
    "translated_title": "通过BACKslash实现BACK substitution的BACKpropagation线性代数公式",
    "translated_abstract": "我们提出了一种通过在三角方程组上使用通用的“backslash”或高斯消元来计算梯度的反向传播的线性代数公式。通常，矩阵元素是算子。这篇论文有三个贡献：1.用左作用的算子理论和基于图形的方法取代传统的自动微分处理具有知识价值。2.可以将算子放置在矩阵中作为实现选项的软件中，如Julia。3.我们引入了一种新的符号，“transpose dot”操作符“$\\{\\}^{T_\\bullet}$”，允许反转算子。我们展示了算子方法在适合的编程语言中（如Julia）的优雅性，并证明了这种抽象可以在代码中实现。我们的实施展示了通用线性代数如何实现传统特殊形式的操作，例如backpropagation，以矩阵操作的形式书写，这打开了优化和实施便利性的可能性。",
    "tldr": "本文提出了一种通过在三角方程组上使用通用的“backslash”或高斯消元来计算梯度的反向传播的线性代数公式，可以实现优化和实现便利性。",
    "en_tdlr": "This paper presents a linear algebra formulation of backpropagation using a generically written \"backslash\" or Gaussian elimination on triangular systems of equations, enabling optimization and ease of implementation."
}