{
    "title": "The Complexity of Why-Provenance for Datalog Queries. (arXiv:2303.12773v1 [cs.DB])",
    "abstract": "Explaining why a database query result is obtained is an essential task towards the goal of Explainable AI, especially nowadays where expressive database query languages such as Datalog play a critical role in the development of ontology-based applications. A standard way of explaining a query result is the so-called why-provenance, which essentially provides information about the witnesses to a query result in the form of subsets of the input database that are sufficient to derive that result. To our surprise, despite the fact that the notion of why-provenance for Datalog queries has been around for decades and intensively studied, its computational complexity remains unexplored. The goal of this work is to fill this apparent gap in the why-provenance literature. Towards this end, we pinpoint the data complexity of why-provenance for Datalog queries and key subclasses thereof. The takeaway of our work is that why-provenance for recursive queries, even if the recursion is limited to be",
    "link": "http://arxiv.org/abs/2303.12773",
    "context": "Title: The Complexity of Why-Provenance for Datalog Queries. (arXiv:2303.12773v1 [cs.DB])\nAbstract: Explaining why a database query result is obtained is an essential task towards the goal of Explainable AI, especially nowadays where expressive database query languages such as Datalog play a critical role in the development of ontology-based applications. A standard way of explaining a query result is the so-called why-provenance, which essentially provides information about the witnesses to a query result in the form of subsets of the input database that are sufficient to derive that result. To our surprise, despite the fact that the notion of why-provenance for Datalog queries has been around for decades and intensively studied, its computational complexity remains unexplored. The goal of this work is to fill this apparent gap in the why-provenance literature. Towards this end, we pinpoint the data complexity of why-provenance for Datalog queries and key subclasses thereof. The takeaway of our work is that why-provenance for recursive queries, even if the recursion is limited to be",
    "path": "papers/23/03/2303.12773.json",
    "total_tokens": 922,
    "translated_title": "Datalog查询的Why-Provenance的复杂性",
    "translated_abstract": "解释数据库查询结果的原因是实现可解释人工智能的重要任务，尤其是在表达丰富的查询语言（如Datalog）在本体论应用程序的发展中发挥至关重要的作用的当下。解释查询结果的标准方法是所谓的why-provenance，它以足以推导该结果的输入数据库的子集的形式提供有关查询结果的证据。令人惊讶的是，尽管对于Datalog查询的why-provenance的概念已存在数十年并受到广泛研究，但其计算复杂性仍未被探索。本工作的目标是填补why-provenance文献中这个明显的空白。为此，我们确定了Datalog查询及其关键子类的why-provenance的数据复杂性。我们的研究结果表明，即使递归被限制为非常特殊的情况，对于递归查询的Why-Provenance的计算复杂性同样是困难的。",
    "tldr": "为了向可解释人工智能目标迈进，我们研究了Datalog查询及其子类的why-provenance的数据复杂性，这有助于解释查询结果并提供证据。我们的结果表明，即使递归被限制，在递归查询中实现why-provenance的计算复杂性也非常困难。",
    "en_tdlr": "To advance the goal of Explainable AI, we studied the data complexity of why-provenance for Datalog queries and their subclasses, providing evidence for and explaining query results. Our results demonstrate that computing why-provenance for recursive queries, even with limited recursion, is highly challenging."
}