{
    "title": "Practically Solving LPN in High Noise Regimes Faster Using Neural Networks. (arXiv:2303.07987v1 [cs.LG])",
    "abstract": "We conduct a systematic study of solving the learning parity with noise problem (LPN) using neural networks. Our main contribution is designing families of two-layer neural networks that practically outperform classical algorithms in high-noise, low-dimension regimes. We consider three settings where the numbers of LPN samples are abundant, very limited, and in between. In each setting we provide neural network models that solve LPN as fast as possible. For some settings we are also able to provide theories that explain the rationale of the design of our models. Comparing with the previous experiments of Esser, Kubler, and May (CRYPTO 2017), for dimension $n = 26$, noise rate $\\tau = 0.498$, the ''Guess-then-Gaussian-elimination'' algorithm takes 3.12 days on 64 CPU cores, whereas our neural network algorithm takes 66 minutes on 8 GPUs. Our algorithm can also be plugged into the hybrid algorithms for solving middle or large dimension LPN instances.",
    "link": "http://arxiv.org/abs/2303.07987",
    "context": "Title: Practically Solving LPN in High Noise Regimes Faster Using Neural Networks. (arXiv:2303.07987v1 [cs.LG])\nAbstract: We conduct a systematic study of solving the learning parity with noise problem (LPN) using neural networks. Our main contribution is designing families of two-layer neural networks that practically outperform classical algorithms in high-noise, low-dimension regimes. We consider three settings where the numbers of LPN samples are abundant, very limited, and in between. In each setting we provide neural network models that solve LPN as fast as possible. For some settings we are also able to provide theories that explain the rationale of the design of our models. Comparing with the previous experiments of Esser, Kubler, and May (CRYPTO 2017), for dimension $n = 26$, noise rate $\\tau = 0.498$, the ''Guess-then-Gaussian-elimination'' algorithm takes 3.12 days on 64 CPU cores, whereas our neural network algorithm takes 66 minutes on 8 GPUs. Our algorithm can also be plugged into the hybrid algorithms for solving middle or large dimension LPN instances.",
    "path": "papers/23/03/2303.07987.json",
    "total_tokens": 1023,
    "translated_title": "利用神经网络在高噪声环境中更快地解决学习有噪声偏差问题",
    "translated_abstract": "本文研究了使用神经网络解决学习有噪声偏差问题（LPN）。我们的主要贡献是设计了一系列双层神经网络族，它们在高噪声，低维度区域实际上优于传统算法。我们考虑了三种情况，即LPN样本的数量充足、非常有限和介于两者之间。在每种情况下，我们提供了解决LPN的神经网络模型，以尽可能快地解决问题。对于某些情况，我们还能够提供解释我们模型设计理论的理论。在维度$n=26$、噪声率$\\tau=0.498$的情况下，与Esser、Kubler和May（CRYPTO 2017）之前的实验相比，\"猜测然后高斯消元\"算法需要64个CPU核心3.12天的时间，而我们的神经网络算法只需要8个GPU的66分钟。我们的算法也可以插入混合算法以解决中等或大型维度的LPN实例。",
    "tldr": "本文设计了具有两层神经网络的模型，可在高噪声和低维度情况下解决学习有噪声偏差问题（LPN），而且速度比传统算法更快。在26维，0.498的噪声率下，用“猜测然后高斯消元”算法需要3.12天，在8个GPU上使用神经网络算法只需要66分钟。",
    "en_tdlr": "This paper designs families of two-layer neural networks which can solve the learning parity with noise problem (LPN) faster than classical algorithms in high-noise, low-dimension regimes. The algorithm can also be used in hybrid algorithms for solving middle or large dimension LPN instances. Comparing with previous experiments, the neural network algorithm is significantly faster in high noise environments."
}