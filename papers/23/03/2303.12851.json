{
    "title": "Semi-Oblivious Chase Termination for Linear Existential Rules: An Experimental Study. (arXiv:2303.12851v1 [cs.DB])",
    "abstract": "The chase procedure is a fundamental algorithmic tool in databases that allows us to reason with constraints, such as existential rules, with a plethora of applications. It takes as input a database and a set of constraints, and iteratively completes the database as dictated by the constraints. A key challenge, though, is the fact that it may not terminate, which leads to the problem of checking whether it terminates given a database and a set of constraints. In this work, we focus on the semi-oblivious version of the chase, which is well-suited for practical implementations, and linear existential rules, a central class of constraints with several applications. In this setting, there is a mature body of theoretical work that provides syntactic characterizations of when the chase terminates, algorithms for checking chase termination, precise complexity results, and worst-case optimal bounds on the size of the result of the chase (whenever is finite). Our main objective is to experiment",
    "link": "http://arxiv.org/abs/2303.12851",
    "context": "Title: Semi-Oblivious Chase Termination for Linear Existential Rules: An Experimental Study. (arXiv:2303.12851v1 [cs.DB])\nAbstract: The chase procedure is a fundamental algorithmic tool in databases that allows us to reason with constraints, such as existential rules, with a plethora of applications. It takes as input a database and a set of constraints, and iteratively completes the database as dictated by the constraints. A key challenge, though, is the fact that it may not terminate, which leads to the problem of checking whether it terminates given a database and a set of constraints. In this work, we focus on the semi-oblivious version of the chase, which is well-suited for practical implementations, and linear existential rules, a central class of constraints with several applications. In this setting, there is a mature body of theoretical work that provides syntactic characterizations of when the chase terminates, algorithms for checking chase termination, precise complexity results, and worst-case optimal bounds on the size of the result of the chase (whenever is finite). Our main objective is to experiment",
    "path": "papers/23/03/2303.12851.json",
    "total_tokens": 1015,
    "translated_title": "线性存在规则的半无记忆追赶终止的实验研究",
    "translated_abstract": "追赶过程是数据库中用于处理约束(例如存在规则)并且具有多种应用的基本算法工具。它接受数据库和约束集作为输入，并根据约束迭代地完成数据库。然而，一个关键的挑战是它可能不会终止，这导致需要检查给定数据库和一组约束是否终止的问题。本文关注于半无记忆追赶算法的应用，它非常适合实际实现，并针对具有多个应用的中心约束类别，即线性存在规则。在这种设定下，已有较为成熟的理论工作，提供了可追赶终止的句法表征、检查追赶终止的算法、精确的复杂度结果，以及在有限情况下追赶结果大小的最坏情况下的最优边界。我们的主要目标是实验研究半无记忆追赶算法对于线性存在规则的终止行为。",
    "tldr": "本文关注线性存在规则的半无记忆追赶算法及其终止问题，提供了一个名为LERT的工具，通过实验评估并得到多个理论和实验结果，并发掘了新的有趣研究方向。",
    "en_tdlr": "This paper focuses on the termination behavior of the semi-oblivious chase algorithm for linear existential rules, provides a tool called LERT for generating diverse sets of constraints, reports a large experimental evaluation of chase algorithms, and reveals several interesting findings that challenge and confirm theoretical expectations while highlighting new research directions."
}