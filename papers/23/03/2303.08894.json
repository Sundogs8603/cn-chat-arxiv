{
    "title": "A Formalization of Operads in Coq. (arXiv:2303.08894v1 [math.CT])",
    "abstract": "What provides the highest level of assurance for correctness of execution within a programming language? One answer, and our solution in particular, to this problem is to provide a formalization for, if it exists, the denotational semantics of a programming language. Achieving such a formalization provides a gold standard for ensuring a programming language is correct-by-construction. In our effort on the DARPA V-SPELLS program, we worked to provide a foundation for the denotational semantics of a meta-language using a mathematical object known as an operad. This object has compositional properties which are vital to building languages from smaller pieces. In this paper, we discuss our formalization of an operad in the proof assistant Coq. Moreover, our definition within Coq is capable of providing proofs that objects specified within Coq are operads. This work within Coq provides a formal mathematical basis for our meta-language development within V-SPELLS. Our work also provides, to ",
    "link": "http://arxiv.org/abs/2303.08894",
    "context": "Title: A Formalization of Operads in Coq. (arXiv:2303.08894v1 [math.CT])\nAbstract: What provides the highest level of assurance for correctness of execution within a programming language? One answer, and our solution in particular, to this problem is to provide a formalization for, if it exists, the denotational semantics of a programming language. Achieving such a formalization provides a gold standard for ensuring a programming language is correct-by-construction. In our effort on the DARPA V-SPELLS program, we worked to provide a foundation for the denotational semantics of a meta-language using a mathematical object known as an operad. This object has compositional properties which are vital to building languages from smaller pieces. In this paper, we discuss our formalization of an operad in the proof assistant Coq. Moreover, our definition within Coq is capable of providing proofs that objects specified within Coq are operads. This work within Coq provides a formal mathematical basis for our meta-language development within V-SPELLS. Our work also provides, to ",
    "path": "papers/23/03/2303.08894.json",
    "total_tokens": 870,
    "translated_title": "Coq 中 Operad 的形式化",
    "translated_abstract": "编程语言中的哪种特性能够提供最高的正确性保证？这个问题的一个答案，也是我们的解决方法，是在编程语言中提供一个形式化版本，特别是如果存在可表示的语义的话。达到这样的形式化版本为确保构造正确性提供了金标准。在 DARPA V-SPELLS 计划中，我们努力提供了元语言语义学基础的一个形式化版本，使用了一个叫做 operad 的数学对象。这个对象具有组合属性，对于用更小的代码块构建语言非常重要。在本文中，我们讨论了 operad 在 Coq 证明助手中的形式化定义。此外，我们在 Coq 中定义的 operad 能够提供指定在 Coq 中的物体是 operad 的证明。这项工作在 Coq 中为我们在 V-SPELLS 中开发元语言提供了一个形式化的数学基础。我们的工作还为编程语言社区提供了一个利用 operad 来形式化编程语言的语义学的框架。",
    "tldr": "本文介绍了在 Coq 中对 Operad 的形式化，并提供了利用 operad 来形式化编程语言的语义学的框架。",
    "en_tdlr": "This paper formalizes Operad in Coq and provides a framework for formalizing the denotational semantics of programming languages using Operad."
}