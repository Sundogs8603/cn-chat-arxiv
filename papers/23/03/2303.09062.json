{
    "title": "Knowledge Transfer for Pseudo-code Generation from Low Resource Programming Language. (arXiv:2303.09062v1 [cs.SE])",
    "abstract": "Generation of pseudo-code descriptions of legacy source code for software maintenance is a manually intensive task. Recent encoder-decoder language models have shown promise for automating pseudo-code generation for high resource programming languages such as C++, but are heavily reliant on the availability of a large code-pseudocode corpus. Soliciting such pseudocode annotations for codes written in legacy programming languages (PL) is a time consuming and costly affair requiring a thorough understanding of the source PL. In this paper, we focus on transferring the knowledge acquired by the code-to-pseudocode neural model trained on a high resource PL (C++) using parallel code-pseudocode data. We aim to transfer this knowledge to a legacy PL (C) with no PL-pseudocode parallel data for training. To achieve this, we utilize an Iterative Back Translation (IBT) approach with a novel test-cases based filtration strategy, to adapt the trained C++-to-pseudocode model to C-to-pseudocode model",
    "link": "http://arxiv.org/abs/2303.09062",
    "context": "Title: Knowledge Transfer for Pseudo-code Generation from Low Resource Programming Language. (arXiv:2303.09062v1 [cs.SE])\nAbstract: Generation of pseudo-code descriptions of legacy source code for software maintenance is a manually intensive task. Recent encoder-decoder language models have shown promise for automating pseudo-code generation for high resource programming languages such as C++, but are heavily reliant on the availability of a large code-pseudocode corpus. Soliciting such pseudocode annotations for codes written in legacy programming languages (PL) is a time consuming and costly affair requiring a thorough understanding of the source PL. In this paper, we focus on transferring the knowledge acquired by the code-to-pseudocode neural model trained on a high resource PL (C++) using parallel code-pseudocode data. We aim to transfer this knowledge to a legacy PL (C) with no PL-pseudocode parallel data for training. To achieve this, we utilize an Iterative Back Translation (IBT) approach with a novel test-cases based filtration strategy, to adapt the trained C++-to-pseudocode model to C-to-pseudocode model",
    "path": "papers/23/03/2303.09062.json",
    "total_tokens": 937,
    "translated_title": "来自低资源编程语言的伪代码生成的知识转移",
    "translated_abstract": "生成遗留源代码的伪代码描述以实现软件维护是一项繁琐的任务。最近的编码器-解码器语言模型已经显示出在自动化高资源编程语言（如C++）的伪代码生成方面有潜力，但是它们严重依赖于大量的代码-伪代码语料库的可用性。针对在遗留编程语言（PL）中编写代码的伪代码注释是一项耗时且昂贵的工作，需要深入了解源PL。本文专注于通过使用平行代码-伪代码数据训练的编码器-解码器神经模型获取的知识来实现将这些知识转移到没有PL-伪代码平行数据用于训练的遗留PL（C）上。为了实现此目标，我们利用一种基于测试用例的过滤策略的迭代回译（IBT）方法，以将经过训练的C++-to-pseudocode模型调整为C-to-pseudocode模型。",
    "tldr": "本文研究了将高资源编程语言中训练的编码器-解码器神经模型通过迭代回译的方法，将其知识转移到低资源编程语言中用于伪代码生成，从而解决了缺少低资源编程语言-伪代码平行数据的问题。",
    "en_tdlr": "This paper focuses on transferring the knowledge from a code-to-pseudocode neural model trained on a high resource programming language (C++) to a legacy programming language (C) for pseudo-code generation using an Iterative Back Translation (IBT) approach, addressing the issue of the lack of parallel data for low resource programming languages."
}