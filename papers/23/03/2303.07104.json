{
    "title": "xASTNN: Improved Code Representations for Industrial Practice. (arXiv:2303.07104v2 [cs.SE] UPDATED)",
    "abstract": "The application of deep learning techniques in software engineering becomes increasingly popular. One key problem is developing high-quality and easy-to-use source code representations for code-related tasks. The research community has acquired impressive results in recent years. However, due to the deployment difficulties and performance bottlenecks, seldom these approaches are applied to the industry. In this paper, we present xASTNN, an eXtreme Abstract Syntax Tree (AST)-based Neural Network for source code representation, aiming to push this technique to industrial practice. The proposed xASTNN has three advantages. First, xASTNN is completely based on widely-used ASTs and does not require complicated data pre-processing, making it applicable to various programming languages and practical scenarios. Second, three closely-related designs are proposed to guarantee the effectiveness of xASTNN, including statement subtree sequence for code naturalness, gated recursive unit for syntacti",
    "link": "http://arxiv.org/abs/2303.07104",
    "context": "Title: xASTNN: Improved Code Representations for Industrial Practice. (arXiv:2303.07104v2 [cs.SE] UPDATED)\nAbstract: The application of deep learning techniques in software engineering becomes increasingly popular. One key problem is developing high-quality and easy-to-use source code representations for code-related tasks. The research community has acquired impressive results in recent years. However, due to the deployment difficulties and performance bottlenecks, seldom these approaches are applied to the industry. In this paper, we present xASTNN, an eXtreme Abstract Syntax Tree (AST)-based Neural Network for source code representation, aiming to push this technique to industrial practice. The proposed xASTNN has three advantages. First, xASTNN is completely based on widely-used ASTs and does not require complicated data pre-processing, making it applicable to various programming languages and practical scenarios. Second, three closely-related designs are proposed to guarantee the effectiveness of xASTNN, including statement subtree sequence for code naturalness, gated recursive unit for syntacti",
    "path": "papers/23/03/2303.07104.json",
    "total_tokens": 910,
    "translated_title": "xASTNN：用于工业实践的改进代码表示方法",
    "translated_abstract": "深度学习技术在软件工程中的应用越来越普遍。其中一个关键问题是为代码相关任务开发高质量且易于使用的源代码表示方法。最近几年研究界已经取得了令人瞩目的成果。然而，由于部署困难和性能瓶颈，这些方法很少被应用于工业领域。在本文中，我们提出了xASTNN，一种基于极端抽象语法树（AST）的神经网络，旨在将这种技术推广到工业实践中。xASTNN的三个优点：首先，xASTNN完全基于广泛使用的AST，不需要复杂的数据预处理，适用于不同的编程语言和实际场景。其次，提出了三个密切相关的设计来保证xASTNN的有效性，包括用于代码自然性的语句子树序列、用于句法建模的门控递归单元。",
    "tldr": "xASTNN是一种基于极端抽象语法树（AST）的神经网络，旨在将深度学习技术推广到工业实践中。它的优点包括适用于不同编程语言和实际场景，不需要复杂的数据预处理，以及提供了三个设计来保证其有效性。",
    "en_tdlr": "xASTNN is a neural network based on extreme abstract syntax tree (AST) aimed at promoting the application of deep learning techniques in industrial practice. Its advantages include applicability to different programming languages and practical scenarios, no need for complex data pre-processing, and the provision of three designs to ensure its effectiveness."
}