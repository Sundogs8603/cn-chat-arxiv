{
    "title": "Stop Words for Processing Software Engineering Documents: Do they Matter?. (arXiv:2303.10439v1 [cs.SE])",
    "abstract": "Stop words, which are considered non-predictive, are often eliminated in natural language processing tasks. However, the definition of uninformative vocabulary is vague, so most algorithms use general knowledge-based stop lists to remove stop words. There is an ongoing debate among academics about the usefulness of stop word elimination, especially in domain-specific settings. In this work, we investigate the usefulness of stop word removal in a software engineering context. To do this, we replicate and experiment with three software engineering research tools from related work. Additionally, we construct a corpus of software engineering domain-related text from 10,000 Stack Overflow questions and identify 200 domain-specific stop words using traditional information-theoretic methods. Our results show that the use of domain-specific stop words significantly improved the performance of research tools compared to the use of a general stop list and that 17 out of 19 evaluation measures sh",
    "link": "http://arxiv.org/abs/2303.10439",
    "context": "Title: Stop Words for Processing Software Engineering Documents: Do they Matter?. (arXiv:2303.10439v1 [cs.SE])\nAbstract: Stop words, which are considered non-predictive, are often eliminated in natural language processing tasks. However, the definition of uninformative vocabulary is vague, so most algorithms use general knowledge-based stop lists to remove stop words. There is an ongoing debate among academics about the usefulness of stop word elimination, especially in domain-specific settings. In this work, we investigate the usefulness of stop word removal in a software engineering context. To do this, we replicate and experiment with three software engineering research tools from related work. Additionally, we construct a corpus of software engineering domain-related text from 10,000 Stack Overflow questions and identify 200 domain-specific stop words using traditional information-theoretic methods. Our results show that the use of domain-specific stop words significantly improved the performance of research tools compared to the use of a general stop list and that 17 out of 19 evaluation measures sh",
    "path": "papers/23/03/2303.10439.json",
    "total_tokens": 1001,
    "translated_title": "处理软件工程文档的停用词：它们重要吗？",
    "translated_abstract": "停用词通常被认为是不具有预测性的，因此在自然语言处理任务中通常会被去除。然而，不确定性词汇的定义是模糊的，因此大多数算法使用基于通用知识的停用词列表来去除停用词。学者们一直在就停用词的使用价值进行讨论，特别是在特定领域的设置中。在这项工作中，我们调查了停用词去除在软件工程背景下的实用性。为此，我们复制并实验了三个软件工程研究工具，并构建了一个软件工程领域相关文本的语料库，包括来自 Stack Overflow 的10,000个问题，并使用传统的信息论方法识别了200个领域特定的停用词。我们的结果表明，使用领域特定的停用词与使用通用停用列表相比，显着提高了研究工具的性能，并且19个评估措施中有17个评估措施受益于停用词的消除。我们的工作证明了在处理软件工程文档中去除领域特定的停用词的重要性。",
    "tldr": "本文研究了停用词在软件工程文档中的实用性。经实验证明，使用领域特定的停用词可以显著提高研究工具的性能，并且19个评估措施中有17个评估措施受益于停用词的消除。",
    "en_tdlr": "This paper investigates the usefulness of stop word removal in software engineering documents. The study shows that using domain-specific stop words improves the performance of research tools significantly and 17 out of 19 evaluation measures benefit from stop words elimination. The results demonstrate the importance of removing domain-specific stop words in processing software engineering documents."
}