{
    "title": "Improving Data Transfer Efficiency for AIs in the DareFightingICE using gRPC. (arXiv:2303.10001v1 [cs.NI])",
    "abstract": "This paper presents a new communication interface for the DareFightingICE platform, a Java-based fighting game focused on implementing AI for controlling a non-player character. The interface uses an open-source remote procedure call, gRPC to improve the efficiency of data transfer between the game and the AI, reducing the time spent on receiving information from the game server. This is important because the main challenge of implementing AI in a fighting game is the need for the AI to select an action to perform within a short response time. The DareFightingICE platform has been integrated with Py4J, allowing developers to create AIs using Python. However, Py4J is less efficient at handling large amounts of data, resulting in excessive latency. In contrast, gRPC is well-suited for transmitting large amounts of data. To evaluate the effectiveness of the new communication interface, we conducted an experiment comparing the latency of gRPC and Py4J, using a rule-based AI that sends a ki",
    "link": "http://arxiv.org/abs/2303.10001",
    "context": "Title: Improving Data Transfer Efficiency for AIs in the DareFightingICE using gRPC. (arXiv:2303.10001v1 [cs.NI])\nAbstract: This paper presents a new communication interface for the DareFightingICE platform, a Java-based fighting game focused on implementing AI for controlling a non-player character. The interface uses an open-source remote procedure call, gRPC to improve the efficiency of data transfer between the game and the AI, reducing the time spent on receiving information from the game server. This is important because the main challenge of implementing AI in a fighting game is the need for the AI to select an action to perform within a short response time. The DareFightingICE platform has been integrated with Py4J, allowing developers to create AIs using Python. However, Py4J is less efficient at handling large amounts of data, resulting in excessive latency. In contrast, gRPC is well-suited for transmitting large amounts of data. To evaluate the effectiveness of the new communication interface, we conducted an experiment comparing the latency of gRPC and Py4J, using a rule-based AI that sends a ki",
    "path": "papers/23/03/2303.10001.json",
    "total_tokens": 899,
    "translated_title": "使用gRPC提高DareFightingICE中AI的数据传输效率",
    "translated_abstract": "本文介绍了DareFightingICE平台的一种新的通信接口，该平台是一个基于Java的格斗游戏，其重点是实现控制非玩家角色的AI。该接口使用一个开源的远程过程调用系统，即gRPC，以提高游戏和AI之间的数据传输效率，减少从游戏服务器接收信息所花费的时间。这是很重要的，因为在格斗游戏中实现AI的主要挑战是需要AI在短时间内选择要执行的动作。DareFightingICE平台已经集成了Py4J，允许开发人员使用Python创建AI。然而，Py4J处理大量数据的效率较低，导致延迟过高。相比之下，gRPC很适合传输大量数据。为了评估新的通信接口的有效性，我们进行了一个实验，比较了gRPC和Py4J的延迟，使用的是一个基于规则的AI，该AI发送了一个ki",
    "tldr": "本文介绍了一种新的通信接口gRPC，以改善DareFightingICE中AI数据传输的效率，减少游戏服务器信息接收所花费的时间。在实现控制非玩家角色的AI的应用中，该方法十分有效。"
}