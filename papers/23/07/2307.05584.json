{
    "title": "Code Generation for Machine Learning using Model-Driven Engineering and SysML. (arXiv:2307.05584v1 [cs.SE])",
    "abstract": "Data-driven engineering refers to systematic data collection and processing using machine learning to improve engineering systems. Currently, the implementation of data-driven engineering relies on fundamental data science and software engineering skills. At the same time, model-based engineering is gaining relevance for the engineering of complex systems. In previous work, a model-based engineering approach integrating the formalization of machine learning tasks using the general-purpose modeling language SysML is presented. However, formalized machine learning tasks still require the implementation in a specialized programming languages like Python. Therefore, this work aims to facilitate the implementation of data-driven engineering in practice by extending the previous work of formalizing machine learning tasks by integrating model transformation to generate executable code. The method focuses on the modifiability and maintainability of the model transformation so that extensions a",
    "link": "http://arxiv.org/abs/2307.05584",
    "context": "Title: Code Generation for Machine Learning using Model-Driven Engineering and SysML. (arXiv:2307.05584v1 [cs.SE])\nAbstract: Data-driven engineering refers to systematic data collection and processing using machine learning to improve engineering systems. Currently, the implementation of data-driven engineering relies on fundamental data science and software engineering skills. At the same time, model-based engineering is gaining relevance for the engineering of complex systems. In previous work, a model-based engineering approach integrating the formalization of machine learning tasks using the general-purpose modeling language SysML is presented. However, formalized machine learning tasks still require the implementation in a specialized programming languages like Python. Therefore, this work aims to facilitate the implementation of data-driven engineering in practice by extending the previous work of formalizing machine learning tasks by integrating model transformation to generate executable code. The method focuses on the modifiability and maintainability of the model transformation so that extensions a",
    "path": "papers/23/07/2307.05584.json",
    "total_tokens": 793,
    "translated_title": "使用模型驱动工程和SysML进行机器学习的代码生成",
    "translated_abstract": "数据驱动工程指的是使用机器学习来改进工程系统的系统性数据收集和处理。目前，数据驱动工程的实现依赖于基本的数据科学和软件工程技能。同时，基于模型的工程正变得越来越重要，用于复杂系统的工程。在先前的工作中，提出了一种基于模型的工程方法，通过集成通用建模语言SysML来形式化机器学习任务。然而，形式化的机器学习任务仍然需要在像Python这样的专门的编程语言中实现。因此，本研究旨在通过扩展以往的形式化机器学习任务的工作，通过集成模型转换来生成可执行代码，从而促进实际应用中的数据驱动工程的实现。该方法侧重于模型转换的可修改性和可维护性，以便进行扩展。",
    "tldr": "本研究通过将模型转换与SysML集成，致力于实现数据驱动工程的代码生成，以提高工程系统的可扩展性和可维护性。",
    "en_tdlr": "This study aims to facilitate the implementation of data-driven engineering by integrating model transformation with SysML to generate executable code, thereby improving the scalability and maintainability of engineering systems."
}