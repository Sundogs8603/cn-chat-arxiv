{
    "title": "The potential of LLMs for coding with low-resource and domain-specific programming languages. (arXiv:2307.13018v1 [cs.CL])",
    "abstract": "This paper presents a study on the feasibility of using large language models (LLM) for coding with low-resource and domain-specific programming languages that typically lack the amount of data required for effective LLM processing techniques. This study focuses on the econometric scripting language named hansl of the open-source software gretl and employs a proprietary LLM based on GPT-3.5. Our findings suggest that LLMs can be a useful tool for writing, understanding, improving, and documenting gretl code, which includes generating descriptive docstrings for functions and providing precise explanations for abstract and poorly documented econometric code. While the LLM showcased promoting docstring-to-code translation capability, we also identify some limitations, such as its inability to improve certain sections of code and to write accurate unit tests. This study is a step towards leveraging the power of LLMs to facilitate software development in low-resource programming languages a",
    "link": "http://arxiv.org/abs/2307.13018",
    "context": "Title: The potential of LLMs for coding with low-resource and domain-specific programming languages. (arXiv:2307.13018v1 [cs.CL])\nAbstract: This paper presents a study on the feasibility of using large language models (LLM) for coding with low-resource and domain-specific programming languages that typically lack the amount of data required for effective LLM processing techniques. This study focuses on the econometric scripting language named hansl of the open-source software gretl and employs a proprietary LLM based on GPT-3.5. Our findings suggest that LLMs can be a useful tool for writing, understanding, improving, and documenting gretl code, which includes generating descriptive docstrings for functions and providing precise explanations for abstract and poorly documented econometric code. While the LLM showcased promoting docstring-to-code translation capability, we also identify some limitations, such as its inability to improve certain sections of code and to write accurate unit tests. This study is a step towards leveraging the power of LLMs to facilitate software development in low-resource programming languages a",
    "path": "papers/23/07/2307.13018.json",
    "total_tokens": 912,
    "translated_title": "LLM在低资源和领域特定编程语言编码中的潜力",
    "translated_abstract": "本论文研究了使用大型语言模型（LLM）在低资源和领域特定的编程语言中进行编码的可行性。这些编程语言通常缺乏有效的LLM处理技术所需的数据量。本研究专注于开源软件gretl的计量脚本语言hansl，并使用基于GPT-3.5的专有LLM。我们的研究发现LLM可以成为编写、理解、改进和文档化gretl代码的有用工具，其中包括为函数生成描述性的文档字符串，并为抽象和文档不完备的计量代码提供精确的解释。尽管LLM展示了字符串到代码翻译能力，但我们也发现了一些局限性，例如LLM无法改善某些代码段并编写准确的单元测试。这项研究是利用LLM的能力促进低资源编程语言软件开发的一步。",
    "tldr": "本论文研究了使用LLM进行低资源和领域特定编程语言编码的可行性，发现LLM可以用于改进gretl代码，并生成描述性的文档字符串和精确的解释。然而LLM在某些方面存在局限性，如无法改善某些代码段和编写准确的单元测试。",
    "en_tdlr": "This paper explores the feasibility of using LLMs for coding with low-resource and domain-specific programming languages. The findings suggest that LLMs can be effective in improving code and generating descriptive docstrings and explanations. However, there are limitations in terms of code improvement and accurate unit testing."
}