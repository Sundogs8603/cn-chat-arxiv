{
    "title": "On Solving the Rubik's Cube with Domain-Independent Planners Using Standard Representations. (arXiv:2307.13552v1 [cs.AI])",
    "abstract": "Rubik's Cube (RC) is a well-known and computationally challenging puzzle that has motivated AI researchers to explore efficient alternative representations and problem-solving methods. The ideal situation for planning here is that a problem be solved optimally and efficiently represented in a standard notation using a general-purpose solver and heuristics. The fastest solver today for RC is DeepCubeA with a custom representation, and another approach is with Scorpion planner with State-Action-Space+ (SAS+) representation. In this paper, we present the first RC representation in the popular PDDL language so that the domain becomes more accessible to PDDL planners, competitions, and knowledge engineering tools, and is more human-readable. We then bridge across existing approaches and compare performance. We find that in one comparable experiment, DeepCubeA solves all problems with varying complexities, albeit only 18\\% are optimal plans. For the same problem set, Scorpion with SAS+ repre",
    "link": "http://arxiv.org/abs/2307.13552",
    "context": "Title: On Solving the Rubik's Cube with Domain-Independent Planners Using Standard Representations. (arXiv:2307.13552v1 [cs.AI])\nAbstract: Rubik's Cube (RC) is a well-known and computationally challenging puzzle that has motivated AI researchers to explore efficient alternative representations and problem-solving methods. The ideal situation for planning here is that a problem be solved optimally and efficiently represented in a standard notation using a general-purpose solver and heuristics. The fastest solver today for RC is DeepCubeA with a custom representation, and another approach is with Scorpion planner with State-Action-Space+ (SAS+) representation. In this paper, we present the first RC representation in the popular PDDL language so that the domain becomes more accessible to PDDL planners, competitions, and knowledge engineering tools, and is more human-readable. We then bridge across existing approaches and compare performance. We find that in one comparable experiment, DeepCubeA solves all problems with varying complexities, albeit only 18\\% are optimal plans. For the same problem set, Scorpion with SAS+ repre",
    "path": "papers/23/07/2307.13552.json",
    "total_tokens": 787,
    "translated_title": "用领域无关规划器和标准表示解决魔方的研究",
    "translated_abstract": "魔方是一个众所周知且计算上具有挑战性的谜题，已经激发了人工智能研究人员探索高效的替代表示和问题解决方法。本文首次将魔方的表示转换为流行的PDDL语言，使得领域对PDDL规划器、竞赛和知识工程工具更加可访问和易读。然后我们比较了现有方法的性能。我们发现，在一个可比较的实验中，DeepCubeA可以解决所有不同复杂度的问题，尽管只有18％是最优解。",
    "tldr": "本文将魔方的表示转换为PDDL语言，使其更具可访问性和易读性。实验结果表明，DeepCubeA可以解决所有不同复杂度的魔方问题，但只有18％是最优解。"
}