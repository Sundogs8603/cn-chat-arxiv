{
    "title": "CodeLens: An Interactive Tool for Visualizing Code Representations. (arXiv:2307.14902v1 [cs.SE])",
    "abstract": "Representing source code in a generic input format is crucial to automate software engineering tasks, e.g., applying machine learning algorithms to extract information. Visualizing code representations can further enable human experts to gain an intuitive insight into the code. Unfortunately, as of today, there is no universal tool that can simultaneously visualise different types of code representations. In this paper, we introduce a tool, CodeLens, which provides a visual interaction environment that supports various representation methods and helps developers understand and explore them. CodeLens is designed to support multiple programming languages, such as Java, Python, and JavaScript, and four types of code representations, including sequence of tokens, abstract syntax tree (AST), data flow graph (DFG), and control flow graph (CFG). By using CodeLens, developers can quickly visualize the specific code representation and also obtain the represented inputs for models of code. The W",
    "link": "http://arxiv.org/abs/2307.14902",
    "context": "Title: CodeLens: An Interactive Tool for Visualizing Code Representations. (arXiv:2307.14902v1 [cs.SE])\nAbstract: Representing source code in a generic input format is crucial to automate software engineering tasks, e.g., applying machine learning algorithms to extract information. Visualizing code representations can further enable human experts to gain an intuitive insight into the code. Unfortunately, as of today, there is no universal tool that can simultaneously visualise different types of code representations. In this paper, we introduce a tool, CodeLens, which provides a visual interaction environment that supports various representation methods and helps developers understand and explore them. CodeLens is designed to support multiple programming languages, such as Java, Python, and JavaScript, and four types of code representations, including sequence of tokens, abstract syntax tree (AST), data flow graph (DFG), and control flow graph (CFG). By using CodeLens, developers can quickly visualize the specific code representation and also obtain the represented inputs for models of code. The W",
    "path": "papers/23/07/2307.14902.json",
    "total_tokens": 783,
    "translated_title": "CodeLens: 一种用于可视化代码表示的交互式工具",
    "translated_abstract": "将源代码以通用输入格式表示对于自动化软件工程任务至关重要，例如应用机器学习算法来提取信息。可视化代码表示可以进一步使人类专家直观地理解代码。然而，到目前为止，还没有一种通用工具能够同时可视化不同类型的代码表示。在本文中，我们介绍了一种名为CodeLens的工具，它提供了一个可视化交互环境，支持各种表示方法，并帮助开发人员理解和探索它们。CodeLens被设计成支持多种编程语言，如Java、Python和JavaScript，以及四种代码表示类型，包括标记序列、抽象语法树（AST）、数据流图（DFG）和控制流图（CFG）。通过使用CodeLens，开发人员可以快速可视化特定的代码表示，并获取代码模型的表示输入。",
    "tldr": "CodeLens是一种可视化代码表示的交互式工具，支持多种表示方法和编程语言，开发人员能够快速理解和探索代码。",
    "en_tdlr": "CodeLens is an interactive tool for visualizing code representations, supporting multiple representation methods and programming languages, enabling developers to quickly understand and explore code."
}