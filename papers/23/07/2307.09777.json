{
    "title": "Generating Redstone Style Cities in Minecraft. (arXiv:2307.09777v1 [cs.AI])",
    "abstract": "Procedurally generating cities in Minecraft provides players more diverse scenarios and could help understand and improve the design of cities in other digital worlds and the real world. This paper presents a city generator that was submitted as an entry to the 2023 Edition of Minecraft Settlement Generation Competition for Minecraft. The generation procedure is composed of six main steps, namely vegetation clearing, terrain reshaping, building layout generation, route planning, streetlight placement, and wall construction. Three algorithms, including a heuristic-based algorithm, an evolving layout algorithm, and a random one are applied to generate the building layout, thus determining where to place different redstone style buildings, and tested by generating cities on random maps in limited time. Experimental results show that the heuristic-based algorithm is capable of finding an acceptable building layout faster for flat maps, while the evolving layout algorithm performs better in",
    "link": "http://arxiv.org/abs/2307.09777",
    "context": "Title: Generating Redstone Style Cities in Minecraft. (arXiv:2307.09777v1 [cs.AI])\nAbstract: Procedurally generating cities in Minecraft provides players more diverse scenarios and could help understand and improve the design of cities in other digital worlds and the real world. This paper presents a city generator that was submitted as an entry to the 2023 Edition of Minecraft Settlement Generation Competition for Minecraft. The generation procedure is composed of six main steps, namely vegetation clearing, terrain reshaping, building layout generation, route planning, streetlight placement, and wall construction. Three algorithms, including a heuristic-based algorithm, an evolving layout algorithm, and a random one are applied to generate the building layout, thus determining where to place different redstone style buildings, and tested by generating cities on random maps in limited time. Experimental results show that the heuristic-based algorithm is capable of finding an acceptable building layout faster for flat maps, while the evolving layout algorithm performs better in",
    "path": "papers/23/07/2307.09777.json",
    "total_tokens": 812,
    "translated_title": "在Minecraft中生成类似红石风格的城市",
    "translated_abstract": "在Minecraft中程序化生成城市为玩家提供了更多多样化场景的可能，也有助于理解和改进其他数字世界和现实世界中的城市设计。本文提出了一个城市生成器，作为参加Minecraft定居生成比赛的参赛作品。生成过程包括植被清理、地形整形、建筑布局生成、路径规划、路灯布置和围墙建设等六个主要步骤。使用了基于启发式的算法、演化布局算法和随机算法来生成建筑布局，并通过在有限时间内在随机地图上生成城市进行测试。实验结果显示，对于平坦地图，基于启发式的算法能更快地找到可接受的建筑布局，而演化布局算法在其他情况下表现更好。",
    "tldr": "本文提出了一个在Minecraft中生成城市的方法，并通过使用不同算法来生成建筑布局，实验结果表明基于启发式的算法对于平坦地图更快找到可接受的布局，而演化布局算法在其他情况下表现更好。",
    "en_tdlr": "This paper presents a method for generating cities in Minecraft, and the experimental results show that the heuristic-based algorithm finds acceptable layouts faster for flat maps, while the evolving layout algorithm performs better in other cases."
}