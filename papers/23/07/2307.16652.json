{
    "title": "Sequential and Shared-Memory Parallel Algorithms for Partitioned Local Depths. (arXiv:2307.16652v1 [cs.DC])",
    "abstract": "In this work, we design, analyze, and optimize sequential and shared-memory parallel algorithms for partitioned local depths (PaLD). Given a set of data points and pairwise distances, PaLD is a method for identifying strength of pairwise relationships based on relative distances, enabling the identification of strong ties within dense and sparse communities even if their sizes and within-community absolute distances vary greatly. We design two algorithmic variants that perform community structure analysis through triplet comparisons of pairwise distances. We present theoretical analyses of computation and communication costs and prove that the sequential algorithms are communication optimal, up to constant factors. We introduce performance optimization strategies that yield sequential speedups of up to $29\\times$ over a baseline sequential implementation and parallel speedups of up to $19.4\\times$ over optimized sequential implementations using up to $32$ threads on an Intel multicore ",
    "link": "http://arxiv.org/abs/2307.16652",
    "context": "Title: Sequential and Shared-Memory Parallel Algorithms for Partitioned Local Depths. (arXiv:2307.16652v1 [cs.DC])\nAbstract: In this work, we design, analyze, and optimize sequential and shared-memory parallel algorithms for partitioned local depths (PaLD). Given a set of data points and pairwise distances, PaLD is a method for identifying strength of pairwise relationships based on relative distances, enabling the identification of strong ties within dense and sparse communities even if their sizes and within-community absolute distances vary greatly. We design two algorithmic variants that perform community structure analysis through triplet comparisons of pairwise distances. We present theoretical analyses of computation and communication costs and prove that the sequential algorithms are communication optimal, up to constant factors. We introduce performance optimization strategies that yield sequential speedups of up to $29\\times$ over a baseline sequential implementation and parallel speedups of up to $19.4\\times$ over optimized sequential implementations using up to $32$ threads on an Intel multicore ",
    "path": "papers/23/07/2307.16652.json",
    "total_tokens": 879,
    "translated_title": "针对分割局部深度的连续和共享内存并行算法",
    "translated_abstract": "在这项工作中，我们设计、分析和优化了分割局部深度（PaLD）的连续和共享内存并行算法。给定一组数据点和两两距离，PaLD是一种基于相对距离识别两两关系强度的方法，能够在稠密和稀疏社区内识别强关系，即使它们的大小和社区内部绝对距离差别很大。我们设计了两种算法变体，通过三元组比较两两距离进行社区结构分析。我们对计算和通信成本进行了理论分析，并证明了连续算法在通信方面是最优的，最多只有常数因子。我们引入了性能优化策略，在基准连续实现上实现了高达29倍的连续加速和在多核Intel上使用高达32个线程的优化连续实现上实现了高达19.4倍的并行加速。",
    "tldr": "本文设计了连续和共享内存并行算法用于分割局部深度，并引入了性能优化策略，实现了较高的加速。通过三元组比较两两距离，实现了对稠密和稀疏社区内强关系的识别。",
    "en_tdlr": "This paper presents sequential and shared-memory parallel algorithms for partitioned local depths (PaLD), enabling the identification of strong ties within dense and sparse communities. Performance optimization strategies are introduced to achieve significant speedups. Triplet comparisons of pairwise distances are used for community structure analysis."
}