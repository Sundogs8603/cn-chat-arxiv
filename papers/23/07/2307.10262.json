{
    "title": "Hyperparameter Tuning Cookbook: A guide for scikit-learn, PyTorch, river, and spotPython. (arXiv:2307.10262v1 [cs.LG])",
    "abstract": "This document provides a comprehensive guide to hyperparameter tuning using spotPython for scikit-learn, PyTorch, and river. The first part introduces spotPython's surrogate model-based optimization process, while the second part focuses on hyperparameter tuning. Several case studies are presented, including hyperparameter tuning for sklearn models such as Support Vector Classification, Random Forests, Gradient Boosting (XGB), and K-nearest neighbors (KNN), as well as a Hoeffding Adaptive Tree Regressor from river. The integration of spotPython into the PyTorch and PyTorch Lightning training workflow is also discussed. With a hands-on approach and step-by-step explanations, this cookbook serves as a practical starting point for anyone interested in hyperparameter tuning with Python. Highlights include the interplay between Tensorboard, PyTorch Lightning, spotPython, and river. This publication is under development, with updates available on the corresponding webpage.",
    "link": "http://arxiv.org/abs/2307.10262",
    "context": "Title: Hyperparameter Tuning Cookbook: A guide for scikit-learn, PyTorch, river, and spotPython. (arXiv:2307.10262v1 [cs.LG])\nAbstract: This document provides a comprehensive guide to hyperparameter tuning using spotPython for scikit-learn, PyTorch, and river. The first part introduces spotPython's surrogate model-based optimization process, while the second part focuses on hyperparameter tuning. Several case studies are presented, including hyperparameter tuning for sklearn models such as Support Vector Classification, Random Forests, Gradient Boosting (XGB), and K-nearest neighbors (KNN), as well as a Hoeffding Adaptive Tree Regressor from river. The integration of spotPython into the PyTorch and PyTorch Lightning training workflow is also discussed. With a hands-on approach and step-by-step explanations, this cookbook serves as a practical starting point for anyone interested in hyperparameter tuning with Python. Highlights include the interplay between Tensorboard, PyTorch Lightning, spotPython, and river. This publication is under development, with updates available on the corresponding webpage.",
    "path": "papers/23/07/2307.10262.json",
    "total_tokens": 924,
    "translated_title": "超参数调整指南：适用于scikit-learn、PyTorch、river和spotPython的指南",
    "translated_abstract": "本文提供了使用spotPython对scikit-learn、PyTorch和river进行超参数调整的全面指南。第一部分介绍了spotPython的基于代理模型的优化过程，第二部分着重介绍了超参数调整。文中提供了几个案例研究，包括对scikit-learn模型（如支持向量分类，随机森林，梯度提升（XGB）和K最近邻（KNN））以及river中的Hoeffding自适应树回归器进行超参数调整。还讨论了将spotPython集成到PyTorch和PyTorch Lightning训练工作流中的方法。通过实践和逐步解释的方式，本手册为对使用Python进行超参数调整感兴趣的任何人提供了实用的起点。重点包括Tensorboard、PyTorch Lightning、spotPython和river之间的相互作用。该出版物正在开发中，更新内容可在对应的网页上获取。",
    "tldr": "本文提供了使用spotPython进行scikit-learn、PyTorch和river的超参数调整的全面指南。重点介绍了spotPython的优化过程和超参数调整，并提供了几个实际案例研究。该指南为对Python超参数调整感兴趣的人们提供了实用的起点。",
    "en_tdlr": "This paper provides a comprehensive guide to hyperparameter tuning using spotPython for scikit-learn, PyTorch, and river. It focuses on spotPython's optimization process and hyperparameter tuning, and includes several case studies. The guide serves as a practical starting point for anyone interested in hyperparameter tuning with Python."
}