{
    "title": "Assembled-OpenML: Creating Efficient Benchmarks for Ensembles in AutoML with OpenML. (arXiv:2307.00285v1 [cs.LG])",
    "abstract": "Automated Machine Learning (AutoML) frameworks regularly use ensembles. Developers need to compare different ensemble techniques to select appropriate techniques for an AutoML framework from the many potential techniques. So far, the comparison of ensemble techniques is often computationally expensive, because many base models must be trained and evaluated one or multiple times. Therefore, we present Assembled-OpenML. Assembled-OpenML is a Python tool, which builds meta-datasets for ensembles using OpenML. A meta-dataset, called Metatask, consists of the data of an OpenML task, the task's dataset, and prediction data from model evaluations for the task. We can make the comparison of ensemble techniques computationally cheaper by using the predictions stored in a metatask instead of training and evaluating base models. To introduce Assembled-OpenML, we describe the first version of our tool. Moreover, we present an example of using Assembled-OpenML to compare a set of ensemble technique",
    "link": "http://arxiv.org/abs/2307.00285",
    "context": "Title: Assembled-OpenML: Creating Efficient Benchmarks for Ensembles in AutoML with OpenML. (arXiv:2307.00285v1 [cs.LG])\nAbstract: Automated Machine Learning (AutoML) frameworks regularly use ensembles. Developers need to compare different ensemble techniques to select appropriate techniques for an AutoML framework from the many potential techniques. So far, the comparison of ensemble techniques is often computationally expensive, because many base models must be trained and evaluated one or multiple times. Therefore, we present Assembled-OpenML. Assembled-OpenML is a Python tool, which builds meta-datasets for ensembles using OpenML. A meta-dataset, called Metatask, consists of the data of an OpenML task, the task's dataset, and prediction data from model evaluations for the task. We can make the comparison of ensemble techniques computationally cheaper by using the predictions stored in a metatask instead of training and evaluating base models. To introduce Assembled-OpenML, we describe the first version of our tool. Moreover, we present an example of using Assembled-OpenML to compare a set of ensemble technique",
    "path": "papers/23/07/2307.00285.json",
    "total_tokens": 878,
    "translated_title": "Assembled-OpenML：使用OpenML创建自动机器学习中高效的集成算法基准",
    "translated_abstract": "自动机器学习（AutoML）框架经常使用集成算法。开发人员需要比较不同的集成算法技术，以选择适合AutoML框架的技术。到目前为止，集成算法技术的比较通常是计算密集型的，因为需要训练和评估许多基础模型一次或多次。因此，我们提出了Assembled-OpenML。Assembled-OpenML是一个基于Python的工具，使用OpenML构建集成算法的元数据集。元数据集称为Metatask，包含OpenML任务的数据、任务的数据集以及任务的模型评估预测数据。通过使用存储在元数据集中的预测结果，我们可以使集成算法技术的比较计算成本更低，而无需训练和评估基础模型。为了介绍Assembled-OpenML，我们描述了我们工具的第一个版本，并展示了使用Assembled-OpenML比较一组集成算法的示例。",
    "tldr": "Assembled-OpenML是一个使用OpenML构建集成算法元数据集的工具，通过使用预测结果来降低计算成本，实现了自动机器学习中集成算法技术的比较。",
    "en_tdlr": "Assembled-OpenML is a tool that builds metadata sets for ensemble algorithms using OpenML. It reduces computation costs by using predicted results, enabling comparison of ensemble techniques in automated machine learning."
}