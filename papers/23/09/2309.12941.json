{
    "title": "Trusta: Reasoning about Assurance Cases with Formal Methods and Large Language Models. (arXiv:2309.12941v1 [cs.SE])",
    "abstract": "Assurance cases can be used to argue for the safety of products in safety engineering. In safety-critical areas, the construction of assurance cases is indispensable. Trustworthiness Derivation Trees (TDTs) enhance assurance cases by incorporating formal methods, rendering it possible for automatic reasoning about assurance cases. We present Trustworthiness Derivation Tree Analyzer (Trusta), a desktop application designed to automatically construct and verify TDTs. The tool has a built-in Prolog interpreter in its backend, and is supported by the constraint solvers Z3 and MONA. Therefore, it can solve constraints about logical formulas involving arithmetic, sets, Horn clauses etc. Trusta also utilizes large language models to make the creation and evaluation of assurance cases more convenient. It allows for interactive human examination and modification. We evaluated top language models like ChatGPT-3.5, ChatGPT-4, and PaLM 2 for generating assurance cases. Our tests showed a 50%-80% s",
    "link": "http://arxiv.org/abs/2309.12941",
    "context": "Title: Trusta: Reasoning about Assurance Cases with Formal Methods and Large Language Models. (arXiv:2309.12941v1 [cs.SE])\nAbstract: Assurance cases can be used to argue for the safety of products in safety engineering. In safety-critical areas, the construction of assurance cases is indispensable. Trustworthiness Derivation Trees (TDTs) enhance assurance cases by incorporating formal methods, rendering it possible for automatic reasoning about assurance cases. We present Trustworthiness Derivation Tree Analyzer (Trusta), a desktop application designed to automatically construct and verify TDTs. The tool has a built-in Prolog interpreter in its backend, and is supported by the constraint solvers Z3 and MONA. Therefore, it can solve constraints about logical formulas involving arithmetic, sets, Horn clauses etc. Trusta also utilizes large language models to make the creation and evaluation of assurance cases more convenient. It allows for interactive human examination and modification. We evaluated top language models like ChatGPT-3.5, ChatGPT-4, and PaLM 2 for generating assurance cases. Our tests showed a 50%-80% s",
    "path": "papers/23/09/2309.12941.json",
    "total_tokens": 854,
    "translated_title": "Trusta: 使用形式方法和大型语言模型推理保证论证",
    "translated_abstract": "保证论证可以用于在安全工程中为产品的安全性提供论据。在安全关键领域，构建保证论证是不可或缺的。可信度推导树（TDT）通过结合形式方法加强了保证论证，使得自动推理成为可能。我们提出了Trustworthiness Derivation Tree Analyzer（Trusta），一款旨在自动构建和验证TDT的桌面应用程序。该工具在其后端具有内置的Prolog解释器，并受到约束求解器Z3和MONA的支持。因此，它可以解决涉及算术、集合、Horn子句等逻辑公式的约束问题。Trusta还利用了大型语言模型，使保证论证的创建和评估更加便捷。它允许进行交互式的人工审查和修改。我们评估了ChatGPT-3.5、ChatGPT-4和PaLM 2等顶级语言模型用于生成保证论证。我们的测试显示，其生成的保证论证的准确率为50%-80%。",
    "tldr": "Trusta是一款使用形式方法和大型语言模型推理保证论证的桌面应用程序，它可以自动构建和验证可信度推导树(TDT)，同时利用大型语言模型使论证的创建和评估更加便捷。"
}