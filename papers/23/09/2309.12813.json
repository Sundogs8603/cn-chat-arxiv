{
    "title": "Automatically Testing Functional Properties of Code Translation Models. (arXiv:2309.12813v1 [cs.SE])",
    "abstract": "Large language models are becoming increasingly practical for translating code across programming languages, a process known as $transpiling$. Even though automated transpilation significantly boosts developer productivity, a key concern is whether the generated code is correct. Existing work initially used manually crafted test suites to test the translations of a small corpus of programs; these test suites were later automated. In contrast, we devise the first approach for automated, functional, property-based testing of code translation models. Our general, user-provided specifications about the transpiled code capture a range of properties, from purely syntactic to purely semantic ones. As shown by our experiments, this approach is very effective in detecting property violations in popular code translation models, and therefore, in evaluating model quality with respect to given properties. We also go a step further and explore the usage scenario where a user simply aims to obtain a",
    "link": "http://arxiv.org/abs/2309.12813",
    "context": "Title: Automatically Testing Functional Properties of Code Translation Models. (arXiv:2309.12813v1 [cs.SE])\nAbstract: Large language models are becoming increasingly practical for translating code across programming languages, a process known as $transpiling$. Even though automated transpilation significantly boosts developer productivity, a key concern is whether the generated code is correct. Existing work initially used manually crafted test suites to test the translations of a small corpus of programs; these test suites were later automated. In contrast, we devise the first approach for automated, functional, property-based testing of code translation models. Our general, user-provided specifications about the transpiled code capture a range of properties, from purely syntactic to purely semantic ones. As shown by our experiments, this approach is very effective in detecting property violations in popular code translation models, and therefore, in evaluating model quality with respect to given properties. We also go a step further and explore the usage scenario where a user simply aims to obtain a",
    "path": "papers/23/09/2309.12813.json",
    "total_tokens": 818,
    "translated_title": "自动测试代码翻译模型的功能性质",
    "translated_abstract": "对于跨编程语言进行代码翻译的大型语言模型，即$transpiling$，正变得日益实用。尽管自动翻译显著提高了开发者的生产力，但一个关键问题是生成的代码是否正确。现有的工作最初使用手工制作的测试套件来测试小规模程序的翻译，后来又将这些测试套件自动化。相反，我们提出了一种用于自动化功能性属性测试的代码翻译模型的方法。我们关于转换后代码的一般用户提供的规范涵盖了一系列属性，从纯语法到纯语义。正如我们的实验所示，这种方法在检测流行的代码翻译模型中的属性违规方面非常有效，因此可以根据给定的属性评估模型质量。我们还进一步探索了用户只需获得",
    "tldr": "本研究介绍了一种自动、功能性的代码翻译模型测试方法，能够捕捉各种属性从纯语法到纯语义的相关信息，并在实验中证明其有效性。",
    "en_tdlr": "In this study, we present an automated, functional testing method for code translation models that captures a range of properties from syntactic to semantic, and demonstrate its effectiveness in detecting property violations in popular code translation models."
}