{
    "title": "An Extendable Python Implementation of Robust Optimisation Monte Carlo. (arXiv:2309.10612v1 [cs.LG])",
    "abstract": "Performing inference in statistical models with an intractable likelihood is challenging, therefore, most likelihood-free inference (LFI) methods encounter accuracy and efficiency limitations. In this paper, we present the implementation of the LFI method Robust Optimisation Monte Carlo (ROMC) in the Python package ELFI. ROMC is a novel and efficient (highly-parallelizable) LFI framework that provides accurate weighted samples from the posterior. Our implementation can be used in two ways. First, a scientist may use it as an out-of-the-box LFI algorithm; we provide an easy-to-use API harmonized with the principles of ELFI, enabling effortless comparisons with the rest of the methods included in the package. Additionally, we have carefully split ROMC into isolated components for supporting extensibility. A researcher may experiment with novel method(s) for solving part(s) of ROMC without reimplementing everything from scratch. In both scenarios, the ROMC parts can run in a fully-paralle",
    "link": "http://arxiv.org/abs/2309.10612",
    "context": "Title: An Extendable Python Implementation of Robust Optimisation Monte Carlo. (arXiv:2309.10612v1 [cs.LG])\nAbstract: Performing inference in statistical models with an intractable likelihood is challenging, therefore, most likelihood-free inference (LFI) methods encounter accuracy and efficiency limitations. In this paper, we present the implementation of the LFI method Robust Optimisation Monte Carlo (ROMC) in the Python package ELFI. ROMC is a novel and efficient (highly-parallelizable) LFI framework that provides accurate weighted samples from the posterior. Our implementation can be used in two ways. First, a scientist may use it as an out-of-the-box LFI algorithm; we provide an easy-to-use API harmonized with the principles of ELFI, enabling effortless comparisons with the rest of the methods included in the package. Additionally, we have carefully split ROMC into isolated components for supporting extensibility. A researcher may experiment with novel method(s) for solving part(s) of ROMC without reimplementing everything from scratch. In both scenarios, the ROMC parts can run in a fully-paralle",
    "path": "papers/23/09/2309.10612.json",
    "total_tokens": 954,
    "translated_title": "可扩展的Robust Optimisation Monte Carlo的Python实现",
    "translated_abstract": "在具有无法处理的似然函数的统计模型中进行推理是具有挑战性的，因此，大多数无似然函数推理（LFI）方法会遇到准确性和效率的限制。在本文中，我们介绍了Python包ELFI中LFI方法Robust Optimisation Monte Carlo（ROMC）的实现。ROMC是一种新颖而高效（高度可并行化）的LFI框架，可以提供准确的加权后验样本。我们的实现可以通过两种方式使用。首先，科学家可以将其作为即插即用的LFI算法使用；我们提供了一个易于使用的API，与ELFI的原则相协调，可以轻松与包中其他方法进行比较。此外，我们还将ROMC细分为孤立的组件，以支持可扩展性。研究人员可以实验新的方法来解决ROMC的一部分问题，而无需从头开始重新实现整个过程。在这两种情景下，ROMC部分可以完全并行运行。",
    "tldr": "这篇论文介绍了Python包ELFI中的Robust Optimisation Monte Carlo（ROMC）方法的实现。ROMC是一种新颖且高效的无似然函数推理（LFI）框架，可以提供准确的加权后验样本。实现可以作为即插即用的LFI算法使用，也可以支持可扩展性的研究。",
    "en_tdlr": "This paper presents the implementation of the Robust Optimisation Monte Carlo (ROMC) method in the Python package ELFI. ROMC is a novel and efficient Likelihood-Free Inference (LFI) framework that provides accurate weighted samples from the posterior. The implementation can be used as an out-of-the-box LFI algorithm and also supports extensibility for further research."
}