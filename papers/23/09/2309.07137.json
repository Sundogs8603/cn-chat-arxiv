{
    "title": "Bringing PDEs to JAX with forward and reverse modes automatic differentiation. (arXiv:2309.07137v1 [cs.MS])",
    "abstract": "Partial differential equations (PDEs) are used to describe a variety of physical phenomena. Often these equations do not have analytical solutions and numerical approximations are used instead. One of the common methods to solve PDEs is the finite element method. Computing derivative information of the solution with respect to the input parameters is important in many tasks in scientific computing. We extend JAX automatic differentiation library with an interface to Firedrake finite element library. High-level symbolic representation of PDEs allows bypassing differentiating through low-level possibly many iterations of the underlying nonlinear solvers. Differentiating through Firedrake solvers is done using tangent-linear and adjoint equations. This enables the efficient composition of finite element solvers with arbitrary differentiable programs. The code is available at github.com/IvanYashchuk/jax-firedrake.",
    "link": "http://arxiv.org/abs/2309.07137",
    "context": "Title: Bringing PDEs to JAX with forward and reverse modes automatic differentiation. (arXiv:2309.07137v1 [cs.MS])\nAbstract: Partial differential equations (PDEs) are used to describe a variety of physical phenomena. Often these equations do not have analytical solutions and numerical approximations are used instead. One of the common methods to solve PDEs is the finite element method. Computing derivative information of the solution with respect to the input parameters is important in many tasks in scientific computing. We extend JAX automatic differentiation library with an interface to Firedrake finite element library. High-level symbolic representation of PDEs allows bypassing differentiating through low-level possibly many iterations of the underlying nonlinear solvers. Differentiating through Firedrake solvers is done using tangent-linear and adjoint equations. This enables the efficient composition of finite element solvers with arbitrary differentiable programs. The code is available at github.com/IvanYashchuk/jax-firedrake.",
    "path": "papers/23/09/2309.07137.json",
    "total_tokens": 810,
    "translated_title": "使用正向和逆向模式的自动微分将偏微分方程引入JAX",
    "translated_abstract": "偏微分方程（PDEs）用于描述各种物理现象。通常这些方程没有解析解，而是使用数值逼近方法。其中一种常见的求解PDEs的方法是有限元方法。在科学计算中，计算解对输入参数的导数信息非常重要。我们将JAX自动微分库扩展到与Firedrake有限元库的接口。PDE的高级符号表示允许通过绕过基础非线性求解器的低级多次迭代来进行微分。通过Firedrake求解器的微分计算使用切线线性和伴随方程来完成。这使得有限元求解器可以与任意可微程序高效组合。代码可在github.com/IvanYashchuk/jax-firedrake上找到。",
    "tldr": "这篇论文介绍了如何将偏微分方程引入到JAX库中，通过使用Firedrake有限元库的接口来实现。而使用正向和逆向模式的自动微分计算方法，可以高效地组合有限元求解器和可微程序。",
    "en_tdlr": "This paper describes how to bring partial differential equations (PDEs) into the JAX library using an interface to the Firedrake finite element library. The use of forward and reverse mode automatic differentiation enables efficient composition of finite element solvers with differentiable programs."
}