{
    "title": "Symbolically integrating tensor networks over various random tensors -- the second version of Python RTNI. (arXiv:2309.01167v2 [physics.comp-ph] UPDATED)",
    "abstract": "We are upgrading the Python-version of RTNI, which symbolically integrates tensor networks over the Haar-distributed unitary matrices. Now, PyRTNI2 can treat the Haar-distributed orthogonal matrices and the real and complex normal Gaussian tensors as well. Moreover, it can export tensor networks in the format of TensorNetwork so that one can make further calculations with concrete tensors, even for low dimensions, where the Weingarten functions differ from the ones for high dimensions. The tutorial notebooks are found at GitHub: https://github.com/MotohisaFukuda/PyRTNI2. In this paper, we explain maths behind the program and show what kind of tensor network calculations can be made with it. For the former, we interpret the element-wise moment calculus of the above random matrices and tensors in terms of tensor network diagrams, and argue that the view is natural, relating delta functions in the calculus to edges in tensor network diagrams.",
    "link": "http://arxiv.org/abs/2309.01167",
    "context": "Title: Symbolically integrating tensor networks over various random tensors -- the second version of Python RTNI. (arXiv:2309.01167v2 [physics.comp-ph] UPDATED)\nAbstract: We are upgrading the Python-version of RTNI, which symbolically integrates tensor networks over the Haar-distributed unitary matrices. Now, PyRTNI2 can treat the Haar-distributed orthogonal matrices and the real and complex normal Gaussian tensors as well. Moreover, it can export tensor networks in the format of TensorNetwork so that one can make further calculations with concrete tensors, even for low dimensions, where the Weingarten functions differ from the ones for high dimensions. The tutorial notebooks are found at GitHub: https://github.com/MotohisaFukuda/PyRTNI2. In this paper, we explain maths behind the program and show what kind of tensor network calculations can be made with it. For the former, we interpret the element-wise moment calculus of the above random matrices and tensors in terms of tensor network diagrams, and argue that the view is natural, relating delta functions in the calculus to edges in tensor network diagrams.",
    "path": "papers/23/09/2309.01167.json",
    "total_tokens": 965,
    "translated_title": "符号性地整合不同随机张量的张量网络计算 - Python RTNI的第二版本",
    "translated_abstract": "我们正在升级RTNI的Python版本，该版本能够符号性地整合Haar分布的酉矩阵上的张量网络。现在，PyRTNI2还可以处理Haar分布的正交矩阵以及实数和复数正态分布的张量。此外，它可以将张量网络以TensorNetwork的格式导出，这样可以使用具体的张量进行进一步计算，即使是低维情况下的计算，其中Weingarten函数与高维情况下的函数不同。教程笔记本可以在GitHub上找到：https://github.com/MotohisaFukuda/PyRTNI2。在本文中，我们解释了程序背后的数学原理，并展示了可以使用它进行的各种张量网络计算。关于前者，我们将上述随机矩阵和张量的逐元素矩阵微积分解释为张量网络图，认为这种观点是自然的，将微积分中的delta函数与张量网络图中的边相关联。",
    "tldr": "我们升级了Python RTNI的第二版，可以对不同随机张量进行符号性整合，支持Haar分布的酉矩阵、正交矩阵和正态分布的张量。通过导出TensorNetwork格式的张量网络，可以进行低维计算，并解释了数学原理和张量网络图之间的关系。",
    "en_tdlr": "We have upgraded the second version of Python RTNI, which allows symbolic integration of tensor networks over various random tensors, including Haar-distributed unitary matrices, orthogonal matrices, and normal Gaussian tensors. The program can export tensor networks in the form of TensorNetwork and supports calculations even in low dimensions, with differences in Weingarten functions. The paper explains the mathematical principles and demonstrates the relationship between element-wise calculus and tensor network diagrams."
}