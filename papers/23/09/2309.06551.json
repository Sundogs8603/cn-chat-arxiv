{
    "title": "Commands as AI Conversations. (arXiv:2309.06551v1 [cs.SE])",
    "abstract": "Developers and data scientists often struggle to write command-line inputs, even though graphical interfaces or tools like ChatGPT can assist. The solution? \"ai-cli,\" an open-source system inspired by GitHub Copilot that converts natural language prompts into executable commands for various Linux command-line tools. By tapping into OpenAI's API, which allows interaction through JSON HTTP requests, \"ai-cli\" transforms user queries into actionable command-line instructions. However, integrating AI assistance across multiple command-line tools, especially in open source settings, can be complex. Historically, operating systems could mediate, but individual tool functionality and the lack of a unified approach have made centralized integration challenging. The \"ai-cli\" tool, by bridging this gap through dynamic loading and linking with each program's Readline library API, makes command-line interfaces smarter and more user-friendly, opening avenues for further enhancement and cross-platfor",
    "link": "http://arxiv.org/abs/2309.06551",
    "context": "Title: Commands as AI Conversations. (arXiv:2309.06551v1 [cs.SE])\nAbstract: Developers and data scientists often struggle to write command-line inputs, even though graphical interfaces or tools like ChatGPT can assist. The solution? \"ai-cli,\" an open-source system inspired by GitHub Copilot that converts natural language prompts into executable commands for various Linux command-line tools. By tapping into OpenAI's API, which allows interaction through JSON HTTP requests, \"ai-cli\" transforms user queries into actionable command-line instructions. However, integrating AI assistance across multiple command-line tools, especially in open source settings, can be complex. Historically, operating systems could mediate, but individual tool functionality and the lack of a unified approach have made centralized integration challenging. The \"ai-cli\" tool, by bridging this gap through dynamic loading and linking with each program's Readline library API, makes command-line interfaces smarter and more user-friendly, opening avenues for further enhancement and cross-platfor",
    "path": "papers/23/09/2309.06551.json",
    "total_tokens": 858,
    "translated_title": "命令作为AI对话：一个开源系统将自然语言提示转化为可执行的Linux命令行工具命令",
    "translated_abstract": "开发人员和数据科学家经常在编写命令行输入时遇到困难，尽管图形界面或像ChatGPT这样的工具可以提供帮助。解决方案是开源系统\"ai-cli\"，受GitHub Copilot启发，将自然语言提示转化为各种Linux命令行工具的可执行命令。通过利用OpenAI的API，该系统可以通过JSON HTTP请求进行交互，将用户查询转化为可操作的命令行指令。然而，在多个命令行工具之间集成AI辅助，特别是在开源环境中，可能会很复杂。历史上，操作系统可以进行中介，但各个工具的功能和缺乏统一的方法使得集中化集成具有挑战性。通过通过动态加载和与每个程序的Readline库API链接，\"ai-cli\"工具填补了这一差距，使命令行界面更智能、更用户友好，为进一步的增强和跨平台提供了可能性。",
    "tldr": "\"ai-cli\"是一个开源系统，通过将自然语言提示转化为可执行的Linux命令行工具命令，利用OpenAI的API实现命令行界面的智能化和用户友好化。"
}