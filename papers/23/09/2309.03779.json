{
    "title": "CPU frequency scheduling of real-time applications on embedded devices with temporal encoding-based deep reinforcement learning. (arXiv:2309.03779v1 [cs.LG])",
    "abstract": "Small devices are frequently used in IoT and smart-city applications to perform periodic dedicated tasks with soft deadlines. This work focuses on developing methods to derive efficient power-management methods for periodic tasks on small devices. We first study the limitations of the existing Linux built-in methods used in small devices. We illustrate three typical workload/system patterns that are challenging to manage with Linux's built-in solutions. We develop a reinforcement-learning-based technique with temporal encoding to derive an effective DVFS governor even with the presence of the three system patterns. The derived governor uses only one performance counter, the same as the built-in Linux mechanism, and does not require an explicit task model for the workload. We implemented a prototype system on the Nvidia Jetson Nano Board and experimented with it with six applications, including two self-designed and four benchmark applications. Under different deadline constraints, our ",
    "link": "http://arxiv.org/abs/2309.03779",
    "context": "Title: CPU frequency scheduling of real-time applications on embedded devices with temporal encoding-based deep reinforcement learning. (arXiv:2309.03779v1 [cs.LG])\nAbstract: Small devices are frequently used in IoT and smart-city applications to perform periodic dedicated tasks with soft deadlines. This work focuses on developing methods to derive efficient power-management methods for periodic tasks on small devices. We first study the limitations of the existing Linux built-in methods used in small devices. We illustrate three typical workload/system patterns that are challenging to manage with Linux's built-in solutions. We develop a reinforcement-learning-based technique with temporal encoding to derive an effective DVFS governor even with the presence of the three system patterns. The derived governor uses only one performance counter, the same as the built-in Linux mechanism, and does not require an explicit task model for the workload. We implemented a prototype system on the Nvidia Jetson Nano Board and experimented with it with six applications, including two self-designed and four benchmark applications. Under different deadline constraints, our ",
    "path": "papers/23/09/2309.03779.json",
    "total_tokens": 875,
    "translated_title": "基于时间编码的深度强化学习在嵌入式设备上进行实时应用的CPU频率调度",
    "translated_abstract": "小型设备经常用于物联网和智能城市应用，用于执行有软截止期的周期性专用任务。这项工作致力于开发在小型设备上推导出高效的功率管理方法的方法。我们首先研究了现有的Linux内置方法在小型设备中的限制。我们展示了三种典型的工作负荷/系统模式，这些模式对于Linux内置解决方案而言具有挑战性。我们使用时间编码开发了一种基于增强学习的技术，以推导出一种有效的DVFS调度程序，即使存在这三种系统模式。推导出的调度程序仅使用一个性能计数器，与内置的Linux机制相同，并且不需要工作负荷的显式任务模型。我们在Nvidia Jetson Nano Board上实现了一个原型系统，并进行了六种应用程序的实验，包括两个自设计的和四个基准应用程序。",
    "tldr": "本研究通过基于时间编码的深度强化学习，开发了一种在嵌入式设备上进行实时应用的CPU频率调度方法，该方法可以在小型设备上推导出高效的功率管理方法，并解决了现有Linux内置方法的限制。"
}