{
    "title": "Two Timin': Repairing Smart Contracts With A Two-Layered Approach. (arXiv:2309.07841v1 [cs.CR])",
    "abstract": "Due to the modern relevance of blockchain technology, smart contracts present both substantial risks and benefits. Vulnerabilities within them can trigger a cascade of consequences, resulting in significant losses. Many current papers primarily focus on classifying smart contracts for malicious intent, often relying on limited contract characteristics, such as bytecode or opcode. This paper proposes a novel, two-layered framework: 1) classifying and 2) directly repairing malicious contracts. Slither's vulnerability report is combined with source code and passed through a pre-trained RandomForestClassifier (RFC) and Large Language Models (LLMs), classifying and repairing each suggested vulnerability. Experiments demonstrate the effectiveness of fine-tuned and prompt-engineered LLMs. The smart contract repair models, built from pre-trained GPT-3.5-Turbo and fine-tuned Llama-2-7B models, reduced the overall vulnerability count by 97.5% and 96.7% respectively. A manual inspection of repair",
    "link": "http://arxiv.org/abs/2309.07841",
    "context": "Title: Two Timin': Repairing Smart Contracts With A Two-Layered Approach. (arXiv:2309.07841v1 [cs.CR])\nAbstract: Due to the modern relevance of blockchain technology, smart contracts present both substantial risks and benefits. Vulnerabilities within them can trigger a cascade of consequences, resulting in significant losses. Many current papers primarily focus on classifying smart contracts for malicious intent, often relying on limited contract characteristics, such as bytecode or opcode. This paper proposes a novel, two-layered framework: 1) classifying and 2) directly repairing malicious contracts. Slither's vulnerability report is combined with source code and passed through a pre-trained RandomForestClassifier (RFC) and Large Language Models (LLMs), classifying and repairing each suggested vulnerability. Experiments demonstrate the effectiveness of fine-tuned and prompt-engineered LLMs. The smart contract repair models, built from pre-trained GPT-3.5-Turbo and fine-tuned Llama-2-7B models, reduced the overall vulnerability count by 97.5% and 96.7% respectively. A manual inspection of repair",
    "path": "papers/23/09/2309.07841.json",
    "total_tokens": 990,
    "translated_title": "两步走：采用双层方法修复智能合约",
    "translated_abstract": "鉴于区块链技术的现代重要性，智能合约既带来了巨大的风险，也带来了巨大的好处。其中的漏洞可以引发一系列后果，导致重大损失。许多当前的论文主要集中在对恶意意图进行智能合约的分类，通常依赖于有限的合约特征，如字节码或操作码。本文提出了一个新颖的双层框架：1）进行分类和2）直接修复恶意合约。将Slither的漏洞报告与源代码结合，并通过预训练的随机森林分类器（RFC）和大型语言模型（LLMs）传递，对每个建议的漏洞进行分类和修复。实验证明了经过细调和及时修复工程的LLMs的有效性。基于预训练的GPT-3.5-Turbo和经过细调的Llama-2-7B模型构建的智能合约修复模型分别将整体漏洞计数减少了97.5%和96.7%。对修复的手动检查表明，修复模型的修复正确率高达90.3%。",
    "tldr": "本文提出了一个双层框架来处理智能合约中的漏洞。通过将Slither的漏洞报告与源代码结合，结合预训练的分类器和大型语言模型，实现了智能合约的分类和修复。实验证明了该方法的有效性，可以显著减少漏洞数量。",
    "en_tdlr": "This paper proposes a two-layered framework to handle vulnerabilities in smart contracts. By combining Slither's vulnerability report with source code and utilizing pre-trained classifiers and large language models, smart contracts can be classified and repaired. Experiments demonstrate the effectiveness of this approach in significantly reducing the number of vulnerabilities."
}