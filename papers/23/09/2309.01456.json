{
    "title": "LLM and Infrastructure as a Code use case. (arXiv:2309.01456v2 [cs.CL] UPDATED)",
    "abstract": "Cloud computing and the evolution of management methodologies such as Lean Management or Agile entail a profound transformation in both system construction and maintenance approaches. These practices are encompassed within the term \"DevOps.\" This descriptive approach to an information system or application, alongside the configuration of its constituent components, has necessitated the development of descriptive languages paired with specialized engines for automating systems administration tasks. Among these, the tandem of Ansible (engine) and YAML (descriptive language) stands out as the two most prevalent tools in the market, facing notable competition mainly from Terraform. The current document presents an inquiry into a solution for generating and managing Ansible YAML roles and playbooks, utilizing Generative LLMs (Language Models) to translate human descriptions into code. Our efforts are focused on identifying plausible directions and outlining the potential industrial applicat",
    "link": "http://arxiv.org/abs/2309.01456",
    "context": "Title: LLM and Infrastructure as a Code use case. (arXiv:2309.01456v2 [cs.CL] UPDATED)\nAbstract: Cloud computing and the evolution of management methodologies such as Lean Management or Agile entail a profound transformation in both system construction and maintenance approaches. These practices are encompassed within the term \"DevOps.\" This descriptive approach to an information system or application, alongside the configuration of its constituent components, has necessitated the development of descriptive languages paired with specialized engines for automating systems administration tasks. Among these, the tandem of Ansible (engine) and YAML (descriptive language) stands out as the two most prevalent tools in the market, facing notable competition mainly from Terraform. The current document presents an inquiry into a solution for generating and managing Ansible YAML roles and playbooks, utilizing Generative LLMs (Language Models) to translate human descriptions into code. Our efforts are focused on identifying plausible directions and outlining the potential industrial applicat",
    "path": "papers/23/09/2309.01456.json",
    "total_tokens": 826,
    "translated_title": "LLM和基础设施即代码的用例研究",
    "translated_abstract": "云计算和诸如精益管理或敏捷管理等管理方法的演进，引起了系统构建和维护方法的深刻变革。这些实践被统称为\"DevOps\"。这种描述性的信息系统或应用程序方法，以及其组成部分的配置，已经促使开发了配有专门引擎的描述性语言，用于自动化系统管理任务。在这些工具中，Ansible（引擎）和YAML（描述性语言）的组合是市场上最流行的两种工具，主要面临来自Terraform的竞争。本文介绍了一种利用生成式语言模型（LLMs）将人类描述转化为代码，生成和管理Ansible YAML角色和playbooks的解决方案的探讨。我们的工作集中在确定可行的方向和概述潜在的工业应用。",
    "tldr": "本文探讨了一种利用生成式语言模型将人类描述转化为代码的解决方案，用于生成和管理Ansible YAML角色和playbooks，以应对云计算和管理方法发展引起的系统构建和维护方法的变革。",
    "en_tdlr": "This paper investigates a solution that utilizes generative language models to translate human descriptions into code, in order to generate and manage Ansible YAML roles and playbooks, addressing the transformation in system construction and maintenance approaches caused by the development of cloud computing and management methodologies."
}