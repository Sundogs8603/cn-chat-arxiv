{
    "title": "Efficient Concept Drift Handling for Batch Android Malware Detection Models. (arXiv:2309.09807v1 [cs.CR] CROSS LISTED)",
    "abstract": "The rapidly evolving nature of Android apps poses a significant challenge to static batch machine learning algorithms employed in malware detection systems, as they quickly become obsolete. Despite this challenge, the existing literature pays limited attention to addressing this issue, with many advanced Android malware detection approaches, such as Drebin, DroidDet and MaMaDroid, relying on static models. In this work, we show how retraining techniques are able to maintain detector capabilities over time. Particularly, we analyze the effect of two aspects in the efficiency and performance of the detectors: 1) the frequency with which the models are retrained, and 2) the data used for retraining. In the first experiment, we compare periodic retraining with a more advanced concept drift detection method that triggers retraining only when necessary. In the second experiment, we analyze sampling methods to reduce the amount of data used to retrain models. Specifically, we compare fixed si",
    "link": "http://arxiv.org/abs/2309.09807",
    "context": "Title: Efficient Concept Drift Handling for Batch Android Malware Detection Models. (arXiv:2309.09807v1 [cs.CR] CROSS LISTED)\nAbstract: The rapidly evolving nature of Android apps poses a significant challenge to static batch machine learning algorithms employed in malware detection systems, as they quickly become obsolete. Despite this challenge, the existing literature pays limited attention to addressing this issue, with many advanced Android malware detection approaches, such as Drebin, DroidDet and MaMaDroid, relying on static models. In this work, we show how retraining techniques are able to maintain detector capabilities over time. Particularly, we analyze the effect of two aspects in the efficiency and performance of the detectors: 1) the frequency with which the models are retrained, and 2) the data used for retraining. In the first experiment, we compare periodic retraining with a more advanced concept drift detection method that triggers retraining only when necessary. In the second experiment, we analyze sampling methods to reduce the amount of data used to retrain models. Specifically, we compare fixed si",
    "path": "papers/23/09/2309.09807.json",
    "total_tokens": 940,
    "translated_title": "批量安卓恶意软件检测模型的高效概念漂移处理",
    "translated_abstract": "Android应用程序的快速发展性对于静态批处理机器学习算法在恶意软件检测系统中的应用构成了重大挑战，因为它们很快就会过时。尽管存在这个挑战，但现有文献对解决此问题的关注有限，许多先进的Android恶意软件检测方法（如Drebin、DroidDet和MaMaDroid）依赖于静态模型。在这项工作中，我们展示了重新训练技术如何能够在一段时间内保持检测器的能力。特别地，我们分析了两个方面对检测器的效率和性能的影响：1）模型重新训练的频率，2）用于重新训练的数据。在第一个实验中，我们将周期性重新训练与仅在必要时触发重新训练的更先进的概念漂移检测方法进行了比较。在第二个实验中，我们分析了用于减少用于重新训练模型的数据量的采样方法。具体而言，我们比较了固定si",
    "tldr": "本文研究了批量安卓恶意软件检测模型的高效概念漂移处理方法，通过重新训练技术来维持检测器的能力，并通过比较不同的重新训练频率和数据使用方法的影响，提出了改进策略。"
}