{
    "title": "Feature Engineering-Based Detection of Buffer Overflow Vulnerability in Source Code Using Neural Networks. (arXiv:2306.07981v1 [cs.CR])",
    "abstract": "One of the most significant challenges in the field of software code auditing is the presence of vulnerabilities in software source code. Every year, more and more software flaws are discovered, either internally in proprietary code or publicly disclosed. These flaws are highly likely to be exploited and can lead to system compromise, data leakage, or denial of service. To create a large-scale machine learning system for function level vulnerability identification, we utilized a sizable dataset of C and C++ open-source code containing millions of functions with potential buffer overflow exploits. We have developed an efficient and scalable vulnerability detection method based on neural network models that learn features extracted from the source codes. The source code is first converted into an intermediate representation to remove unnecessary components and shorten dependencies. We maintain the semantic and syntactic information using state of the art word embedding algorithms such as",
    "link": "http://arxiv.org/abs/2306.07981",
    "context": "Title: Feature Engineering-Based Detection of Buffer Overflow Vulnerability in Source Code Using Neural Networks. (arXiv:2306.07981v1 [cs.CR])\nAbstract: One of the most significant challenges in the field of software code auditing is the presence of vulnerabilities in software source code. Every year, more and more software flaws are discovered, either internally in proprietary code or publicly disclosed. These flaws are highly likely to be exploited and can lead to system compromise, data leakage, or denial of service. To create a large-scale machine learning system for function level vulnerability identification, we utilized a sizable dataset of C and C++ open-source code containing millions of functions with potential buffer overflow exploits. We have developed an efficient and scalable vulnerability detection method based on neural network models that learn features extracted from the source codes. The source code is first converted into an intermediate representation to remove unnecessary components and shorten dependencies. We maintain the semantic and syntactic information using state of the art word embedding algorithms such as",
    "path": "papers/23/06/2306.07981.json",
    "total_tokens": 858,
    "tldr": "本论文开发了一种利用神经网络模型进行漏洞检测的方法，基于特征工程技术，可以有效识别C和C++开源代码中潜在的缓冲区溢出漏洞。"
}