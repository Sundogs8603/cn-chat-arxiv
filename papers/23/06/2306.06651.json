{
    "title": "Predicting Software Performance with Divide-and-Learn. (arXiv:2306.06651v2 [cs.SE] UPDATED)",
    "abstract": "Predicting the performance of highly configurable software systems is the foundation for performance testing and quality assurance. To that end, recent work has been relying on machine/deep learning to model software performance. However, a crucial yet unaddressed challenge is how to cater for the sparsity inherited from the configuration landscape: the influence of configuration options (features) and the distribution of data samples are highly sparse.  In this paper, we propose an approach based on the concept of 'divide-and-learn', dubbed $DaL$. The basic idea is that, to handle sample sparsity, we divide the samples from the configuration landscape into distant divisions, for each of which we build a regularized Deep Neural Network as the local model to deal with the feature sparsity. A newly given configuration would then be assigned to the right model of division for the final prediction.  Experiment results from eight real-world systems and five sets of training data reveal that",
    "link": "http://arxiv.org/abs/2306.06651",
    "context": "Title: Predicting Software Performance with Divide-and-Learn. (arXiv:2306.06651v2 [cs.SE] UPDATED)\nAbstract: Predicting the performance of highly configurable software systems is the foundation for performance testing and quality assurance. To that end, recent work has been relying on machine/deep learning to model software performance. However, a crucial yet unaddressed challenge is how to cater for the sparsity inherited from the configuration landscape: the influence of configuration options (features) and the distribution of data samples are highly sparse.  In this paper, we propose an approach based on the concept of 'divide-and-learn', dubbed $DaL$. The basic idea is that, to handle sample sparsity, we divide the samples from the configuration landscape into distant divisions, for each of which we build a regularized Deep Neural Network as the local model to deal with the feature sparsity. A newly given configuration would then be assigned to the right model of division for the final prediction.  Experiment results from eight real-world systems and five sets of training data reveal that",
    "path": "papers/23/06/2306.06651.json",
    "total_tokens": 834,
    "translated_title": "使用分割学习预测软件性能",
    "translated_abstract": "预测高度配置的软件系统的性能是性能测试和质量保证的基础。为此，最近的研究依靠机器/深度学习来建模软件性能。然而，一个至关重要但未解决的挑战是如何满足配置景观中继承的稀疏性：配置选项（特征）的影响和数据样本的分布都非常稀疏。本文提出了一种基于“分割学习”概念的方法，称为$DaL$。基本思想是，为了处理样本稀疏性，我们将配置景观中的样本划分为远离的部分，对于每个部分，我们建立一个规范化的深度神经网络作为本地模型来处理特征稀疏性。然后，新给定的配置将被分配给最终预测的正确模型。八个真实系统和五组训练数据的实验结果显示",
    "tldr": "本文提出了一种名为$DaL$的基于分割学习的方法，用于预测高度配置的软件系统的性能。实验证明了该方法的有效性。",
    "en_tdlr": "This paper proposes a divide-and-learn approach, called $DaL$, for predicting the performance of highly configurable software systems. Experimental results demonstrate its effectiveness."
}