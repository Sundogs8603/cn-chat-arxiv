{
    "title": "Modeling Parallel Programs using Large Language Models. (arXiv:2306.17281v1 [cs.DC])",
    "abstract": "Parallel software codes in high performance computing (HPC) continue to grow in complexity and scale as we enter the exascale era. A diverse set of emerging hardware and programming paradigms make developing, optimizing, and maintaining parallel software burdensome for developers. One way to alleviate some of these burdens is with automated development and analysis tools. Such tools can perform complex and/or remedial tasks for developers that increase their productivity and decrease the chance for error. So far, such tools for code development and performance analysis have been limited in the complexity of tasks they can perform. However, with recent advancements in language modeling, and the wealth of code related data that is now available online, these tools have started to utilize predictive language models to automate more complex tasks. In this paper, we show how large language models (LLMs) can be applied to tasks specific to high performance and scientific codes. We train LLMs",
    "link": "http://arxiv.org/abs/2306.17281",
    "context": "Title: Modeling Parallel Programs using Large Language Models. (arXiv:2306.17281v1 [cs.DC])\nAbstract: Parallel software codes in high performance computing (HPC) continue to grow in complexity and scale as we enter the exascale era. A diverse set of emerging hardware and programming paradigms make developing, optimizing, and maintaining parallel software burdensome for developers. One way to alleviate some of these burdens is with automated development and analysis tools. Such tools can perform complex and/or remedial tasks for developers that increase their productivity and decrease the chance for error. So far, such tools for code development and performance analysis have been limited in the complexity of tasks they can perform. However, with recent advancements in language modeling, and the wealth of code related data that is now available online, these tools have started to utilize predictive language models to automate more complex tasks. In this paper, we show how large language models (LLMs) can be applied to tasks specific to high performance and scientific codes. We train LLMs",
    "path": "papers/23/06/2306.17281.json",
    "total_tokens": 830,
    "translated_title": "使用大型语言模型建模并行程序",
    "translated_abstract": "随着我们进入异构计算时代，高性能计算（HPC）中的并行软件代码在复杂性和规模上不断增长。新兴的硬件和编程范式使得开发、优化和维护并行软件对开发人员来说变得繁重。缓解这些负担的一种方式是使用自动化开发和分析工具。这些工具可以为开发人员执行复杂和/或补救性的任务，提高他们的生产力并减少错误的可能性。迄今为止，用于代码开发和性能分析的这些工具在执行任务的复杂度方面受到限制。然而，随着语言建模的最新进展和现在在线上可用的大量与代码相关的数据，这些工具开始利用预测性语言模型来自动完成更复杂的任务。在本文中，我们展示了如何将大型语言模型（LLMs）应用于高性能和科学代码的特定任务中。我们训练了LLM模型",
    "tldr": "本文展示了如何利用大型语言模型（LLMs）在高性能计算和科学代码的开发和分析中自动化更复杂的任务。",
    "en_tdlr": "This paper demonstrates how large language models (LLMs) can be used to automate more complex tasks in the development and analysis of high performance and scientific codes."
}