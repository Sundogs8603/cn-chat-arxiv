{
    "title": "A Comprehensive Review of State-of-The-Art Methods for Java Code Generation from Natural Language Text. (arXiv:2306.06371v1 [cs.CL])",
    "abstract": "Java Code Generation consists in generating automatically Java code from a Natural Language Text. This NLP task helps in increasing programmers' productivity by providing them with immediate solutions to the simplest and most repetitive tasks. Code generation is a challenging task because of the hard syntactic rules and the necessity of a deep understanding of the semantic aspect of the programming language. Many works tried to tackle this task using either RNN-based, or Transformer-based models. The latter achieved remarkable advancement in the domain and they can be divided into three groups: (1) encoder-only models, (2) decoder-only models, and (3) encoder-decoder models. In this paper, we provide a comprehensive review of the evolution and progress of deep learning models in Java code generation task. We focus on the most important methods and present their merits and limitations, as well as the objective functions used by the community. In addition, we provide a detailed descripti",
    "link": "http://arxiv.org/abs/2306.06371",
    "context": "Title: A Comprehensive Review of State-of-The-Art Methods for Java Code Generation from Natural Language Text. (arXiv:2306.06371v1 [cs.CL])\nAbstract: Java Code Generation consists in generating automatically Java code from a Natural Language Text. This NLP task helps in increasing programmers' productivity by providing them with immediate solutions to the simplest and most repetitive tasks. Code generation is a challenging task because of the hard syntactic rules and the necessity of a deep understanding of the semantic aspect of the programming language. Many works tried to tackle this task using either RNN-based, or Transformer-based models. The latter achieved remarkable advancement in the domain and they can be divided into three groups: (1) encoder-only models, (2) decoder-only models, and (3) encoder-decoder models. In this paper, we provide a comprehensive review of the evolution and progress of deep learning models in Java code generation task. We focus on the most important methods and present their merits and limitations, as well as the objective functions used by the community. In addition, we provide a detailed descripti",
    "path": "papers/23/06/2306.06371.json",
    "total_tokens": 853,
    "translated_title": "从自然语言文本生成Java代码的现有方法综述",
    "translated_abstract": "Java代码生成是从自然语言文本中自动生成Java代码。这一自然语言处理任务有助于通过为程序员提供最简单和最重复的任务的即时解决方法来提高其生产力。代码生成是一项具有挑战性的任务，因为需要遵循严格的语法规则并深入理解编程语言的语义方面。许多研究尝试使用基于RNN或变压器模型来解决这个任务。后者在该领域取得了显著进展，可以分为三组：(1)仅编码模型，(2)仅解码模型和(3)编码-解码模型。本文全面回顾了深度学习模型在Java代码生成任务中的演变和进展。我们重点关注最重要的方法，并提出它们的优点和局限性，以及社区使用的目标函数。此外，我们提供了详细的描述...",
    "tldr": "本文全面回顾了使用深度学习模型从自然语言文本中自动生成Java代码的方法，并重点关注了变压器模型的三种类型：编码器模型、解码器模型和编码-解码模型。",
    "en_tdlr": "This paper comprehensively reviews the methods for automatically generating Java code from natural language text using deep learning models, with a focus on the three types of transformer models: encoder-only, decoder-only, and encoder-decoder."
}