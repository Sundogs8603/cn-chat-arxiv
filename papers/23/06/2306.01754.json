{
    "title": "Transformer-based Vulnerability Detection in Code at EditTime: Zero-shot, Few-shot, or Fine-tuning?. (arXiv:2306.01754v1 [cs.CR])",
    "abstract": "Software vulnerabilities bear enterprises significant costs. Despite extensive efforts in research and development of software vulnerability detection methods, uncaught vulnerabilities continue to put software owners and users at risk. Many current vulnerability detection methods require that code snippets can compile and build before attempting detection. This, unfortunately, introduces a long latency between the time a vulnerability is injected to the time it is removed, which can substantially increases the cost of fixing a vulnerability. We recognize that the current advances in machine learning can be used to detect vulnerable code patterns on syntactically incomplete code snippets as the developer is writing the code at EditTime. In this paper we present a practical system that leverages deep learning on a large-scale data set of vulnerable code patterns to learn complex manifestations of more than 250 vulnerability types and detect vulnerable code patterns at EditTime. We discus",
    "link": "http://arxiv.org/abs/2306.01754",
    "context": "Title: Transformer-based Vulnerability Detection in Code at EditTime: Zero-shot, Few-shot, or Fine-tuning?. (arXiv:2306.01754v1 [cs.CR])\nAbstract: Software vulnerabilities bear enterprises significant costs. Despite extensive efforts in research and development of software vulnerability detection methods, uncaught vulnerabilities continue to put software owners and users at risk. Many current vulnerability detection methods require that code snippets can compile and build before attempting detection. This, unfortunately, introduces a long latency between the time a vulnerability is injected to the time it is removed, which can substantially increases the cost of fixing a vulnerability. We recognize that the current advances in machine learning can be used to detect vulnerable code patterns on syntactically incomplete code snippets as the developer is writing the code at EditTime. In this paper we present a practical system that leverages deep learning on a large-scale data set of vulnerable code patterns to learn complex manifestations of more than 250 vulnerability types and detect vulnerable code patterns at EditTime. We discus",
    "path": "papers/23/06/2306.01754.json",
    "total_tokens": 1027,
    "translated_title": "基于Transformer的代码编辑时漏洞检测：零样本、小样本还是微调？",
    "translated_abstract": "软件漏洞会给企业带来重大损失。尽管针对软件漏洞检测方法的研究和开发已经进行了广泛的努力，但未发现的漏洞仍会对软件所有者和用户造成风险。许多当前的漏洞检测方法要求代码片段能够在尝试检测之前编译和构建。不幸的是，这会在注入漏洞到删除漏洞的时间之间引入很长的延迟，这可能会大大增加修复漏洞的成本。本文利用深度学习在包含250多种漏洞类型的大型数据集上学习复杂的漏洞代码模式，并在代码编辑时检测漏洞。我们讨论了训练Transformer的神经网络的方法，它在零样本、小样本和微调设置中实现了最先进的性能。我们的实验表明，我们的系统可以高精度、低延迟地检测漏洞，使软件开发人员能够在引入潜在漏洞到代码库之前修复它们。",
    "tldr": "本研究使用深度学习在编辑代码的同时检测漏洞，可以高精度、低延迟地检测超过250种漏洞类型的复杂漏洞代码模式，使软件开发人员能够在引入潜在漏洞到代码库之前修复它们。",
    "en_tdlr": "This paper proposes a practical system that detects vulnerable code patterns at edit time using deep learning, achieving state-of-the-art performance in zero-shot, few-shot, and fine-tuning settings. The system can detect over 250 vulnerability types with high accuracy and low latency, enabling software developers to fix potential vulnerabilities before they are introduced to the codebase."
}