{
    "title": "Column Type Annotation using ChatGPT. (arXiv:2306.00745v2 [cs.CL] UPDATED)",
    "abstract": "Column type annotation is the task of annotating the columns of a relational table with the semantic type of the values contained in each column. Column type annotation is an important pre-processing step for data search and data integration in the context of data lakes. State-of-the-art column type annotation methods either rely on matching table columns to properties of a knowledge graph or fine-tune pre-trained language models such as BERT for column type annotation. In this work, we take a different approach and explore using ChatGPT for column type annotation. We evaluate different prompt designs in zero- and few-shot settings and experiment with providing task definitions and detailed instructions to the model. We further implement a two-step table annotation pipeline which first determines the class of the entities described in the table and depending on this class asks ChatGPT to annotate columns using only the relevant subset of the overall vocabulary. Using instructions as we",
    "link": "http://arxiv.org/abs/2306.00745",
    "context": "Title: Column Type Annotation using ChatGPT. (arXiv:2306.00745v2 [cs.CL] UPDATED)\nAbstract: Column type annotation is the task of annotating the columns of a relational table with the semantic type of the values contained in each column. Column type annotation is an important pre-processing step for data search and data integration in the context of data lakes. State-of-the-art column type annotation methods either rely on matching table columns to properties of a knowledge graph or fine-tune pre-trained language models such as BERT for column type annotation. In this work, we take a different approach and explore using ChatGPT for column type annotation. We evaluate different prompt designs in zero- and few-shot settings and experiment with providing task definitions and detailed instructions to the model. We further implement a two-step table annotation pipeline which first determines the class of the entities described in the table and depending on this class asks ChatGPT to annotate columns using only the relevant subset of the overall vocabulary. Using instructions as we",
    "path": "papers/23/06/2306.00745.json",
    "total_tokens": 866,
    "translated_title": "使用ChatGPT进行列类型注释",
    "translated_abstract": "列类型注释是将关系表的列标注为每列中包含的值的语义类型的任务。列类型注释是数据湖环境中数据检索和数据集成的重要预处理步骤。目前最先进的列类型注释方法要么依赖于将表列与知识图的属性进行匹配，要么对列类型注释使用预训练的语言模型（如BERT）进行微调。在这项工作中，我们采用不同的方法，探究使用ChatGPT进行列类型注释。我们在零样本和少样本情况下评估了不同的提示设计，并尝试向模型提供任务定义和详细说明。我们还实现了一个两步的表格注释流程，首先确定表中描述的实体的类别，然后根据这个类别，使用ChatGPT对列进行注释，仅使用整体词汇表的相关子集。使用说明作为提示的ChatGPT在列类型注释方面表现良好，并且能够根据任务定义进行灵活的注释。",
    "tldr": "本论文介绍了一种使用ChatGPT进行列类型注释的方法，并比较了不同的提示设计策略。实验结果表明，使用说明作为提示的ChatGPT在列类型注释方面取得了良好的性能，并能够根据任务定义进行灵活的注释。",
    "en_tdlr": "This paper presents a method for column type annotation using ChatGPT, comparing different prompt designs. Experimental results show that ChatGPT with instructions as prompts performs well in column type annotation and can provide flexible annotations based on task definitions."
}