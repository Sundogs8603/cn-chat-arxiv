{
    "title": "Interpreting Deep Neural Networks with the Package innsight. (arXiv:2306.10822v1 [stat.ML])",
    "abstract": "The R package innsight offers a general toolbox for revealing variable-wise interpretations of deep neural networks' predictions with so-called feature attribution methods. Aside from the unified and user-friendly framework, the package stands out in three ways: It is generally the first R package implementing feature attribution methods for neural networks. Secondly, it operates independently of the deep learning library allowing the interpretation of models from any R package, including keras, torch, neuralnet, and even custom models. Despite its flexibility, innsight benefits internally from the torch package's fast and efficient array calculations, which builds on LibTorch $-$ PyTorch's C++ backend $-$ without a Python dependency. Finally, it offers a variety of visualization tools for tabular, signal, image data or a combination of these. Additionally, the plots can be rendered interactively using the plotly package.",
    "link": "http://arxiv.org/abs/2306.10822",
    "context": "Title: Interpreting Deep Neural Networks with the Package innsight. (arXiv:2306.10822v1 [stat.ML])\nAbstract: The R package innsight offers a general toolbox for revealing variable-wise interpretations of deep neural networks' predictions with so-called feature attribution methods. Aside from the unified and user-friendly framework, the package stands out in three ways: It is generally the first R package implementing feature attribution methods for neural networks. Secondly, it operates independently of the deep learning library allowing the interpretation of models from any R package, including keras, torch, neuralnet, and even custom models. Despite its flexibility, innsight benefits internally from the torch package's fast and efficient array calculations, which builds on LibTorch $-$ PyTorch's C++ backend $-$ without a Python dependency. Finally, it offers a variety of visualization tools for tabular, signal, image data or a combination of these. Additionally, the plots can be rendered interactively using the plotly package.",
    "path": "papers/23/06/2306.10822.json",
    "total_tokens": 860,
    "translated_title": "利用innsight包解释深度神经网络",
    "translated_abstract": "R包innsight提供了一个通用的工具箱，通过所谓的特征归因方法，揭示了深度神经网络预测的变量解释。除了统一的用户友好的框架外，该包在三个方面脱颖而出：首先，它通常是第一个实现神经网络特征归因方法的R包。其次，它独立于深度学习库，允许解释来自任何R包，包括keras、torch、neuralnet甚至用户定义模型的模型。尽管它很灵活，但innsight在内部从torch包的快速和高效的数组计算中受益，这建立在LibTorch（PyTorch的C++后端）上，而不需要Python依赖。最后，它提供了各种可视化工具，用于表格、信号、图像数据或这些数据的组合。此外，可以使用plotly包以交互方式呈现这些图。",
    "tldr": "innsight是一个通用的R包，能够独立于深度学习库，解释来自任何R包的模型，并提供了丰富的可视化工具，以揭示深度神经网络预测的变量解释。",
    "en_tdlr": "innsight is a general R package that can interpret models from any R package, including keras, torch, neuralnet, and even custom models, independently of the deep learning library. It offers rich visualization tools to reveal variable interpretation of deep neural networks' predictions."
}