{
    "title": "Full Automation of Goal-driven LLM Dialog Threads with And-Or Recursors and Refiner Oracles. (arXiv:2306.14077v1 [cs.AI])",
    "abstract": "We automate deep step-by step reasoning in an LLM dialog thread by recursively exploring alternatives (OR-nodes) and expanding details (AND-nodes) up to a given depth. Starting from a single succinct task-specific initiator we steer the automated dialog thread to stay focussed on the task by synthesizing a prompt that summarizes the depth-first steps taken so far.  Our algorithm is derived from a simple recursive descent implementation of a Horn Clause interpreter, except that we accommodate our logic engine to fit the natural language reasoning patterns LLMs have been trained on. Semantic similarity to ground-truth facts or oracle advice from another LLM instance is used to restrict the search space and validate the traces of justification steps returned as answers. At the end, the unique minimal model of a generated Horn Clause program collects the results of the reasoning process.  As applications, we sketch implementations of consequence predictions, causal explanations, recommenda",
    "link": "http://arxiv.org/abs/2306.14077",
    "context": "Title: Full Automation of Goal-driven LLM Dialog Threads with And-Or Recursors and Refiner Oracles. (arXiv:2306.14077v1 [cs.AI])\nAbstract: We automate deep step-by step reasoning in an LLM dialog thread by recursively exploring alternatives (OR-nodes) and expanding details (AND-nodes) up to a given depth. Starting from a single succinct task-specific initiator we steer the automated dialog thread to stay focussed on the task by synthesizing a prompt that summarizes the depth-first steps taken so far.  Our algorithm is derived from a simple recursive descent implementation of a Horn Clause interpreter, except that we accommodate our logic engine to fit the natural language reasoning patterns LLMs have been trained on. Semantic similarity to ground-truth facts or oracle advice from another LLM instance is used to restrict the search space and validate the traces of justification steps returned as answers. At the end, the unique minimal model of a generated Horn Clause program collects the results of the reasoning process.  As applications, we sketch implementations of consequence predictions, causal explanations, recommenda",
    "path": "papers/23/06/2306.14077.json",
    "total_tokens": 880,
    "translated_title": "带And-Or Recursors和Refiner Oracles的目标驱动LLM对话线程的全自动化",
    "translated_abstract": "我们通过递归地探索备选项(OR节点)和展开细节(AND节点)来自动化LLM对话线程中的深度逐步推理，以达到给定深度。我们从一个简洁的任务特定启动器开始，通过合成一个总结迄今为止深度优先步骤的提示，来引导自动对话线程专注于任务。我们的算法源自一个Horn Clause解释器的简单递归下降实现，但我们将逻辑引擎调整得适应LLMs训练过程中所使用的自然语言推理模式。语义相似性与基本事实或来自另一个LLM实例的oracle建议用于限制搜索空间并验证作为答案返回的结果的合理化步骤。最后，生成的Horn Clause程序的唯一最小模型收集推理过程的结果。作为应用，我们概述了推论预测、因果解释、建议等方案的实现。",
    "tldr": "本文提出一种全自动化的LLM对话线程算法，通过递归的探索和展开，实现对任务的深度逐步推理，并应用于推论预测、因果解释、建议等方案的实现。",
    "en_tdlr": "This paper proposes a fully automated LLM dialog thread algorithm, which achieves deep step-by-step reasoning for tasks by recursively exploring alternatives and expanding details, and is applied to implementations such as consequence predictions, causal explanations, and recommendations."
}