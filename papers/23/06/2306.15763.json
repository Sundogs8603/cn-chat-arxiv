{
    "title": "Predicting the Impact of Batch Refactoring Code Smells on Application Resource Consumption. (arXiv:2306.15763v1 [cs.SE])",
    "abstract": "Automated batch refactoring has become a de-facto mechanism to restructure software that may have significant design flaws negatively impacting the code quality and maintainability. Although automated batch refactoring techniques are known to significantly improve overall software quality and maintainability, their impact on resource utilization is not well studied. This paper aims to bridge the gap between batch refactoring code smells and consumption of resources. It determines the relationship between software code smell batch refactoring, and resource consumption. Next, it aims to design algorithms to predict the impact of code smell refactoring on resource consumption. This paper investigates 16 code smell types and their joint effect on resource utilization for 31 open source applications. It provides a detailed empirical analysis of the change in application CPU and memory utilization after refactoring specific code smells in isolation and in batches. This analysis is then used ",
    "link": "http://arxiv.org/abs/2306.15763",
    "context": "Title: Predicting the Impact of Batch Refactoring Code Smells on Application Resource Consumption. (arXiv:2306.15763v1 [cs.SE])\nAbstract: Automated batch refactoring has become a de-facto mechanism to restructure software that may have significant design flaws negatively impacting the code quality and maintainability. Although automated batch refactoring techniques are known to significantly improve overall software quality and maintainability, their impact on resource utilization is not well studied. This paper aims to bridge the gap between batch refactoring code smells and consumption of resources. It determines the relationship between software code smell batch refactoring, and resource consumption. Next, it aims to design algorithms to predict the impact of code smell refactoring on resource consumption. This paper investigates 16 code smell types and their joint effect on resource utilization for 31 open source applications. It provides a detailed empirical analysis of the change in application CPU and memory utilization after refactoring specific code smells in isolation and in batches. This analysis is then used ",
    "path": "papers/23/06/2306.15763.json",
    "total_tokens": 926,
    "translated_title": "预测批量重构代码异味对应用资源消耗的影响",
    "translated_abstract": "自动化批量重构已经成为一种重新架构软件的事实上的机制，可能会对代码质量和可维护性产生重大设计缺陷的负面影响。尽管已知自动化批量重构技术能够显著提高软件的质量和可维护性，但其对资源利用的影响尚未得到良好的研究。本文旨在弥合批量重构代码异味和资源消耗之间的差距。它确定了软件代码异味批量重构与资源消耗之间的关系。接下来，它旨在设计算法来预测代码异味重构对资源消耗的影响。本文对31个开源应用程序的16种代码异味类型及其对资源利用的联合效果进行了研究。它详细地分析了在独立和批量重构特定代码异味后应用的CPU和内存利用率的变化。然后利用这个分析",
    "tldr": "本论文研究了批量重构代码异味对应用资源消耗的影响，并设计了算法来预测代码重构对资源消耗的影响。通过对31个开源应用程序的16种代码异味类型的研究，得出了独立和批量重构特定代码异味后的CPU和内存利用率的变化。",
    "en_tdlr": "This paper investigates the impact of batch refactoring code smells on application resource consumption and designs algorithms to predict the impact of code smell refactoring on resource consumption. It provides an empirical analysis of the change in CPU and memory utilization after refactoring specific code smells in isolation and in batches for 31 open source applications."
}