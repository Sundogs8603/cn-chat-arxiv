{
    "title": "Differentially Private One Permutation Hashing and Bin-wise Consistent Weighted Sampling. (arXiv:2306.07674v1 [stat.ML])",
    "abstract": "Minwise hashing (MinHash) is a standard algorithm widely used in the industry, for large-scale search and learning applications with the binary (0/1) Jaccard similarity. One common use of MinHash is for processing massive n-gram text representations so that practitioners do not have to materialize the original data (which would be prohibitive). Another popular use of MinHash is for building hash tables to enable sub-linear time approximate near neighbor (ANN) search. MinHash has also been used as a tool for building large-scale machine learning systems. The standard implementation of MinHash requires applying $K$ random permutations. In comparison, the method of one permutation hashing (OPH), is an efficient alternative of MinHash which splits the data vectors into $K$ bins and generates hash values within each bin. OPH is substantially more efficient and also more convenient to use.  In this paper, we combine the differential privacy (DP) with OPH (as well as MinHash), to propose the ",
    "link": "http://arxiv.org/abs/2306.07674",
    "context": "Title: Differentially Private One Permutation Hashing and Bin-wise Consistent Weighted Sampling. (arXiv:2306.07674v1 [stat.ML])\nAbstract: Minwise hashing (MinHash) is a standard algorithm widely used in the industry, for large-scale search and learning applications with the binary (0/1) Jaccard similarity. One common use of MinHash is for processing massive n-gram text representations so that practitioners do not have to materialize the original data (which would be prohibitive). Another popular use of MinHash is for building hash tables to enable sub-linear time approximate near neighbor (ANN) search. MinHash has also been used as a tool for building large-scale machine learning systems. The standard implementation of MinHash requires applying $K$ random permutations. In comparison, the method of one permutation hashing (OPH), is an efficient alternative of MinHash which splits the data vectors into $K$ bins and generates hash values within each bin. OPH is substantially more efficient and also more convenient to use.  In this paper, we combine the differential privacy (DP) with OPH (as well as MinHash), to propose the ",
    "path": "papers/23/06/2306.07674.json",
    "total_tokens": 919,
    "translated_title": "差分隐私下的一次排列哈希和基于 Bin 的一致加权采样",
    "translated_abstract": "最小哈希（MinHash）是一种标准算法，广泛应用于具有二进制（0/1）Jaccard相似度的大规模搜索和学习应用程序。MinHash 的常见用途是处理大规模 n-gram 文本表示，以便实践者不必实现原始数据（这将是禁止的）。MinHash 的另一个流行用途是构建哈希表，以实现亚线性时间的近似最近邻搜索。MinHash 还用作构建大规模机器学习系统的工具。标准的 MinHash 实现需要应用 K 个随机排列，而一次排列哈希方法（OPH）则是 MinHash 的一种高效替代方法，它将数据矢量划分为 K 个 bin，并在每个 bin 中生成哈希值。OPH 更加高效，更加便利。在本文中，我们将差分隐私（DP）与 OPH（以及 MinHash）相结合，提出了一种差分隐私下的一次排列哈希和基于 Bin 的一致加权采样方法。",
    "tldr": "本研究提出了一种在差分隐私条件下的一次排列哈希方法和基于 Bin 的一致加权采样，为大规模搜索和学习应用程序提供了更高效、更方便的工具。"
}