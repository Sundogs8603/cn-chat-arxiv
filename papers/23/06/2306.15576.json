{
    "title": "PyBADS: Fast and robust black-box optimization in Python. (arXiv:2306.15576v1 [stat.ML])",
    "abstract": "PyBADS is a Python implementation of the Bayesian Adaptive Direct Search (BADS) algorithm for fast and robust black-box optimization (Acerbi and Ma 2017). BADS is an optimization algorithm designed to efficiently solve difficult optimization problems where the objective function is rough (non-convex, non-smooth), mildly expensive (e.g., the function evaluation requires more than 0.1 seconds), possibly noisy, and gradient information is unavailable. With BADS, these issues are well addressed, making it an excellent choice for fitting computational models using methods such as maximum-likelihood estimation. The algorithm scales efficiently to black-box functions with up to $D \\approx 20$ continuous input parameters and supports bounds or no constraints. PyBADS comes along with an easy-to-use Pythonic interface for running the algorithm and inspecting its results. PyBADS only requires the user to provide a Python function for evaluating the target function, and optionally other constraint",
    "link": "http://arxiv.org/abs/2306.15576",
    "context": "Title: PyBADS: Fast and robust black-box optimization in Python. (arXiv:2306.15576v1 [stat.ML])\nAbstract: PyBADS is a Python implementation of the Bayesian Adaptive Direct Search (BADS) algorithm for fast and robust black-box optimization (Acerbi and Ma 2017). BADS is an optimization algorithm designed to efficiently solve difficult optimization problems where the objective function is rough (non-convex, non-smooth), mildly expensive (e.g., the function evaluation requires more than 0.1 seconds), possibly noisy, and gradient information is unavailable. With BADS, these issues are well addressed, making it an excellent choice for fitting computational models using methods such as maximum-likelihood estimation. The algorithm scales efficiently to black-box functions with up to $D \\approx 20$ continuous input parameters and supports bounds or no constraints. PyBADS comes along with an easy-to-use Pythonic interface for running the algorithm and inspecting its results. PyBADS only requires the user to provide a Python function for evaluating the target function, and optionally other constraint",
    "path": "papers/23/06/2306.15576.json",
    "total_tokens": 914,
    "translated_title": "PyBADS：Python中快速而稳健的黑盒优化",
    "translated_abstract": "PyBADS是Bayesian Adaptive Direct Search（BADS）算法的Python实现，用于快速而稳健的黑盒优化（Acerbi和Ma，2017）。BADS是一种针对目标函数粗糙（非凸、非光滑）、计算代价较高（例如函数评估需要超过0.1秒）、可能存在噪声且梯度信息不可用的困难优化问题而设计的优化算法。通过BADS，这些问题得到了很好的解决，使其成为使用最大似然估计等方法拟合计算模型的优秀选择。该算法在具有高达$D \\approx 20$个连续输入参数的黑盒函数上具有高效的扩展性，并支持边界约束或无约束。PyBADS提供了一个易于使用的Python接口，用于运行算法和检查其结果。PyBADS只需要用户提供一个用于评估目标函数的Python函数，以及其他约束（可选）。",
    "tldr": "PyBADS是Python中一种快速而稳健的黑盒优化算法，适用于解决目标函数粗糙、计算代价高、可能存在噪声且梯度信息不可用的困难优化问题。它支持高达20个连续输入参数的黑盒函数，并提供易于使用的Python接口。",
    "en_tdlr": "PyBADS is a fast and robust black-box optimization algorithm in Python, designed to solve difficult optimization problems with rough objective functions, high computational costs, possible noise, and unavailable gradient information. It supports black-box functions with up to 20 continuous input parameters and provides an easy-to-use Python interface."
}