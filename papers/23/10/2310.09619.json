{
    "title": "An Expression Tree Decoding Strategy for Mathematical Equation Generation. (arXiv:2310.09619v2 [cs.CL] UPDATED)",
    "abstract": "Generating mathematical equations from natural language requires an accurate understanding of the relations among math expressions. Existing approaches can be broadly categorized into token-level and expression-level generation. The former treats equations as a mathematical language, sequentially generating math tokens. Expression-level methods generate each expression one by one. However, each expression represents a solving step, and there naturally exist parallel or dependent relations between these steps, which are ignored by current sequential methods. Therefore, we integrate tree structure into the expression-level generation and advocate an expression tree decoding strategy. To generate a tree with expression as its node, we employ a layer-wise parallel decoding strategy: we decode multiple independent expressions (leaf nodes) in parallel at each layer and repeat parallel decoding layer by layer to sequentially generate these parent node expressions that depend on others. Beside",
    "link": "http://arxiv.org/abs/2310.09619",
    "context": "Title: An Expression Tree Decoding Strategy for Mathematical Equation Generation. (arXiv:2310.09619v2 [cs.CL] UPDATED)\nAbstract: Generating mathematical equations from natural language requires an accurate understanding of the relations among math expressions. Existing approaches can be broadly categorized into token-level and expression-level generation. The former treats equations as a mathematical language, sequentially generating math tokens. Expression-level methods generate each expression one by one. However, each expression represents a solving step, and there naturally exist parallel or dependent relations between these steps, which are ignored by current sequential methods. Therefore, we integrate tree structure into the expression-level generation and advocate an expression tree decoding strategy. To generate a tree with expression as its node, we employ a layer-wise parallel decoding strategy: we decode multiple independent expressions (leaf nodes) in parallel at each layer and repeat parallel decoding layer by layer to sequentially generate these parent node expressions that depend on others. Beside",
    "path": "papers/23/10/2310.09619.json",
    "total_tokens": 790,
    "translated_title": "数学方程生成的表达树解码策略",
    "translated_abstract": "从自然语言生成数学方程需要准确理解数学表达式之间的关系。现有方法可以大致分为标记级生成和表达式级生成两类。前者将方程视为数学语言，按顺序生成数学标记。表达式级方法逐个生成每个表达式。然而，每个表达式表示一个求解步骤，这些步骤之间自然存在并行或依赖关系，但当前的顺序方法忽视了这些关系。因此，我们将树结构整合到表达式级生成中，并提出了一种表达树解码策略。为了生成一个以表达式为节点的树，我们采用逐层并行解码策略：在每一层同时解码多个独立表达式（叶节点），并重复逐层进行并行解码，以顺序生成依赖于其他表达式的父节点表达式。",
    "tldr": "本研究提出了一种表达树解码策略，将树结构整合到数学方程生成中，以解决当前顺序方法忽视并行和依赖关系的问题。"
}