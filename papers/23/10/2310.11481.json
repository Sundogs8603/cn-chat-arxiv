{
    "title": "Contracting Tsetlin Machine with Absorbing Automata. (arXiv:2310.11481v1 [cs.FL])",
    "abstract": "In this paper, we introduce a sparse Tsetlin Machine (TM) with absorbing Tsetlin Automata (TA) states. In brief, the TA of each clause literal has both an absorbing Exclude- and an absorbing Include state, making the learning scheme absorbing instead of ergodic. When a TA reaches an absorbing state, it will never leave that state again. If the absorbing state is an Exclude state, both the automaton and the literal can be removed from further consideration. The literal will as a result never participates in that clause. If the absorbing state is an Include state, on the other hand, the literal is stored as a permanent part of the clause while the TA is discarded. A novel sparse data structure supports these updates by means of three action lists: Absorbed Include, Include, and Exclude. By updating these lists, the TM gets smaller and smaller as the literals and their TA withdraw. In this manner, the computation accelerates during learning, leading to faster learning and less energy cons",
    "link": "http://arxiv.org/abs/2310.11481",
    "context": "Title: Contracting Tsetlin Machine with Absorbing Automata. (arXiv:2310.11481v1 [cs.FL])\nAbstract: In this paper, we introduce a sparse Tsetlin Machine (TM) with absorbing Tsetlin Automata (TA) states. In brief, the TA of each clause literal has both an absorbing Exclude- and an absorbing Include state, making the learning scheme absorbing instead of ergodic. When a TA reaches an absorbing state, it will never leave that state again. If the absorbing state is an Exclude state, both the automaton and the literal can be removed from further consideration. The literal will as a result never participates in that clause. If the absorbing state is an Include state, on the other hand, the literal is stored as a permanent part of the clause while the TA is discarded. A novel sparse data structure supports these updates by means of three action lists: Absorbed Include, Include, and Exclude. By updating these lists, the TM gets smaller and smaller as the literals and their TA withdraw. In this manner, the computation accelerates during learning, leading to faster learning and less energy cons",
    "path": "papers/23/10/2310.11481.json",
    "total_tokens": 926,
    "translated_title": "用吸收自动机扩展的合同Tsetlin机器",
    "translated_abstract": "在本文中，我们介绍了一种具有吸收Tsetlin自动机（TA）状态的稀疏Tsetlin机器（TM）。简单来说，每个条款文字的TA具有吸收性的排除（Exclude）状态和吸收性的包含（Include）状态，使得学习方案具有吸收性而不是遍历性。当TA达到一个吸收状态时，它将永远不会再离开该状态。如果吸收状态是排除状态，自动机和文字都可以从进一步考虑中删除。作为结果，该文字在该条款中将永远不会参与。另一方面，如果吸收状态是包含状态，该文字将作为条款的永久部分存储，而TA将被丢弃。一种新的稀疏数据结构通过三个动作列表来支持这些更新：吸收的包含（Absorbed Include）、包含（Include）和排除（Exclude）。通过更新这些列表，TM随着文字及其TA的撤回变得越来越小。通过这种方式，学习过程加速，导致更快的学习和更少的能量消耗。",
    "tldr": "本文介绍了一种合同Tsetlin机器（TM）与吸收自动机（TA）状态的稀疏扩展，通过引入吸收性的排除和包含状态，加速学习过程并减少能量消耗。"
}