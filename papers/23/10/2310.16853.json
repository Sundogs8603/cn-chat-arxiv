{
    "title": "CP-BCS: Binary Code Summarization Guided by Control Flow Graph and Pseudo Code. (arXiv:2310.16853v1 [cs.PL])",
    "abstract": "Automatically generating function summaries for binaries is an extremely valuable but challenging task, since it involves translating the execution behavior and semantics of the low-level language (assembly code) into human-readable natural language. However, most current works on understanding assembly code are oriented towards generating function names, which involve numerous abbreviations that make them still confusing. To bridge this gap, we focus on generating complete summaries for binary functions, especially for stripped binary (no symbol table and debug information in reality). To fully exploit the semantics of assembly code, we present a control flow graph and pseudo code guided binary code summarization framework called CP-BCS. CP-BCS utilizes a bidirectional instruction-level control flow graph and pseudo code that incorporates expert knowledge to learn the comprehensive binary function execution behavior and logic semantics. We evaluate CP-BCS on 3 different binary optimiz",
    "link": "http://arxiv.org/abs/2310.16853",
    "context": "Title: CP-BCS: Binary Code Summarization Guided by Control Flow Graph and Pseudo Code. (arXiv:2310.16853v1 [cs.PL])\nAbstract: Automatically generating function summaries for binaries is an extremely valuable but challenging task, since it involves translating the execution behavior and semantics of the low-level language (assembly code) into human-readable natural language. However, most current works on understanding assembly code are oriented towards generating function names, which involve numerous abbreviations that make them still confusing. To bridge this gap, we focus on generating complete summaries for binary functions, especially for stripped binary (no symbol table and debug information in reality). To fully exploit the semantics of assembly code, we present a control flow graph and pseudo code guided binary code summarization framework called CP-BCS. CP-BCS utilizes a bidirectional instruction-level control flow graph and pseudo code that incorporates expert knowledge to learn the comprehensive binary function execution behavior and logic semantics. We evaluate CP-BCS on 3 different binary optimiz",
    "path": "papers/23/10/2310.16853.json",
    "total_tokens": 897,
    "translated_title": "CP-BCS：由控制流图和伪代码引导的二进制代码摘要",
    "translated_abstract": "自动为二进制生成函数摘要是一项非常有价值但具有挑战性的任务，因为它涉及将低级语言（汇编代码）的执行行为和语义转化为可读的自然语言。然而，目前大部分关于理解汇编代码的工作都是为了生成函数名称，其中包含许多缩写术语，使得它们仍然令人困惑。为了填补这个空白，我们专注于为二进制函数生成完整的摘要，尤其是对于剥离了符号表和调试信息的二进制。为了充分利用汇编代码的语义，我们提出了一个名为CP-BCS的控制流图和伪代码引导的二进制代码摘要框架。CP-BCS利用双向指令级控制流图和伪代码，结合专家知识来学习全面的二进制函数执行行为和逻辑语义。我们在三种不同的二进制优化案例上评估了CP-BCS。",
    "tldr": "CP-BCS是一个基于控制流图和伪代码的二进制代码摘要框架，用于自动生成函数摘要，特别是对于剥离了符号表和调试信息的二进制。它利用专家知识学习二进制函数的执行行为和逻辑语义。"
}