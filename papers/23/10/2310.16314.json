{
    "title": "Understanding Code Semantics: An Evaluation of Transformer Models in Summarization. (arXiv:2310.16314v1 [cs.LG])",
    "abstract": "This paper delves into the intricacies of code summarization using advanced transformer-based language models. Through empirical studies, we evaluate the efficacy of code summarization by altering function and variable names to explore whether models truly understand code semantics or merely rely on textual cues. We have also introduced adversaries like dead code and commented code across three programming languages (Python, Javascript, and Java) to further scrutinize the model's understanding. Ultimately, our research aims to offer valuable insights into the inner workings of transformer-based LMs, enhancing their ability to understand code and contributing to more efficient software development practices and maintenance workflows.",
    "link": "http://arxiv.org/abs/2310.16314",
    "context": "Title: Understanding Code Semantics: An Evaluation of Transformer Models in Summarization. (arXiv:2310.16314v1 [cs.LG])\nAbstract: This paper delves into the intricacies of code summarization using advanced transformer-based language models. Through empirical studies, we evaluate the efficacy of code summarization by altering function and variable names to explore whether models truly understand code semantics or merely rely on textual cues. We have also introduced adversaries like dead code and commented code across three programming languages (Python, Javascript, and Java) to further scrutinize the model's understanding. Ultimately, our research aims to offer valuable insights into the inner workings of transformer-based LMs, enhancing their ability to understand code and contributing to more efficient software development practices and maintenance workflows.",
    "path": "papers/23/10/2310.16314.json",
    "total_tokens": 760,
    "translated_title": "了解代码语义: 对Transformer模型在摘要中的评估",
    "translated_abstract": "本文使用先进的基于Transformer的语言模型深入研究了代码摘要的复杂性。通过实证研究，我们通过改变函数和变量名来评估代码摘要的有效性，以探索模型是否真正理解代码语义，还是仅仅依赖文本线索。我们还引入了死代码和注释代码等对抗性案例，涵盖了三种编程语言(Python、Javascript和Java)，以进一步审查模型的理解能力。最终，我们的研究旨在提供有价值的见解，加强Transformer模型理解代码的能力，从而为更高效的软件开发实践和维护工作流程做出贡献。",
    "tldr": "本研究通过评估代码摘要的有效性和引入对抗性案例，研究了基于Transformer模型的代码理解能力。结果显示，模型在理解代码语义方面仍存在挑战，这对于提高软件开发和维护效率具有重要意义。",
    "en_tdlr": "This study evaluates the effectiveness of code summarization and investigates the code understanding capability of Transformer models by introducing adversarial cases. The results show that there are still challenges in understanding code semantics for the models, which is crucial for improving software development and maintenance efficiency."
}