{
    "title": "Exact and soft boundary conditions in Physics-Informed Neural Networks for the Variable Coefficient Poisson equation. (arXiv:2310.02548v1 [cs.LG])",
    "abstract": "Boundary conditions (BCs) are a key component in every Physics-Informed Neural Network (PINN). By defining the solution to partial differential equations (PDEs) along domain boundaries, BCs constrain the underlying boundary value problem (BVP) that a PINN tries to approximate. Without them, unique PDE solutions may not exist and finding approximations with PINNs would be a challenging, if not impossible task. This study examines how soft loss-based and exact distance function-based BC imposition approaches differ when applied in PINNs. The well known variable coefficient Poisson equation serves as the target PDE for all PINN models trained in this work. Besides comparing BC imposition approaches, the goal of this work is to also provide resources on how to implement these PINNs in practice. To this end, Keras models with Tensorflow backend as well as a Python notebook with code examples and step-by-step explanations on how to build soft/exact BC PINNs are published alongside this revie",
    "link": "http://arxiv.org/abs/2310.02548",
    "context": "Title: Exact and soft boundary conditions in Physics-Informed Neural Networks for the Variable Coefficient Poisson equation. (arXiv:2310.02548v1 [cs.LG])\nAbstract: Boundary conditions (BCs) are a key component in every Physics-Informed Neural Network (PINN). By defining the solution to partial differential equations (PDEs) along domain boundaries, BCs constrain the underlying boundary value problem (BVP) that a PINN tries to approximate. Without them, unique PDE solutions may not exist and finding approximations with PINNs would be a challenging, if not impossible task. This study examines how soft loss-based and exact distance function-based BC imposition approaches differ when applied in PINNs. The well known variable coefficient Poisson equation serves as the target PDE for all PINN models trained in this work. Besides comparing BC imposition approaches, the goal of this work is to also provide resources on how to implement these PINNs in practice. To this end, Keras models with Tensorflow backend as well as a Python notebook with code examples and step-by-step explanations on how to build soft/exact BC PINNs are published alongside this revie",
    "path": "papers/23/10/2310.02548.json",
    "total_tokens": 901,
    "translated_title": "变系数泊松方程中物理信息神经网络的精确和软边界条件",
    "translated_abstract": "边界条件是每个物理信息神经网络（PINN）中的关键组成部分。通过在域边界上定义偏微分方程（PDE）的解，边界条件约束了PINN试图逼近的基本边界值问题（BVP）。如果没有它们，唯一的PDE解可能不存在，使用PINN找到近似解将是一项具有挑战性的任务，甚至是不可能的任务。本研究考察了在PINN中应用基于软损失和基于精确距离函数的边界条件强制方法的差异。著名的变系数泊松方程被用作本工作中所有PINN模型的目标PDE。除了比较边界条件强制方法，本工作的目标还是提供有关如何实现这些PINN的资源。为此，通过此评论一并发布了使用Tensorflow后端的Keras模型以及带有代码示例和逐步说明如何构建软/精确边界条件PINN的Python笔记本。",
    "tldr": "本研究研究了在物理信息神经网络(PINN)中应用软损失和精确距离函数的边界条件时的差异，并提供了有关如何实现这些PINN的资源和工具。",
    "en_tdlr": "This study examines the differences in applying soft loss-based and exact distance function-based boundary conditions in Physics-Informed Neural Networks (PINNs), and provides resources and tools on how to implement these PINNs."
}