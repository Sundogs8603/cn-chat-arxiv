{
    "title": "Reboost Large Language Model-based Text-to-SQL, Text-to-Python, and Text-to-Function -- with Real Applications in Traffic Domain. (arXiv:2310.18752v2 [cs.AI] UPDATED)",
    "abstract": "The previous state-of-the-art (SOTA) method achieved a remarkable execution accuracy on the Spider dataset, which is one of the largest and most diverse datasets in the Text-to-SQL domain. However, during our reproduction of the business dataset, we observed a significant drop in performance. We examined the differences in dataset complexity, as well as the clarity of questions' intentions, and assessed how those differences could impact the performance of prompting methods. Subsequently, We develop a more adaptable and more general prompting method, involving mainly query rewriting and SQL boosting, which respectively transform vague information into exact and precise information and enhance the SQL itself by incorporating execution feedback and the query results from the database content. In order to prevent information gaps, we include the comments, value types, and value samples for columns as part of the database description in the prompt. Our experiments with Large Language Model",
    "link": "http://arxiv.org/abs/2310.18752",
    "context": "Title: Reboost Large Language Model-based Text-to-SQL, Text-to-Python, and Text-to-Function -- with Real Applications in Traffic Domain. (arXiv:2310.18752v2 [cs.AI] UPDATED)\nAbstract: The previous state-of-the-art (SOTA) method achieved a remarkable execution accuracy on the Spider dataset, which is one of the largest and most diverse datasets in the Text-to-SQL domain. However, during our reproduction of the business dataset, we observed a significant drop in performance. We examined the differences in dataset complexity, as well as the clarity of questions' intentions, and assessed how those differences could impact the performance of prompting methods. Subsequently, We develop a more adaptable and more general prompting method, involving mainly query rewriting and SQL boosting, which respectively transform vague information into exact and precise information and enhance the SQL itself by incorporating execution feedback and the query results from the database content. In order to prevent information gaps, we include the comments, value types, and value samples for columns as part of the database description in the prompt. Our experiments with Large Language Model",
    "path": "papers/23/10/2310.18752.json",
    "total_tokens": 948,
    "translated_title": "Reboost基于大型语言模型的文本到SQL、文本到Python和文本到函数的方法——以交通领域的实际应用为例",
    "translated_abstract": "先前的最先进方法在Spider数据集上取得了卓越的执行准确性，该数据集是文本到SQL领域中最大且最多样化的数据集之一。然而，在我们复现业务数据集时，我们观察到性能显著下降。我们对数据集复杂性和问题意图的明确程度进行了比较，并评估了这些差异对提示方法性能的影响。随后，我们开发了一种更适应性更强、更通用的提示方法，主要包括查询重写和SQL增强，分别将模糊信息转化为确切和精确的信息，并通过整合来自数据库内容的执行反馈和查询结果来增强SQL本身。为了防止信息缺失，我们将列的注释、值类型和值示例作为数据库描述的一部分包含在提示中。我们使用大型语言模型进行了实验证明了这种方法的有效性。",
    "tldr": "本论文提出了一种基于大型语言模型的文本到SQL、文本到Python和文本到函数的方法，通过查询重写和SQL增强等技术，将模糊信息转化为确切和精确的信息，并引入执行反馈和查询结果增强SQL本身。该方法在交通领域的实际应用中取得了显著的性能提升。",
    "en_tdlr": "This paper proposes a method based on large language models for text-to-SQL, text-to-Python, and text-to-function, which transforms vague information into exact and precise information through query rewriting and SQL boosting techniques, and enhances the SQL itself by incorporating execution feedback and query results. The method achieves significant performance improvement in real applications in the traffic domain."
}