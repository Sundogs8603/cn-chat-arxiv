{
    "title": "Trustworthy Formal Natural Language Specifications. (arXiv:2310.03885v1 [cs.PL])",
    "abstract": "Interactive proof assistants are computer programs carefully constructed to check a human-designed proof of a mathematical claim with high confidence in the implementation. However, this only validates truth of a formal claim, which may have been mistranslated from a claim made in natural language. This is especially problematic when using proof assistants to formally verify the correctness of software with respect to a natural language specification. The translation from informal to formal remains a challenging, time-consuming process that is difficult to audit for correctness.  This paper shows that it is possible to build support for specifications written in expressive subsets of natural language, within existing proof assistants, consistent with the principles used to establish trust and auditability in proof assistants themselves. We implement a means to provide specifications in a modularly extensible formal subset of English, and have them automatically translated into formal c",
    "link": "http://arxiv.org/abs/2310.03885",
    "context": "Title: Trustworthy Formal Natural Language Specifications. (arXiv:2310.03885v1 [cs.PL])\nAbstract: Interactive proof assistants are computer programs carefully constructed to check a human-designed proof of a mathematical claim with high confidence in the implementation. However, this only validates truth of a formal claim, which may have been mistranslated from a claim made in natural language. This is especially problematic when using proof assistants to formally verify the correctness of software with respect to a natural language specification. The translation from informal to formal remains a challenging, time-consuming process that is difficult to audit for correctness.  This paper shows that it is possible to build support for specifications written in expressive subsets of natural language, within existing proof assistants, consistent with the principles used to establish trust and auditability in proof assistants themselves. We implement a means to provide specifications in a modularly extensible formal subset of English, and have them automatically translated into formal c",
    "path": "papers/23/10/2310.03885.json",
    "total_tokens": 790,
    "translated_title": "可信的正式自然语言规范",
    "translated_abstract": "交互证明助手是精心构建的计算机程序，用于高度可信地检查人设计的数学证明的实现。然而，这只验证了一个正式声明的真实性，该声明可能已经从自然语言中的一个声明中被错误地翻译。当使用证明助手在自然语言规范方面正式验证软件的正确性时，这尤其是有问题的。从非正式到正式的翻译仍然是一个具有挑战性、耗时的过程，难以审计其正确性。本文展示了在现有的证明助手中构建支持使用自然语言表达的规范的可能性，这与建立证明助手自身的信任和可审计性的原则一致。我们实现了一种方法，可以使用可模块化可扩展的英语形式子集提供规范，并自动将其翻译为正式的c",
    "tldr": "本文表明了在现有的证明助手中构建支持使用自然语言表达的规范的可能性，从而解决了翻译自然语言规范到正式规范的问题。"
}