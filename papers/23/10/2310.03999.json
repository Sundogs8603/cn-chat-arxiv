{
    "title": "Runtime Monitoring DNN-Based Perception. (arXiv:2310.03999v1 [cs.LG])",
    "abstract": "Deep neural networks (DNNs) are instrumental in realizing complex perception systems. As many of these applications are safety-critical by design, engineering rigor is required to ensure that the functional insufficiency of the DNN-based perception is not the source of harm. In addition to conventional static verification and testing techniques employed during the design phase, there is a need for runtime verification techniques that can detect critical events, diagnose issues, and even enforce requirements. This tutorial aims to provide readers with a glimpse of techniques proposed in the literature. We start with classical methods proposed in the machine learning community, then highlight a few techniques proposed by the formal methods community. While we surely can observe similarities in the design of monitors, how the decision boundaries are created vary between the two communities. We conclude by highlighting the need to rigorously design monitors, where data availability outside",
    "link": "http://arxiv.org/abs/2310.03999",
    "context": "Title: Runtime Monitoring DNN-Based Perception. (arXiv:2310.03999v1 [cs.LG])\nAbstract: Deep neural networks (DNNs) are instrumental in realizing complex perception systems. As many of these applications are safety-critical by design, engineering rigor is required to ensure that the functional insufficiency of the DNN-based perception is not the source of harm. In addition to conventional static verification and testing techniques employed during the design phase, there is a need for runtime verification techniques that can detect critical events, diagnose issues, and even enforce requirements. This tutorial aims to provide readers with a glimpse of techniques proposed in the literature. We start with classical methods proposed in the machine learning community, then highlight a few techniques proposed by the formal methods community. While we surely can observe similarities in the design of monitors, how the decision boundaries are created vary between the two communities. We conclude by highlighting the need to rigorously design monitors, where data availability outside",
    "path": "papers/23/10/2310.03999.json",
    "total_tokens": 838,
    "translated_title": "运行时监控基于DNN的感知",
    "translated_abstract": "深度神经网络(DNNs)在实现复杂的感知系统中起着重要作用。由于这些应用程序中的许多是安全关键的，需要工程严谨性来确保基于DNN的感知的功能不足不会造成伤害。除了设计阶段使用的传统静态验证和测试技术外，还需要能够检测关键事件、诊断问题甚至强制要求的运行时验证技术。本教程旨在为读者介绍文献中提出的技术。我们从机器学习社区提出的经典方法开始，然后重点介绍形式方法社区提出的一些技术。虽然我们可以观察到监控器设计中的相似之处，但决策边界的创建方式在这两个社区之间有所不同。我们得出的结论是需要严谨地设计监控器，在数据可用性受限的情况下考虑不同的方法。",
    "tldr": "运行时监控基于DNN的感知的论文总结的重要创新和贡献是介绍了文献中关于监视方法的经典方法和形式方法，并强调了设计严谨的监控器的必要性。",
    "en_tdlr": "The important innovation and contribution of the paper \"Runtime Monitoring DNN-Based Perception\" is the introduction of classical and formal methods for monitoring, while emphasizing the need for rigorously designed monitors."
}