{
    "title": "TRIGO: Benchmarking Formal Mathematical Proof Reduction for Generative Language Models. (arXiv:2310.10180v2 [cs.CL] UPDATED)",
    "abstract": "Automated theorem proving (ATP) has become an appealing domain for exploring the reasoning ability of the recent successful generative language models. However, current ATP benchmarks mainly focus on symbolic inference, but rarely involve the understanding of complex number combination reasoning. In this work, we propose TRIGO, an ATP benchmark that not only requires a model to reduce a trigonometric expression with step-by-step proofs but also evaluates a generative LM's reasoning ability on formulas and its capability to manipulate, group, and factor number terms. We gather trigonometric expressions and their reduced forms from the web, annotate the simplification process manually, and translate it into the Lean formal language system. We then automatically generate additional examples from the annotated samples to expand the dataset. Furthermore, we develop an automatic generator based on Lean-Gym to create dataset splits of varying difficulties and distributions in order to thoroug",
    "link": "http://arxiv.org/abs/2310.10180",
    "context": "Title: TRIGO: Benchmarking Formal Mathematical Proof Reduction for Generative Language Models. (arXiv:2310.10180v2 [cs.CL] UPDATED)\nAbstract: Automated theorem proving (ATP) has become an appealing domain for exploring the reasoning ability of the recent successful generative language models. However, current ATP benchmarks mainly focus on symbolic inference, but rarely involve the understanding of complex number combination reasoning. In this work, we propose TRIGO, an ATP benchmark that not only requires a model to reduce a trigonometric expression with step-by-step proofs but also evaluates a generative LM's reasoning ability on formulas and its capability to manipulate, group, and factor number terms. We gather trigonometric expressions and their reduced forms from the web, annotate the simplification process manually, and translate it into the Lean formal language system. We then automatically generate additional examples from the annotated samples to expand the dataset. Furthermore, we develop an automatic generator based on Lean-Gym to create dataset splits of varying difficulties and distributions in order to thoroug",
    "path": "papers/23/10/2310.10180.json",
    "total_tokens": 879,
    "translated_title": "TRIGO:基于生成语言模型的形式数学证明减缩的基准测试",
    "translated_abstract": "自动定理证明(ATP)已成为探索最新成功的生成语言模型推理能力的吸引人领域。然而，当前的ATP基准主要集中在符号推理上，很少涉及复杂数字组合推理的理解。在这项工作中，我们提出TRIGO，一个ATP基准测试，不仅要求模型按照步骤证明减少三角表达式，还要评估生成语言模型对公式的推理能力以及操作、分组和因式分解数字项的能力。我们从网络上收集三角表达式及其简化形式，手动标注简化过程，并将其翻译成Lean形式化语言系统。然后，我们根据标注样本自动生成额外的示例来扩展数据集。此外，我们基于Lean-Gym开发了一个自动生成器，用于创建难度和分布各异的数据集拆分，以便进行全面的评估。",
    "tldr": "TRIGO是一个基于生成语言模型的形式数学证明减缩的基准测试，要求模型不仅可以按步骤证明减少三角表达式，还可以评估其对公式的推理能力，以及操作、分组和因式分解数字项的能力。",
    "en_tdlr": "TRIGO is a benchmark for formal mathematical proof reduction based on generative language models, which requires the model to not only reduce trigonometric expressions step by step, but also evaluate its reasoning ability on formulas and its capability to manipulate, group, and factor number terms."
}