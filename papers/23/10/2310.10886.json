{
    "title": "The Calysto Scheme Project. (arXiv:2310.10886v1 [cs.PL])",
    "abstract": "Calysto Scheme is written in Scheme in Continuation-Passing Style, and converted through a series of correctness-preserving program transformations into Python. It has support for standard Scheme functionality, including call/cc, as well as syntactic extensions, a nondeterministic operator for automatic backtracking, and many extensions to allow Python interoperation. Because of its Python foundation, it can take advantage of modern Python libraries, including those for machine learning and other pedagogical contexts. Although Calysto Scheme was developed with educational purposes in mind, it has proven to be generally useful due to its simplicity and ease of installation. It has been integrated into the Jupyter Notebook ecosystem and used in the classroom to teach introductory Programming Languages with some interesting and unique twists.",
    "link": "http://arxiv.org/abs/2310.10886",
    "context": "Title: The Calysto Scheme Project. (arXiv:2310.10886v1 [cs.PL])\nAbstract: Calysto Scheme is written in Scheme in Continuation-Passing Style, and converted through a series of correctness-preserving program transformations into Python. It has support for standard Scheme functionality, including call/cc, as well as syntactic extensions, a nondeterministic operator for automatic backtracking, and many extensions to allow Python interoperation. Because of its Python foundation, it can take advantage of modern Python libraries, including those for machine learning and other pedagogical contexts. Although Calysto Scheme was developed with educational purposes in mind, it has proven to be generally useful due to its simplicity and ease of installation. It has been integrated into the Jupyter Notebook ecosystem and used in the classroom to teach introductory Programming Languages with some interesting and unique twists.",
    "path": "papers/23/10/2310.10886.json",
    "total_tokens": 751,
    "translated_title": "Calysto Scheme项目",
    "translated_abstract": "Calysto Scheme是用Continuation-Passing Style编写的Scheme，经过一系列保持正确性的程序转换后转化为Python。它支持标准Scheme功能，包括call/cc，以及语法扩展、用于自动回溯的非确定性操作符和许多扩展，以便与Python进行互操作。由于其基于Python，它可以利用现代Python库，包括用于机器学习和其他教学环境的库。尽管Calysto Scheme的开发目的是为了教育，但由于其简单性和易安装性，它被证明在一般情况下也很有用。它已经集成到Jupyter Notebook生态系统中，并在教室中用于教授编程语言入门课程，添加了一些有趣且独特的元素。",
    "tldr": "Calysto Scheme是一个将Scheme转换为Python的项目，支持标准Scheme功能和Python库的互操作。它被广泛应用于教育和教学，且已被成功整合入Jupyter Notebook。"
}