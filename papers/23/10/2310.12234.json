{
    "title": "An Eager Satisfiability Modulo Theories Solver for Algebraic Datatypes. (arXiv:2310.12234v1 [cs.LO])",
    "abstract": "Algebraic data types (ADTs) are a construct classically found in functional programming languages that capture data structures like enumerated types, lists, and trees. In recent years, interest in ADTs has increased. For example, popular programming languages, like Python, have added support for ADTs. Automated reasoning about ADTs can be done using satisfiability modulo theories (SMT) solving, an extension of the Boolean satisfiability problem with constraints over first-order structures. Unfortunately, SMT solvers that support ADTs do not scale as state-of-the-art approaches all use variations of the same \\emph{lazy} approach. In this paper, we present an SMT solver that takes a fundamentally different approach, an \\emph{eager} approach. Specifically, our solver reduces ADT queries to a simpler logical theory, uninterpreted functions (UF), and then uses an existing solver on the reduced query. We prove the soundness and completeness of our approach and demonstrate that it outperforms",
    "link": "http://arxiv.org/abs/2310.12234",
    "context": "Title: An Eager Satisfiability Modulo Theories Solver for Algebraic Datatypes. (arXiv:2310.12234v1 [cs.LO])\nAbstract: Algebraic data types (ADTs) are a construct classically found in functional programming languages that capture data structures like enumerated types, lists, and trees. In recent years, interest in ADTs has increased. For example, popular programming languages, like Python, have added support for ADTs. Automated reasoning about ADTs can be done using satisfiability modulo theories (SMT) solving, an extension of the Boolean satisfiability problem with constraints over first-order structures. Unfortunately, SMT solvers that support ADTs do not scale as state-of-the-art approaches all use variations of the same \\emph{lazy} approach. In this paper, we present an SMT solver that takes a fundamentally different approach, an \\emph{eager} approach. Specifically, our solver reduces ADT queries to a simpler logical theory, uninterpreted functions (UF), and then uses an existing solver on the reduced query. We prove the soundness and completeness of our approach and demonstrate that it outperforms",
    "path": "papers/23/10/2310.12234.json",
    "total_tokens": 937,
    "translated_title": "一种针对代数数据类型的热切满足模理论求解器",
    "translated_abstract": "代数数据类型 (ADTs) 是功能性编程语言中经典的构造，用于捕捉枚举类型、列表和树等数据结构。近年来，对ADTs的兴趣逐渐增加。例如，流行的编程语言，如Python，已经为ADTs添加了支持。可以使用满足模理论 (SMT) 求解来自动进行关于ADTs的推理，SMT是布尔可满足性问题在一阶结构上的约束扩展。然而，支持ADTs的SMT求解器无法扩展，因为现有方法都采用了同样\\emph{懒惰}的方法。在本文中，我们提出了一种完全不同的SMT求解器，即\\emph{热切}方法。具体而言，我们的求解器将ADT查询简化为更简单的逻辑理论，如非解释函数 (UF)，然后在简化后的查询上使用现有求解器。我们证明了我们方法的声音性和完备性，并证明其性能优于现有方法。",
    "tldr": "该论文提出了一种针对代数数据类型的热切满足模理论求解器。通过将ADT查询简化为非解释函数 (UF)，然后使用现有求解器，该方法在声音性和完备性上都得到了证明，并且在性能上优于现有方法。",
    "en_tdlr": "This paper presents an eager satisfiability modulo theories (SMT) solver for algebraic data types (ADTs). By reducing ADT queries to uninterpreted functions (UF) and utilizing an existing solver, the proposed approach is proven to be sound, complete, and outperforms existing methods."
}