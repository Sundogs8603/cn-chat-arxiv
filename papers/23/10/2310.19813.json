{
    "title": "Enhancing Genetic Improvement Mutations Using Large Language Models. (arXiv:2310.19813v1 [cs.SE])",
    "abstract": "Large language models (LLMs) have been successfully applied to software engineering tasks, including program repair. However, their application in search-based techniques such as Genetic Improvement (GI) is still largely unexplored. In this paper, we evaluate the use of LLMs as mutation operators for GI to improve the search process. We expand the Gin Java GI toolkit to call OpenAI's API to generate edits for the JCodec tool. We randomly sample the space of edits using 5 different edit types. We find that the number of patches passing unit tests is up to 75% higher with LLM-based edits than with standard Insert edits. Further, we observe that the patches found with LLMs are generally less diverse compared to standard edits. We ran GI with local search to find runtime improvements. Although many improving patches are found by LLM-enhanced GI, the best improving patch was found by standard GI.",
    "link": "http://arxiv.org/abs/2310.19813",
    "context": "Title: Enhancing Genetic Improvement Mutations Using Large Language Models. (arXiv:2310.19813v1 [cs.SE])\nAbstract: Large language models (LLMs) have been successfully applied to software engineering tasks, including program repair. However, their application in search-based techniques such as Genetic Improvement (GI) is still largely unexplored. In this paper, we evaluate the use of LLMs as mutation operators for GI to improve the search process. We expand the Gin Java GI toolkit to call OpenAI's API to generate edits for the JCodec tool. We randomly sample the space of edits using 5 different edit types. We find that the number of patches passing unit tests is up to 75% higher with LLM-based edits than with standard Insert edits. Further, we observe that the patches found with LLMs are generally less diverse compared to standard edits. We ran GI with local search to find runtime improvements. Although many improving patches are found by LLM-enhanced GI, the best improving patch was found by standard GI.",
    "path": "papers/23/10/2310.19813.json",
    "total_tokens": 953,
    "translated_title": "利用大型语言模型增强遗传改进突变",
    "translated_abstract": "大型语言模型（LLMs）已成功应用于软件工程任务，包括程序修复。然而，它们在遗传改进（GI）等基于搜索的技术中的应用仍然很少被探索。在本文中，我们评估了将LLMs作为GI的变异操作符以改进搜索过程的使用。我们扩展了Gin Java GI工具包，以调用OpenAI的API为JCodec工具生成编辑。我们使用5种不同的编辑类型随机抽样编辑空间。我们发现，通过LLM编辑，通过单元测试的补丁数量高于使用标准插入编辑的补丁数量高达75％。此外，我们观察到与标准编辑相比，LLMs找到的补丁通常较少多样化。我们使用局部搜索运行GI以寻找运行时改进。尽管LLM增强的GI找到了许多改进的补丁，但最好的改进补丁是通过标准GI找到的。",
    "tldr": "本文研究了利用大型语言模型作为遗传改进的变异操作符来提高搜索过程，发现使用LLM编辑的补丁通过单元测试的数量高达75％，但相比较标准编辑，LLMs找到的补丁较少多样化。尽管LLM增强的GI找到了许多改进的补丁，但最好的改进补丁是通过标准GI找到的。",
    "en_tdlr": "This paper explores the use of large language models (LLMs) as mutation operators in Genetic Improvement (GI) to enhance the search process. The findings show that patches generated with LLM-based edits have a higher passing rate in unit tests compared to standard edits, but are less diverse. While LLM-enhanced GI finds many improving patches, the best patch is still found by standard GI."
}