{
    "title": "LLM4VV: Developing LLM-Driven Testsuite for Compiler Validation",
    "abstract": "arXiv:2310.04963v3 Announce Type: replace  Abstract: Large language models (LLMs) are a new and powerful tool for a wide span of applications involving natural language and demonstrate impressive code generation abilities. The goal of this work is to automatically generate tests and use these tests to validate and verify compiler implementations of a directive-based parallel programming paradigm, OpenACC. To do so, in this paper, we explore the capabilities of state-of-the-art LLMs, including open-source LLMs -- Meta Codellama, Phind fine-tuned version of Codellama, Deepseek Deepseek Coder and closed-source LLMs -- OpenAI GPT-3.5-Turbo and GPT-4-Turbo. We further fine-tuned the open-source LLMs and GPT-3.5-Turbo using our own testsuite dataset along with using the OpenACC specification. We also explored these LLMs using various prompt engineering techniques that include code template, template with retrieval-augmented generation (RAG), one-shot example, one-shot with RAG, expressive pr",
    "link": "https://arxiv.org/abs/2310.04963",
    "context": "Title: LLM4VV: Developing LLM-Driven Testsuite for Compiler Validation\nAbstract: arXiv:2310.04963v3 Announce Type: replace  Abstract: Large language models (LLMs) are a new and powerful tool for a wide span of applications involving natural language and demonstrate impressive code generation abilities. The goal of this work is to automatically generate tests and use these tests to validate and verify compiler implementations of a directive-based parallel programming paradigm, OpenACC. To do so, in this paper, we explore the capabilities of state-of-the-art LLMs, including open-source LLMs -- Meta Codellama, Phind fine-tuned version of Codellama, Deepseek Deepseek Coder and closed-source LLMs -- OpenAI GPT-3.5-Turbo and GPT-4-Turbo. We further fine-tuned the open-source LLMs and GPT-3.5-Turbo using our own testsuite dataset along with using the OpenACC specification. We also explored these LLMs using various prompt engineering techniques that include code template, template with retrieval-augmented generation (RAG), one-shot example, one-shot with RAG, expressive pr",
    "path": "papers/23/10/2310.04963.json",
    "total_tokens": 865,
    "translated_title": "LLM4VV：为编译器验证开发基于LLM的测试套件",
    "translated_abstract": "大型语言模型(LLMs)是一种新而强大的工具，可用于涵盖自然语言的各种应用，并展示出令人印象深刻的代码生成能力。本文旨在自动生成测试，并利用这些测试来验证和验证基于指令的并行编程范例OpenACC的编译器实现。为此，我们探索了最先进的LLM技术，包括开源LLMs -- Meta Codellama、Codellama的Phind微调版本、Deepseek Coder和闭源LLMs -- OpenAI GPT-3.5-Turbo和GPT-4-Turbo。我们进一步使用我们自己的测试套件数据集和OpenACC规范对开源LLMs和GPT-3.5-Turbo进行了微调。我们还使用了各种提示工程技术来探索这些LLMs，包括代码模板、带有检索增强生成(RAG)的模板、一次性示例、带有RAG的一次性和表达式提示。",
    "tldr": "本研究开发了一个基于LLM的测试套件，用于验证编译器实现，探索了各种LLMs并使用不同的提示工程技术进行微调。",
    "en_tdlr": "This study develops an LLM-based testsuite for compiler validation, explores various LLMs, and fine-tunes them using different prompt engineering techniques."
}