{
    "title": "Enhancing Enterprise Network Security: Comparing Machine-Level and Process-Level Analysis for Dynamic Malware Detection. (arXiv:2310.18165v1 [cs.CR])",
    "abstract": "Analysing malware is important to understand how malicious software works and to develop appropriate detection and prevention methods. Dynamic analysis can overcome evasion techniques commonly used to bypass static analysis and provide insights into malware runtime activities. Much research on dynamic analysis focused on investigating machine-level information (e.g., CPU, memory, network usage) to identify whether a machine is running malicious activities. A malicious machine does not necessarily mean all running processes on the machine are also malicious. If we can isolate the malicious process instead of isolating the whole machine, we could kill the malicious process, and the machine can keep doing its job. Another challenge dynamic malware detection research faces is that the samples are executed in one machine without any background applications running. It is unrealistic as a computer typically runs many benign (background) applications when a malware incident happens. Our exper",
    "link": "http://arxiv.org/abs/2310.18165",
    "context": "Title: Enhancing Enterprise Network Security: Comparing Machine-Level and Process-Level Analysis for Dynamic Malware Detection. (arXiv:2310.18165v1 [cs.CR])\nAbstract: Analysing malware is important to understand how malicious software works and to develop appropriate detection and prevention methods. Dynamic analysis can overcome evasion techniques commonly used to bypass static analysis and provide insights into malware runtime activities. Much research on dynamic analysis focused on investigating machine-level information (e.g., CPU, memory, network usage) to identify whether a machine is running malicious activities. A malicious machine does not necessarily mean all running processes on the machine are also malicious. If we can isolate the malicious process instead of isolating the whole machine, we could kill the malicious process, and the machine can keep doing its job. Another challenge dynamic malware detection research faces is that the samples are executed in one machine without any background applications running. It is unrealistic as a computer typically runs many benign (background) applications when a malware incident happens. Our exper",
    "path": "papers/23/10/2310.18165.json",
    "total_tokens": 893,
    "translated_title": "提升企业网络安全：比较基于机器级和进程级分析的动态恶意软件检测方法",
    "translated_abstract": "分析恶意软件对于理解恶意软件的工作原理并开发适当的检测和预防方法非常重要。动态分析可以克服常用于绕过静态分析的逃逸技术，并提供对恶意软件运行时活动的洞察。许多关于动态分析的研究侧重于调查机器级信息（例如CPU、内存、网络使用率），以确定机器是否运行恶意活动。恶意机器并不一定意味着机器上的所有运行进程也是恶意的。如果我们可以隔离恶意进程而不是隔离整个机器，我们可以杀死恶意进程，而机器可以继续正常工作。动态恶意软件检测研究面临的另一个挑战是样本在一个没有任何后台应用程序运行的机器上执行。这是不现实的，因为恶意软件事件发生时，计算机通常会运行许多良性（后台）应用程序。我们的实验",
    "tldr": "本研究比较了基于机器级和进程级分析的动态恶意软件检测方法，探索如何隔离恶意进程以提高网络安全性，并解决了样本执行中的实际情况和资源利用的挑战。"
}