{
    "title": "Program Translation via Code Distillation. (arXiv:2310.11476v1 [cs.SE])",
    "abstract": "Software version migration and program translation are an important and costly part of the lifecycle of large codebases. Traditional machine translation relies on parallel corpora for supervised translation, which is not feasible for program translation due to a dearth of aligned data. Recent unsupervised neural machine translation techniques have overcome data limitations by included techniques such as back translation and low level compiler intermediate representations (IR). These methods face significant challenges due to the noise in code snippet alignment and the diversity of IRs respectively. In this paper we propose a novel model called Code Distillation (CoDist) whereby we capture the semantic and structural equivalence of code in a language agnostic intermediate representation. Distilled code serves as a translation pivot for any programming language, leading by construction to parallel corpora which scale to all available source code by simply applying the distillation compil",
    "link": "http://arxiv.org/abs/2310.11476",
    "context": "Title: Program Translation via Code Distillation. (arXiv:2310.11476v1 [cs.SE])\nAbstract: Software version migration and program translation are an important and costly part of the lifecycle of large codebases. Traditional machine translation relies on parallel corpora for supervised translation, which is not feasible for program translation due to a dearth of aligned data. Recent unsupervised neural machine translation techniques have overcome data limitations by included techniques such as back translation and low level compiler intermediate representations (IR). These methods face significant challenges due to the noise in code snippet alignment and the diversity of IRs respectively. In this paper we propose a novel model called Code Distillation (CoDist) whereby we capture the semantic and structural equivalence of code in a language agnostic intermediate representation. Distilled code serves as a translation pivot for any programming language, leading by construction to parallel corpora which scale to all available source code by simply applying the distillation compil",
    "path": "papers/23/10/2310.11476.json",
    "total_tokens": 906,
    "translated_title": "通过代码精炼实现程序翻译",
    "translated_abstract": "软件版本迁移和程序翻译是大型代码库生命周期中重要且昂贵的部分。传统的机器翻译依赖于并行语料库进行监督翻译，但由于缺乏对齐数据，这在程序翻译中是不可行的。最近的无监督神经机器翻译技术通过包括反向翻译和低级编译器中间表示(IR)等技术克服了数据限制。这些方法分别面临着代码片段对齐中的噪声和IR的多样性所带来的重大挑战。在本文中，我们提出了一种名为Code Distillation（CoDist）的新模型，通过在一种语言无关的中间表示中捕捉代码的语义和结构等价关系。精炼的代码作为任何编程语言的翻译枢纽，在构建中通过简单应用精炼编译实现对所有可用源代码的并行语料库扩展。",
    "tldr": "本文提出了一种名为Code Distillation（CoDist）的创新模型，通过在一种语言无关的中间表示中捕捉代码的语义和结构等价关系，实现了程序翻译，克服了传统机器翻译和无监督神经机器翻译在数据对齐和IR多样性方面的挑战。",
    "en_tdlr": "This paper introduces a novel model called Code Distillation (CoDist), which captures the semantic and structural equivalence of code in a language agnostic intermediate representation, enabling program translation and overcoming challenges in traditional machine translation and unsupervised neural machine translation related to data alignment and IR diversity."
}