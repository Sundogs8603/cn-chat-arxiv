{
    "title": "Coding by Design: GPT-4 empowers Agile Model Driven Development. (arXiv:2310.04304v1 [cs.SE])",
    "abstract": "Generating code from a natural language using Large Language Models (LLMs) such as ChatGPT, seems groundbreaking. Yet, with more extensive use, it's evident that this approach has its own limitations. The inherent ambiguity of natural language presents challenges for complex software designs. Accordingly, our research offers an Agile Model-Driven Development (MDD) approach that enhances code auto-generation using OpenAI's GPT-4. Our work emphasizes \"Agility\" as a significant contribution to the current MDD method, particularly when the model undergoes changes or needs deployment in a different programming language. Thus, we present a case-study showcasing a multi-agent simulation system of an Unmanned Vehicle Fleet. In the first and second layer of our approach, we constructed a textual representation of the case-study using Unified Model Language (UML) diagrams. In the next layer, we introduced two sets of constraints that minimize model ambiguity. Object Constraints Language (OCL) is",
    "link": "http://arxiv.org/abs/2310.04304",
    "context": "Title: Coding by Design: GPT-4 empowers Agile Model Driven Development. (arXiv:2310.04304v1 [cs.SE])\nAbstract: Generating code from a natural language using Large Language Models (LLMs) such as ChatGPT, seems groundbreaking. Yet, with more extensive use, it's evident that this approach has its own limitations. The inherent ambiguity of natural language presents challenges for complex software designs. Accordingly, our research offers an Agile Model-Driven Development (MDD) approach that enhances code auto-generation using OpenAI's GPT-4. Our work emphasizes \"Agility\" as a significant contribution to the current MDD method, particularly when the model undergoes changes or needs deployment in a different programming language. Thus, we present a case-study showcasing a multi-agent simulation system of an Unmanned Vehicle Fleet. In the first and second layer of our approach, we constructed a textual representation of the case-study using Unified Model Language (UML) diagrams. In the next layer, we introduced two sets of constraints that minimize model ambiguity. Object Constraints Language (OCL) is",
    "path": "papers/23/10/2310.04304.json",
    "total_tokens": 1000,
    "translated_title": "编码设计：GPT-4赋予敏捷模型驱动开发以力量",
    "translated_abstract": "使用大型语言模型（LLM）如ChatGPT从自然语言生成代码似乎是一项开创性的工作。然而，随着更广泛的使用，显然这种方法存在其自身的局限性。自然语言的固有歧义给复杂软件设计带来了挑战。基于此，我们的研究提供了一种增强代码自动生成的敏捷模型驱动开发（MDD）方法，使用OpenAI的GPT-4。我们的工作强调了“敏捷性”作为当前MDD方法的重要贡献，特别是当模型发生变更或需要在不同的编程语言中部署时。因此，我们展示了一个无人车队多智能体仿真系统的案例研究。在我们的方法的第一层和第二层中，我们使用统一建模语言（UML）图形构建了案例研究的文本表示。在接下来的一层中，我们引入了两组约束来减少模型的歧义。对象约束语言（OCL）是其中一组约束，另一组是基于UML序列图的语义约束。",
    "tldr": "本研究提出了一种基于GPT-4的敏捷模型驱动开发（MDD）方法，用于增强代码自动生成。在多智能体仿真系统案例研究中，通过使用统一建模语言（UML）图形和约束语言（OCL），解决了自然语言的歧义性对复杂软件设计的挑战。",
    "en_tdlr": "This research proposes an Agile Model-Driven Development (MDD) approach using GPT-4 to enhance code auto-generation. It addresses the challenges of natural language ambiguity in complex software designs through the use of Unified Modeling Language (UML) diagrams and Object Constraint Language (OCL) in a multi-agent simulation system case study."
}