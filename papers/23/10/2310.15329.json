{
    "title": "Serverless Federated Learning with flwr-serverless. (arXiv:2310.15329v1 [cs.LG])",
    "abstract": "Federated learning is becoming increasingly relevant and popular as we witness a surge in data collection and storage of personally identifiable information. Alongside these developments there have been many proposals from governments around the world to provide more protections for individuals' data and a heightened interest in data privacy measures. As deep learning continues to become more relevant in new and existing domains, it is vital to develop strategies like federated learning that can effectively train data from different sources, such as edge devices, without compromising security and privacy. Recently, the Flower (\\texttt{Flwr}) Python package was introduced to provide a scalable, flexible, and easy-to-use framework for implementing federated learning. However, to date, Flower is only able to run synchronous federated learning which can be costly and time-consuming to run because the process is bottlenecked by client-side training jobs that are slow or fragile. Here, we in",
    "link": "http://arxiv.org/abs/2310.15329",
    "context": "Title: Serverless Federated Learning with flwr-serverless. (arXiv:2310.15329v1 [cs.LG])\nAbstract: Federated learning is becoming increasingly relevant and popular as we witness a surge in data collection and storage of personally identifiable information. Alongside these developments there have been many proposals from governments around the world to provide more protections for individuals' data and a heightened interest in data privacy measures. As deep learning continues to become more relevant in new and existing domains, it is vital to develop strategies like federated learning that can effectively train data from different sources, such as edge devices, without compromising security and privacy. Recently, the Flower (\\texttt{Flwr}) Python package was introduced to provide a scalable, flexible, and easy-to-use framework for implementing federated learning. However, to date, Flower is only able to run synchronous federated learning which can be costly and time-consuming to run because the process is bottlenecked by client-side training jobs that are slow or fragile. Here, we in",
    "path": "papers/23/10/2310.15329.json",
    "total_tokens": 828,
    "translated_title": "使用flwr-serverless的无服务器联邦学习",
    "translated_abstract": "随着数据收集和个人身份信息存储量的激增，联邦学习变得越来越重要和受欢迎。与此同时，世界各国提出了许多关于为个人数据提供更多保护以及对数据隐私措施的强化兴趣的建议。随着深度学习在新的和现有领域的重要性不断增加，开发像联邦学习这样能有效训练来自不同来源（如边缘设备）的数据、同时不损害安全和隐私的策略是至关重要的。最近，引入了名为Flower（Flwr）的Python包，为实现联邦学习提供了可扩展、灵活且易于使用的框架。然而，到目前为止，Flower只能运行同步联邦学习，这可能会导致运行成本高、耗时长，因为过程受限于慢速或不稳定的客户端训练任务。",
    "tldr": "flwr-serverless是一种无服务器联邦学习的方法，能够有效训练来自不同来源的数据，同时不损害安全和隐私。",
    "en_tdlr": "flwr-serverless is a method for serverless federated learning that can effectively train data from different sources without compromising security and privacy."
}