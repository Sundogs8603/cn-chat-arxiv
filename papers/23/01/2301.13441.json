{
    "title": "CMLCompiler: A Unified Compiler for Classical Machine Learning. (arXiv:2301.13441v3 [cs.LG] UPDATED)",
    "abstract": "Classical machine learning (CML) occupies nearly half of machine learning pipelines in production applications. Unfortunately, it fails to utilize the state-of-the-practice devices fully and performs poorly. Without a unified framework, the hybrid deployments of deep learning (DL) and CML also suffer from severe performance and portability issues. This paper presents the design of a unified compiler, called CMLCompiler, for CML inference. We propose two unified abstractions: operator representations and extended computational graphs. The CMLCompiler framework performs the conversion and graph optimization based on two unified abstractions, then outputs an optimized computational graph to DL compilers or frameworks. We implement CMLCompiler on TVM. The evaluation shows CMLCompiler's portability and superior performance. It achieves up to 4.38$\\times$ speedup on CPU, 3.31$\\times$ speedup on GPU, and 5.09$\\times$ speedup on IoT devices, compared to the state-of-the-art solutions -- scikit",
    "link": "http://arxiv.org/abs/2301.13441",
    "context": "Title: CMLCompiler: A Unified Compiler for Classical Machine Learning. (arXiv:2301.13441v3 [cs.LG] UPDATED)\nAbstract: Classical machine learning (CML) occupies nearly half of machine learning pipelines in production applications. Unfortunately, it fails to utilize the state-of-the-practice devices fully and performs poorly. Without a unified framework, the hybrid deployments of deep learning (DL) and CML also suffer from severe performance and portability issues. This paper presents the design of a unified compiler, called CMLCompiler, for CML inference. We propose two unified abstractions: operator representations and extended computational graphs. The CMLCompiler framework performs the conversion and graph optimization based on two unified abstractions, then outputs an optimized computational graph to DL compilers or frameworks. We implement CMLCompiler on TVM. The evaluation shows CMLCompiler's portability and superior performance. It achieves up to 4.38$\\times$ speedup on CPU, 3.31$\\times$ speedup on GPU, and 5.09$\\times$ speedup on IoT devices, compared to the state-of-the-art solutions -- scikit",
    "path": "papers/23/01/2301.13441.json",
    "total_tokens": 1059,
    "translated_title": "CMLCompiler：一个面向经典机器学习的统一编译器",
    "translated_abstract": "经典机器学习（CML）几乎占据了生产应用中近一半的机器学习流程。然而，它未能充分利用最先进的设备，性能表现较差。在没有统一框架的情况下，深度学习（DL）和CML的混合部署也会遇到严重的性能和可移植性问题。本文提出了一种统一的编译器框架CMLCompiler，用于CML推理。我们提出了两种统一的抽象：运算符表示和扩展计算图。CMLCompiler框架基于这两种统一的抽象执行转换和图优化，然后将优化后的计算图输出到DL编译器或框架中。我们在TVM上实现CMLCompiler。评估表明，CMLCompiler具有卓越的可移植性和性能。与最先进的解决方案（scikit-learn，XGBoost等）相比，它在CPU上实现了多达4.38倍的加速，GPU上实现了3.31倍的加速，IoT设备上实现了5.09倍的加速。",
    "tldr": "本文提出了一个名为CMLCompiler的统一编译器框架，用于经典机器学习（CML）推理。通过提出两种统一的抽象：运算符表示和扩展计算图，CMLCompiler框架可以将用于CML的已优化计算图转换并输出到DL编译器或框架中，实现了卓越的可移植性和性能提升。",
    "en_tdlr": "This paper proposes a unified compiler framework called CMLCompiler for classical machine learning (CML) inference. Powered by two unified abstractions - operator representations and extended computational graphs, the framework performs graph conversion and optimization and outputs the optimized computational graph to DL compilers or frameworks, bringing about superior portability and performance improvement compared to state-of-the-art solutions such as scikit-learn and XGBoost, with up to 4.38x speedup on CPU, 3.31x speedup on GPU, and 5.09x speedup on IoT devices."
}