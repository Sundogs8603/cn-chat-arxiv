{
    "title": "Safe-DS: A Domain Specific Language to Make Data Science Safe. (arXiv:2302.14548v2 [cs.SE] UPDATED)",
    "abstract": "Due to the long runtime of Data Science (DS) pipelines, even small programming mistakes can be very costly, if they are not detected statically. However, even basic static type checking of DS pipelines is difficult because most are written in Python. Static typing is available in Python only via external linters. These require static type annotations for parameters or results of functions, which many DS libraries do not provide. In this paper, we show how the wealth of Python DS libraries can be used in a statically safe way via Safe-DS, a domain specific language (DSL) for DS. Safe-DS catches conventional type errors plus errors related to range restrictions, data manipulation, and call order of functions, going well beyond the abilities of current Python linters. Python libraries are integrated into Safe-DS via a stub language for specifying the interface of its declarations, and an API-Editor that is able to extract type information from the code and documentation of Python librarie",
    "link": "http://arxiv.org/abs/2302.14548",
    "context": "Title: Safe-DS: A Domain Specific Language to Make Data Science Safe. (arXiv:2302.14548v2 [cs.SE] UPDATED)\nAbstract: Due to the long runtime of Data Science (DS) pipelines, even small programming mistakes can be very costly, if they are not detected statically. However, even basic static type checking of DS pipelines is difficult because most are written in Python. Static typing is available in Python only via external linters. These require static type annotations for parameters or results of functions, which many DS libraries do not provide. In this paper, we show how the wealth of Python DS libraries can be used in a statically safe way via Safe-DS, a domain specific language (DSL) for DS. Safe-DS catches conventional type errors plus errors related to range restrictions, data manipulation, and call order of functions, going well beyond the abilities of current Python linters. Python libraries are integrated into Safe-DS via a stub language for specifying the interface of its declarations, and an API-Editor that is able to extract type information from the code and documentation of Python librarie",
    "path": "papers/23/02/2302.14548.json",
    "total_tokens": 871,
    "translated_title": "Safe-DS: 一种使数据科学更加安全的领域特定语言",
    "translated_abstract": "数据科学（DS）流水线运行时间较长，即使是小的编程错误，如果不能静态检测到，也可能非常昂贵。但是，由于大多数DS流水线都是用Python编写的，因此即使是基本的静态类型检查也很难。在本文中，我们展示了如何通过Safe-DS，一种面向DS的领域特定语言（DSL），以静态安全的方式使用丰富的Python DS库。Safe-DS可以捕获常规类型错误以及与范围限制、数据处理和函数调用顺序相关的错误，远远超出了当前Python Linters的能力。Python库通过一个存根语言来集成到Safe-DS中，以指定其声明的接口，以及一个能够从Python库的代码和文档中提取类型信息的API编辑器。",
    "tldr": "文章介绍了一种名为Safe-DS的领域特定语言，用于在数据科学中以静态安全的方式运行Python DS库，并可捕获出错的类型，并且拥有比Python Linters更强大的能力。",
    "en_tdlr": "The paper introduces a domain-specific language called Safe-DS for running Python data science libraries in a statically safe way, which can capture errors related to range restrictions, data manipulation, and function call order, and has more powerful abilities than Python Linters. Safe-DS integrates Python libraries through a stub language to specify interface declarations and an API editor that extracts type information from the code and documentation of Python libraries."
}