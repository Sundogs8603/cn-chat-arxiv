{
    "title": "Using Automated Algorithm Configuration for Parameter Control. (arXiv:2302.12334v2 [cs.LG] UPDATED)",
    "abstract": "Dynamic Algorithm Configuration (DAC) tackles the question of how to automatically learn policies to control parameters of algorithms in a data-driven fashion. This question has received considerable attention from the evolutionary community in recent years. Having a good benchmark collection to gain structural understanding on the effectiveness and limitations of different solution methods for DAC is therefore strongly desirable. Following recent work on proposing DAC benchmarks with well-understood theoretical properties and ground truth information, in this work, we suggest as a new DAC benchmark the controlling of the key parameter $\\lambda$ in the $(1+(\\lambda,\\lambda))$~Genetic Algorithm for solving OneMax problems. We conduct a study on how to solve the DAC problem via the use of (static) automated algorithm configuration on the benchmark, and propose techniques to significantly improve the performance of the approach. Our approach is able to consistently outperform the default ",
    "link": "http://arxiv.org/abs/2302.12334",
    "context": "Title: Using Automated Algorithm Configuration for Parameter Control. (arXiv:2302.12334v2 [cs.LG] UPDATED)\nAbstract: Dynamic Algorithm Configuration (DAC) tackles the question of how to automatically learn policies to control parameters of algorithms in a data-driven fashion. This question has received considerable attention from the evolutionary community in recent years. Having a good benchmark collection to gain structural understanding on the effectiveness and limitations of different solution methods for DAC is therefore strongly desirable. Following recent work on proposing DAC benchmarks with well-understood theoretical properties and ground truth information, in this work, we suggest as a new DAC benchmark the controlling of the key parameter $\\lambda$ in the $(1+(\\lambda,\\lambda))$~Genetic Algorithm for solving OneMax problems. We conduct a study on how to solve the DAC problem via the use of (static) automated algorithm configuration on the benchmark, and propose techniques to significantly improve the performance of the approach. Our approach is able to consistently outperform the default ",
    "path": "papers/23/02/2302.12334.json",
    "total_tokens": 764,
    "translated_title": "使用自动算法配置实现参数控制",
    "translated_abstract": "动态算法配置（DAC）通过数据驱动的方式自动学习控制算法参数的策略。最近几年，这个问题在进化社区中受到了相当多的关注。为了对不同DAC解决方法的有效性和限制进行结构性理解，拥有一个好的基准集合是非常有必要的。在最近关于提供具有可理解的理论属性和基准真值信息的DAC基准的工作中，本文建议将关键参数λ的控制作为新的DAC基准，用于解决OneMax问题的(1+(λ,λ))遗传算法。我们对如何通过使用（静态）自动算法配置在基准测试中解决DAC问题进行了研究，并提出了可以显著提高方法性能的技术。我们的方法能够在基准测试中始终优于默认方案。",
    "tldr": "本研究通过自动算法配置来解决参数控制的问题，并提出了能够显著提高方法性能的技术。",
    "en_tdlr": "This study addresses the problem of parameter control using automated algorithm configuration and proposes techniques that significantly improve the performance of the approach."
}