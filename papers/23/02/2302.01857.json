{
    "title": "KNOD: Domain Knowledge Distilled Tree Decoder for Automated Program Repair. (arXiv:2302.01857v3 [cs.SE] UPDATED)",
    "abstract": "Automated Program Repair (APR) improves software reliability by generating patches for a buggy program automatically. Recent APR techniques leverage deep learning (DL) to build models to learn to generate patches from existing patches and code corpora. While promising, DL-based APR techniques suffer from the abundant syntactically or semantically incorrect patches in the patch space. These patches often disobey the syntactic and semantic domain knowledge of source code and thus cannot be the correct patches to fix a bug.  We propose a DL-based APR approach KNOD, which incorporates domain knowledge to guide patch generation in a direct and comprehensive way. KNOD has two major novelties, including (1) a novel three-stage tree decoder, which directly generates Abstract Syntax Trees of patched code according to the inherent tree structure, and (2) a novel domain-rule distillation, which leverages syntactic and semantic rules and teacher-student distributions to explicitly inject the domai",
    "link": "http://arxiv.org/abs/2302.01857",
    "context": "Title: KNOD: Domain Knowledge Distilled Tree Decoder for Automated Program Repair. (arXiv:2302.01857v3 [cs.SE] UPDATED)\nAbstract: Automated Program Repair (APR) improves software reliability by generating patches for a buggy program automatically. Recent APR techniques leverage deep learning (DL) to build models to learn to generate patches from existing patches and code corpora. While promising, DL-based APR techniques suffer from the abundant syntactically or semantically incorrect patches in the patch space. These patches often disobey the syntactic and semantic domain knowledge of source code and thus cannot be the correct patches to fix a bug.  We propose a DL-based APR approach KNOD, which incorporates domain knowledge to guide patch generation in a direct and comprehensive way. KNOD has two major novelties, including (1) a novel three-stage tree decoder, which directly generates Abstract Syntax Trees of patched code according to the inherent tree structure, and (2) a novel domain-rule distillation, which leverages syntactic and semantic rules and teacher-student distributions to explicitly inject the domai",
    "path": "papers/23/02/2302.01857.json",
    "total_tokens": 890,
    "translated_title": "KNOD：领域知识提取树解码器用于自动程序修复",
    "translated_abstract": "自动程序修复（APR）通过自动生成一个有问题程序的补丁来提高软件可靠性。近期的APR技术利用深度学习（DL）构建模型，从现有的代码库中学习生成补丁。然而，基于DL的APR技术在补丁空间中存在大量语法或语义不正确的补丁，这些补丁违反了源代码的语法和语义领域知识，因此不能成为修复错误的正确补丁。我们提出了一种DL-based APR方法KNOD，它采用直接和全面的方法将领域知识纳入到补丁生成中。KNOD有两个主要创新点，包括（1）一种新颖的三阶段树解码器，根据内在的树结构直接生成修补程序的抽象语法树，以及（2）一种新颖的领域规则提取方法，利用语法和语义规则以及教师-学生分布显式注入领域知识。",
    "tldr": "KNOD是一种用于自动程序修复的DL-based APR方法。它利用领域知识在补丁生成中指导修复过程，具有一种新颖的三阶段树解码器和领域规则提取方法。",
    "en_tdlr": "KNOD is a DL-based APR approach for automated program repair that incorporates domain knowledge to guide patch generation. It features a novel three-stage tree decoder and domain-rule distillation methods."
}