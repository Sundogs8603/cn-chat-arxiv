{
    "title": "Perfect is the enemy of test oracle. (arXiv:2302.01488v2 [cs.SE] UPDATED)",
    "abstract": "Automation of test oracles is one of the most challenging facets of software testing, but remains comparatively less addressed compared to automated test input generation. Test oracles rely on a ground-truth that can distinguish between the correct and buggy behavior to determine whether a test fails (detects a bug) or passes. What makes the oracle problem challenging and undecidable is the assumption that the ground-truth should know the exact expected, correct, or buggy behavior. However, we argue that one can still build an accurate oracle without knowing the exact correct or buggy behavior, but how these two might differ. This paper presents SEER, a learning-based approach that in the absence of test assertions or other types of oracle, can determine whether a unit test passes or fails on a given method under test (MUT). To build the ground-truth, SEER jointly embeds unit tests and the implementation of MUTs into a unified vector space, in such a way that the neural representation ",
    "link": "http://arxiv.org/abs/2302.01488",
    "context": "Title: Perfect is the enemy of test oracle. (arXiv:2302.01488v2 [cs.SE] UPDATED)\nAbstract: Automation of test oracles is one of the most challenging facets of software testing, but remains comparatively less addressed compared to automated test input generation. Test oracles rely on a ground-truth that can distinguish between the correct and buggy behavior to determine whether a test fails (detects a bug) or passes. What makes the oracle problem challenging and undecidable is the assumption that the ground-truth should know the exact expected, correct, or buggy behavior. However, we argue that one can still build an accurate oracle without knowing the exact correct or buggy behavior, but how these two might differ. This paper presents SEER, a learning-based approach that in the absence of test assertions or other types of oracle, can determine whether a unit test passes or fails on a given method under test (MUT). To build the ground-truth, SEER jointly embeds unit tests and the implementation of MUTs into a unified vector space, in such a way that the neural representation ",
    "path": "papers/23/02/2302.01488.json",
    "total_tokens": 884,
    "translated_title": "完美主义是测试Oracle的敌人",
    "translated_abstract": "自动化测试Oracle是软件测试中最具挑战性的方面之一，但与自动化测试输入生成相比，仍然受到相对较少的关注。测试Oracle依赖于可以区分正确行为和错误行为的基础真相来确定测试是否失败（检测到错误）或通过。让Oracle问题具有挑战性和不可决定性的是假设这个基础真相需要知道正确行为或错误行为的确切期望。然而，我们认为即使不知道确切的正确或错误行为如何不同，仍然可以构建准确的Oracle。本文提出了SEER，一种基于学习的方法，用于在缺乏测试断言或其他类型的Oracle的情况下，确定在给定的测试方法下单元测试是否通过或失败。为了建立基础真相，SEER将单元测试和MUTs的实现联合嵌入到一个统一的向量空间中，使神经表示方式具有区分单元测试结果的能力。",
    "tldr": "本文提出了一种学习方法 SEER，该方法可以在缺乏测试断言或其他类型的测试Oracle的情况下确定单元测试是否通过或失败，并且可以构建准确的Oracle而不需要知道正确或错误行为的确切期望。"
}