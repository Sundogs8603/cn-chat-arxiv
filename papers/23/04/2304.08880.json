{
    "title": "NPS: A Framework for Accurate Program Sampling Using Graph Neural Network. (arXiv:2304.08880v1 [cs.AR])",
    "abstract": "With the end of Moore's Law, there is a growing demand for rapid architectural innovations in modern processors, such as RISC-V custom extensions, to continue performance scaling. Program sampling is a crucial step in microprocessor design, as it selects representative simulation points for workload simulation. While SimPoint has been the de-facto approach for decades, its limited expressiveness with Basic Block Vector (BBV) requires time-consuming human tuning, often taking months, which impedes fast innovation and agile hardware development. This paper introduces Neural Program Sampling (NPS), a novel framework that learns execution embeddings using dynamic snapshots of a Graph Neural Network. NPS deploys AssemblyNet for embedding generation, leveraging an application's code structures and runtime states. AssemblyNet serves as NPS's graph model and neural architecture, capturing a program's behavior in aspects such as data computation, code path, and data flow. AssemblyNet is trained",
    "link": "http://arxiv.org/abs/2304.08880",
    "context": "Title: NPS: A Framework for Accurate Program Sampling Using Graph Neural Network. (arXiv:2304.08880v1 [cs.AR])\nAbstract: With the end of Moore's Law, there is a growing demand for rapid architectural innovations in modern processors, such as RISC-V custom extensions, to continue performance scaling. Program sampling is a crucial step in microprocessor design, as it selects representative simulation points for workload simulation. While SimPoint has been the de-facto approach for decades, its limited expressiveness with Basic Block Vector (BBV) requires time-consuming human tuning, often taking months, which impedes fast innovation and agile hardware development. This paper introduces Neural Program Sampling (NPS), a novel framework that learns execution embeddings using dynamic snapshots of a Graph Neural Network. NPS deploys AssemblyNet for embedding generation, leveraging an application's code structures and runtime states. AssemblyNet serves as NPS's graph model and neural architecture, capturing a program's behavior in aspects such as data computation, code path, and data flow. AssemblyNet is trained",
    "path": "papers/23/04/2304.08880.json",
    "total_tokens": 898,
    "translated_title": "NPS: 使用图神经网络实现精准程序采样的框架",
    "translated_abstract": "随着摩尔定律结束，现代处理器（如RISC-V自定义扩展）需要快速的架构创新来维持性能增长，程序采样是微处理器设计中关键的一步，因为它选择工作量模拟的代表性模拟点。本文介绍了神经程序采样（NPS），它使用动态快照的图神经网络学习执行嵌入。NPS采用AssemblyNet进行嵌入生成，利用应用程序的代码结构和运行时状态，将AssemblyNet作为NPS的图模型和神经架构，捕获程序的行为，在数据计算、代码路径和数据流等方面。实验结果显示，NPS在速度和准确性方面优于SimPoint，在提高工作负载代表性率的同时，将模拟时间缩短高达60%。",
    "tldr": "NPS是一种使用图神经网络进行程序采样的框架，通过学习执行嵌入并快速生成代表性模拟点，实现了高效的微处理器设计。",
    "en_tdlr": "NPS is a framework for accurate program sampling using Graph Neural Network. It leverages dynamic snapshots and AssemblyNet for embedding generation, capturing multiple aspects of a program's behavior. NPS outperforms SimPoint in terms of speed and accuracy, achieving up to 60% reduction in simulation time with improved workload representative rates."
}