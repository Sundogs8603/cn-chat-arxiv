{
    "title": "Low-code LLM: Visual Programming over LLMs. (arXiv:2304.08103v2 [cs.CL] UPDATED)",
    "abstract": "Effectively utilizing LLMs for complex tasks is challenging, often involving a time-consuming and uncontrollable prompt engineering process. This paper introduces a novel human-LLM interaction framework, Low-code LLM. It incorporates six types of simple low-code visual programming interactions, all supported by clicking, dragging, or text editing, to achieve more controllable and stable responses. Through visual interaction with a graphical user interface, users can incorporate their ideas into the workflow without writing trivial prompts. The proposed Low-code LLM framework consists of a Planning LLM that designs a structured planning workflow for complex tasks, which can be correspondingly edited and confirmed by users through low-code visual programming operations, and an Executing LLM that generates responses following the user-confirmed workflow. We highlight three advantages of the low-code LLM: controllable generation results, user-friendly human-LLM interaction, and broadly app",
    "link": "http://arxiv.org/abs/2304.08103",
    "context": "Title: Low-code LLM: Visual Programming over LLMs. (arXiv:2304.08103v2 [cs.CL] UPDATED)\nAbstract: Effectively utilizing LLMs for complex tasks is challenging, often involving a time-consuming and uncontrollable prompt engineering process. This paper introduces a novel human-LLM interaction framework, Low-code LLM. It incorporates six types of simple low-code visual programming interactions, all supported by clicking, dragging, or text editing, to achieve more controllable and stable responses. Through visual interaction with a graphical user interface, users can incorporate their ideas into the workflow without writing trivial prompts. The proposed Low-code LLM framework consists of a Planning LLM that designs a structured planning workflow for complex tasks, which can be correspondingly edited and confirmed by users through low-code visual programming operations, and an Executing LLM that generates responses following the user-confirmed workflow. We highlight three advantages of the low-code LLM: controllable generation results, user-friendly human-LLM interaction, and broadly app",
    "path": "papers/23/04/2304.08103.json",
    "total_tokens": 930,
    "translated_title": "低代码LLM：LLM上的可视化编程",
    "translated_abstract": "有效地利用LLM来完成复杂任务非常具有挑战性，通常需要进行耗时而难以掌控的提示工程处理过程。本文提出了一种新颖的人-LLM交互框架，即低代码LLM。它包括六种类型的简单低代码可视化编程交互，全部支持点击、拖放或文本编辑，以实现更可控和稳定的响应。通过与图形用户界面的视觉交互，用户可以将其想法纳入工作流程，而不必编写琐碎的提示。提出的低代码LLM框架由规划LLM和执行LLM两部分组成，规划LLM为复杂任务设计了一个结构化的规划工作流程，用户可以通过低代码可视化编程操作相应地进行编辑和确认，而执行LLM则按照用户确认的工作流程生成响应。我们强调低代码LLM的三个优点：可控的生成结果、用户友好的人-LLM交互以及广泛的应用。",
    "tldr": "本文介绍了一种新颖的人-LLM交互框架，低代码LLM，该框架可通过六种类型的简单低代码可视化编程交互实现更可控和稳定的响应，具有可控性强、用户友好的交互方式和广泛的应用范围的优点。",
    "en_tdlr": "This paper proposes a novel human-LLM interaction framework, Low-code LLM, which incorporates six types of simple low-code visual programming interactions to achieve more controllable and stable responses. The advantages of Low-code LLM include controllable generation results, user-friendly human-LLM interaction, and broad application scope."
}