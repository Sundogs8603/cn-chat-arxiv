{
    "title": "An autoencoder compression approach for accelerating large-scale inverse problems. (arXiv:2304.04781v1 [math.NA])",
    "abstract": "PDE-constrained inverse problems are some of the most challenging and computationally demanding problems in computational science today. Fine meshes that are required to accurately compute the PDE solution introduce an enormous number of parameters and require large scale computing resources such as more processors and more memory to solve such systems in a reasonable time. For inverse problems constrained by time dependent PDEs, the adjoint method that is often employed to efficiently compute gradients and higher order derivatives requires solving a time-reversed, so-called adjoint PDE that depends on the forward PDE solution at each timestep. This necessitates the storage of a high dimensional forward solution vector at every timestep. Such a procedure quickly exhausts the available memory resources. Several approaches that trade additional computation for reduced memory footprint have been proposed to mitigate the memory bottleneck, including checkpointing and compression strategies",
    "link": "http://arxiv.org/abs/2304.04781",
    "context": "Title: An autoencoder compression approach for accelerating large-scale inverse problems. (arXiv:2304.04781v1 [math.NA])\nAbstract: PDE-constrained inverse problems are some of the most challenging and computationally demanding problems in computational science today. Fine meshes that are required to accurately compute the PDE solution introduce an enormous number of parameters and require large scale computing resources such as more processors and more memory to solve such systems in a reasonable time. For inverse problems constrained by time dependent PDEs, the adjoint method that is often employed to efficiently compute gradients and higher order derivatives requires solving a time-reversed, so-called adjoint PDE that depends on the forward PDE solution at each timestep. This necessitates the storage of a high dimensional forward solution vector at every timestep. Such a procedure quickly exhausts the available memory resources. Several approaches that trade additional computation for reduced memory footprint have been proposed to mitigate the memory bottleneck, including checkpointing and compression strategies",
    "path": "papers/23/04/2304.04781.json",
    "total_tokens": 815,
    "translated_title": "一种自编码器压缩方法加速大规模逆问题求解",
    "translated_abstract": "PDE约束的逆问题是当今计算科学中最具挑战性和计算密集型的问题之一。为了精确计算PDE解，需要细微的网格，这引入了大量参数，并需要大规模的计算资源，如更多的处理器和更多的内存来在合理的时间内解决这些系统。为了高效地计算梯度和高阶导数，通常采用伴随方法来限制由时间演化的PDE约束的逆问题，该方法要求在每个时间步骤上求解一个时间反演的伴随PDE，该伴随PDE依赖于前向PDE解。这需要在每个时间步长上存储一个高维度的前向解向量。这种过程快速耗尽了可用的内存资源。已经提出了几种手段，如检查点和压缩策略，以降低内存瓶颈的影响并且换取了额外的计算。",
    "tldr": "通过自编码器压缩策略来加速计算PDE约束的逆问题，降低了内存瓶颈的影响。",
    "en_tdlr": "An autoencoder compression strategy is proposed to accelerate the computation of PDE-constrained inverse problems, which mitigates the memory bottleneck by reducing the high dimensional storage requirements through compression."
}