{
    "title": "Neuro-Symbolic Execution of Generic Source Code. (arXiv:2304.00989v2 [cs.AI] UPDATED)",
    "abstract": "Can a Python program be executed statement-by-statement by neural networks composed according to the source code? We formulate the Neuro-Symbolic Execution Problem and introduce Neural Interpretation (NI), the first neural model for the execution of generic source code that allows missing definitions. NI preserves source code structure, where every variable has a vector encoding, and every function executes a neural network. NI is a novel neural model of computers with a compiler architecture that can assemble neural layers \"programmed\" by source code. NI is the first neural model capable of executing Py150 dataset programs, including library functions without concrete inputs, and it can be trained with flexible code understanding objectives. We demonstrate white-box execution without concrete inputs for variable misuse localization and repair.",
    "link": "http://arxiv.org/abs/2304.00989",
    "context": "Title: Neuro-Symbolic Execution of Generic Source Code. (arXiv:2304.00989v2 [cs.AI] UPDATED)\nAbstract: Can a Python program be executed statement-by-statement by neural networks composed according to the source code? We formulate the Neuro-Symbolic Execution Problem and introduce Neural Interpretation (NI), the first neural model for the execution of generic source code that allows missing definitions. NI preserves source code structure, where every variable has a vector encoding, and every function executes a neural network. NI is a novel neural model of computers with a compiler architecture that can assemble neural layers \"programmed\" by source code. NI is the first neural model capable of executing Py150 dataset programs, including library functions without concrete inputs, and it can be trained with flexible code understanding objectives. We demonstrate white-box execution without concrete inputs for variable misuse localization and repair.",
    "path": "papers/23/04/2304.00989.json",
    "total_tokens": 795,
    "translated_title": "泛型源代码的神经符号执行",
    "translated_abstract": "能否使用根据源代码组合而成的神经网络逐语句执行Python程序？我们提出了神经符号执行问题，并引入了神经解释（Neural Interpretation，NI），这是第一个能够按照源代码执行泛型源代码的神经模型，允许缺失定义。NI保留源代码结构，其中每个变量都有一个向量编码，每个函数执行一个神经网络。NI是一种新颖的神经计算机模型，具有编译器架构，可以组装由源代码“编程”的神经层。NI是第一个能够执行Py150数据集程序的神经模型，包括没有具体输入的库函数，并且可以根据灵活的代码理解目标进行训练。我们展示了针对变量误用定位和修复的无具体输入的白盒执行。",
    "tldr": "这项研究提出了一种新的神经模型，能够根据源代码执行泛型程序，并引入了神经符号执行问题。该模型能够执行Py150数据集程序，包括没有具体输入的库函数，并可以用于变量误用定位和修复。"
}