{
    "title": "HOTGP -- Higher-Order Typed Genetic Programming. (arXiv:2304.03200v1 [cs.NE])",
    "abstract": "Program synthesis is the process of generating a computer program following a set of specifications, which can be a high-level description of the problem and/or a set of input-output examples. The synthesis can be modeled as a search problem in which the search space is the set of all the programs valid under a grammar. As the search space is vast, brute force is usually not viable and search heuristics, such as genetic programming, also have difficulty navigating it without any guidance. In this paper we present HOTGP, a new genetic programming algorithm that synthesizes pure, typed, and functional programs. HOTGP leverages the knowledge provided by the rich data-types associated with the specification and the built-in grammar to constrain the search space and improve the performance of the synthesis. The grammar is based on Haskell's standard base library (the synthesized code can be directly compiled using any standard Haskell compiler) and includes support for higher-order function",
    "link": "http://arxiv.org/abs/2304.03200",
    "context": "Title: HOTGP -- Higher-Order Typed Genetic Programming. (arXiv:2304.03200v1 [cs.NE])\nAbstract: Program synthesis is the process of generating a computer program following a set of specifications, which can be a high-level description of the problem and/or a set of input-output examples. The synthesis can be modeled as a search problem in which the search space is the set of all the programs valid under a grammar. As the search space is vast, brute force is usually not viable and search heuristics, such as genetic programming, also have difficulty navigating it without any guidance. In this paper we present HOTGP, a new genetic programming algorithm that synthesizes pure, typed, and functional programs. HOTGP leverages the knowledge provided by the rich data-types associated with the specification and the built-in grammar to constrain the search space and improve the performance of the synthesis. The grammar is based on Haskell's standard base library (the synthesized code can be directly compiled using any standard Haskell compiler) and includes support for higher-order function",
    "path": "papers/23/04/2304.03200.json",
    "total_tokens": 838,
    "translated_title": "HOTGP —— 高阶类型遗传程序设计",
    "translated_abstract": "程序合成是根据一组规范生成计算机程序的过程，规范可以是问题的高级描述和/或一组输入-输出示例。 合成可以建模为一个搜索问题，其中搜索空间是语法下的所有有效程序集。 由于搜索空间非常广泛，因此暴力搜索通常不可行，而搜索启发式算法（例如遗传编程）也难以在没有任何指导的情况下导航搜索空间。 本文介绍了 HOTGP，这是一种新的遗传编程算法，可合成纯、类型和函数程序。 HOTGP利用规范相关的丰富数据类型和内置语法提供的知识来限制搜索空间并改善合成的性能。 语法基于 Haskell 的标准基础库（合成代码可以直接使用任何标准 Haskell 编译器进行编译），并包括对高阶函数的支持。",
    "tldr": "HOTGP 是一种新的遗传编程算法，可合成纯、类型和函数程序。它利用规范相关的丰富数据类型和内置语法提供的知识来限制搜索空间并改善合成的性能",
    "en_tdlr": "HOTGP is a new genetic programming algorithm that synthesizes pure, typed, and functional programs. It leverages the knowledge provided by the rich data-types associated with the specification and the built-in grammar to constrain the search space and improve the performance of the synthesis."
}