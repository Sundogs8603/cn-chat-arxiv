{
    "title": "Scallop: A Language for Neurosymbolic Programming. (arXiv:2304.04812v1 [cs.PL])",
    "abstract": "We present Scallop, a language which combines the benefits of deep learning and logical reasoning. Scallop enables users to write a wide range of neurosymbolic applications and train them in a data- and compute-efficient manner. It achieves these goals through three key features: 1) a flexible symbolic representation that is based on the relational data model; 2) a declarative logic programming language that is based on Datalog and supports recursion, aggregation, and negation; and 3) a framework for automatic and efficient differentiable reasoning that is based on the theory of provenance semirings. We evaluate Scallop on a suite of eight neurosymbolic applications from the literature. Our evaluation demonstrates that Scallop is capable of expressing algorithmic reasoning in diverse and challenging AI tasks, provides a succinct interface for machine learning programmers to integrate logical domain knowledge, and yields solutions that are comparable or superior to state-of-the-art mode",
    "link": "http://arxiv.org/abs/2304.04812",
    "context": "Title: Scallop: A Language for Neurosymbolic Programming. (arXiv:2304.04812v1 [cs.PL])\nAbstract: We present Scallop, a language which combines the benefits of deep learning and logical reasoning. Scallop enables users to write a wide range of neurosymbolic applications and train them in a data- and compute-efficient manner. It achieves these goals through three key features: 1) a flexible symbolic representation that is based on the relational data model; 2) a declarative logic programming language that is based on Datalog and supports recursion, aggregation, and negation; and 3) a framework for automatic and efficient differentiable reasoning that is based on the theory of provenance semirings. We evaluate Scallop on a suite of eight neurosymbolic applications from the literature. Our evaluation demonstrates that Scallop is capable of expressing algorithmic reasoning in diverse and challenging AI tasks, provides a succinct interface for machine learning programmers to integrate logical domain knowledge, and yields solutions that are comparable or superior to state-of-the-art mode",
    "path": "papers/23/04/2304.04812.json",
    "total_tokens": 966,
    "translated_title": "Scallop: 一种神经符号编程语言",
    "translated_abstract": "我们提出了 Scallop，这是一种结合了深度学习和逻辑推理优点的语言。通过三个关键特性，Scallop 启用用户编写广泛的神经符号应用程序并以数据和计算有效的方式训练它们。这三个关键特性包括：1）基于关系数据模型的灵活符号表示；2）基于 Datalog 的声明性逻辑编程语言，支持递归、聚合和否定；3）基于证明半环理论的自动高效可微推理框架。我们在文献中的八种神经符号应用程序套件上评估 Scallop。我们的评估表明，Scallop 能够在多样化和具有挑战性的 AI 任务中表达算法推理，为机器学习程序员提供简洁的接口以融合逻辑领域知识，并提供可与最先进的模型相媲美或更高的解决方案。",
    "tldr": "Scallop是一种能够同时利用深度学习和逻辑推理优点的神经符号编程语言，它能够以数据和计算有效的方式训练神经符号应用程序，通过它可在AI任务中表达算法推理并融合逻辑领域知识，其解决方案可与最先进的模型相媲美或更高。"
}