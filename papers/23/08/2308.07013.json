{
    "title": "Learning to Optimize LSM-trees: Towards A Reinforcement Learning based Key-Value Store for Dynamic Workloads. (arXiv:2308.07013v2 [cs.DB] UPDATED)",
    "abstract": "LSM-trees are widely adopted as the storage backend of key-value stores. However, optimizing the system performance under dynamic workloads has not been sufficiently studied or evaluated in previous work. To fill the gap, we present RusKey, a key-value store with the following new features: (1) RusKey is a first attempt to orchestrate LSM-tree structures online to enable robust performance under the context of dynamic workloads; (2) RusKey is the first study to use Reinforcement Learning (RL) to guide LSM-tree transformations; (3) RusKey includes a new LSM-tree design, named FLSM-tree, for an efficient transition between different compaction policies -- the bottleneck of dynamic key-value stores. We justify the superiority of the new design with theoretical analysis; (4) RusKey requires no prior workload knowledge for system adjustment, in contrast to state-of-the-art techniques. Experiments show that RusKey exhibits strong performance robustness in diverse workloads, achieving up to 4",
    "link": "http://arxiv.org/abs/2308.07013",
    "context": "Title: Learning to Optimize LSM-trees: Towards A Reinforcement Learning based Key-Value Store for Dynamic Workloads. (arXiv:2308.07013v2 [cs.DB] UPDATED)\nAbstract: LSM-trees are widely adopted as the storage backend of key-value stores. However, optimizing the system performance under dynamic workloads has not been sufficiently studied or evaluated in previous work. To fill the gap, we present RusKey, a key-value store with the following new features: (1) RusKey is a first attempt to orchestrate LSM-tree structures online to enable robust performance under the context of dynamic workloads; (2) RusKey is the first study to use Reinforcement Learning (RL) to guide LSM-tree transformations; (3) RusKey includes a new LSM-tree design, named FLSM-tree, for an efficient transition between different compaction policies -- the bottleneck of dynamic key-value stores. We justify the superiority of the new design with theoretical analysis; (4) RusKey requires no prior workload knowledge for system adjustment, in contrast to state-of-the-art techniques. Experiments show that RusKey exhibits strong performance robustness in diverse workloads, achieving up to 4",
    "path": "papers/23/08/2308.07013.json",
    "total_tokens": 979,
    "translated_title": "学习优化LSM树：面向动态工作负载的基于强化学习的键值存储系统",
    "translated_abstract": "LSM树被广泛应用于键值存储的存储后端。然而，在动态工作负载下优化系统性能的问题在以前的工作中尚未得到充分研究或评估。为了填补这一空白，我们提出了RusKey，一个具有以下新特性的键值存储：（1）RusKey是第一个尝试在线编排LSM树结构，以实现在动态工作负载情况下的稳健性能；（2）RusKey是第一个使用强化学习（RL）来引导LSM树转换的研究；（3）RusKey包括一种新的LSM树设计，称为FLSM树，用于在不同的压实策略之间实现高效转换，这是动态键值存储的瓶颈。我们通过理论分析证明了新设计的优越性；（4）与最先进的技术相比，RusKey不需要先验的工作负载知识进行系统调整。实验证明，RusKey在多样的工作负载中表现出强大的性能稳健性，最高可达4倍的性能。",
    "tldr": "RusKey是一个基于强化学习的键值存储系统，通过在线编排LSM树结构来实现在动态工作负载下的稳健性能，并引入了FLSM树设计来高效转换不同压实策略，无需先验工作负载知识。",
    "en_tdlr": "RusKey is a reinforcement learning-based key-value store that achieves robust performance under dynamic workloads by orchestrating LSM-tree structures online and introduces the FLSM-tree design for efficient transition between different compaction policies, without requiring prior workload knowledge."
}