{
    "title": "Minwise-Independent Permutations with Insertion and Deletion of Features. (arXiv:2308.11240v1 [cs.LG])",
    "abstract": "In their seminal work, Broder \\textit{et. al.}~\\citep{BroderCFM98} introduces the $\\mathrm{minHash}$ algorithm that computes a low-dimensional sketch of high-dimensional binary data that closely approximates pairwise Jaccard similarity. Since its invention, $\\mathrm{minHash}$ has been commonly used by practitioners in various big data applications. Further, the data is dynamic in many real-life scenarios, and their feature sets evolve over time. We consider the case when features are dynamically inserted and deleted in the dataset. We note that a naive solution to this problem is to repeatedly recompute $\\mathrm{minHash}$ with respect to the updated dimension. However, this is an expensive task as it requires generating fresh random permutations. To the best of our knowledge, no systematic study of $\\mathrm{minHash}$ is recorded in the context of dynamic insertion and deletion of features. In this work, we initiate this study and suggest algorithms that make the $\\mathrm{minHash}$ sket",
    "link": "http://arxiv.org/abs/2308.11240",
    "context": "Title: Minwise-Independent Permutations with Insertion and Deletion of Features. (arXiv:2308.11240v1 [cs.LG])\nAbstract: In their seminal work, Broder \\textit{et. al.}~\\citep{BroderCFM98} introduces the $\\mathrm{minHash}$ algorithm that computes a low-dimensional sketch of high-dimensional binary data that closely approximates pairwise Jaccard similarity. Since its invention, $\\mathrm{minHash}$ has been commonly used by practitioners in various big data applications. Further, the data is dynamic in many real-life scenarios, and their feature sets evolve over time. We consider the case when features are dynamically inserted and deleted in the dataset. We note that a naive solution to this problem is to repeatedly recompute $\\mathrm{minHash}$ with respect to the updated dimension. However, this is an expensive task as it requires generating fresh random permutations. To the best of our knowledge, no systematic study of $\\mathrm{minHash}$ is recorded in the context of dynamic insertion and deletion of features. In this work, we initiate this study and suggest algorithms that make the $\\mathrm{minHash}$ sket",
    "path": "papers/23/08/2308.11240.json",
    "total_tokens": 864,
    "translated_title": "具有特征插入和删除的最小不相关置换",
    "translated_abstract": "在他们的开创性工作中，Broder等人引入了minHash算法，该算法计算高维二进制数据的低维草图，可以近似地衡量Jaccard相似性。自从它的发明以来，minHash已经在各种大数据应用中被从业者普遍使用。此外，在许多实际场景中，数据是动态的，其特征集会随时间而演变。我们考虑到当特征在数据集中动态插入和删除的情况。我们注意到，这个问题的一个简单解决方案是针对更新的维度重复计算minHash。然而，这是一个昂贵的任务，因为它需要生成新的随机置换。据我们所知，在特征的动态插入和删除的情况下，没有关于minHash的系统研究记录。在这项工作中，我们开始了这项研究，并提出了使minHash草图适应动态插入和删除的算法。",
    "tldr": "这项研究介绍了一种针对动态插入和删除特征的minHash算法，用于近似测量高维二进制数据的Jaccard相似度。",
    "en_tdlr": "This study introduces a minHash algorithm for dynamically inserting and deleting features, which approximates pairwise Jaccard similarity of high-dimensional binary data."
}