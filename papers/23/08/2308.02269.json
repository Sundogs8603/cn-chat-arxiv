{
    "title": "Optimally Computing Compressed Indexing Arrays Based on the Compact Directed Acyclic Word Graph. (arXiv:2308.02269v1 [cs.DS])",
    "abstract": "In this paper, we present the first study of the computational complexity of converting an automata-based text index structure, called the Compact Directed Acyclic Word Graph (CDAWG), of size $e$ for a text $T$ of length $n$ into other text indexing structures for the same text, suitable for highly repetitive texts: the run-length BWT of size $r$, the irreducible PLCP array of size $r$, and the quasi-irreducible LPF array of size $e$, as well as the lex-parse of size $O(r)$ and the LZ77-parse of size $z$, where $r, z \\le e$. As main results, we showed that the above structures can be optimally computed from either the CDAWG for $T$ stored in read-only memory or its self-index version of size $e$ without a text in $O(e)$ worst-case time and words of working space. To obtain the above results, we devised techniques for enumerating a particular subset of suffixes in the lexicographic and text orders using the forward and backward search on the CDAWG by extending the results by Belazzougui",
    "link": "http://arxiv.org/abs/2308.02269",
    "context": "Title: Optimally Computing Compressed Indexing Arrays Based on the Compact Directed Acyclic Word Graph. (arXiv:2308.02269v1 [cs.DS])\nAbstract: In this paper, we present the first study of the computational complexity of converting an automata-based text index structure, called the Compact Directed Acyclic Word Graph (CDAWG), of size $e$ for a text $T$ of length $n$ into other text indexing structures for the same text, suitable for highly repetitive texts: the run-length BWT of size $r$, the irreducible PLCP array of size $r$, and the quasi-irreducible LPF array of size $e$, as well as the lex-parse of size $O(r)$ and the LZ77-parse of size $z$, where $r, z \\le e$. As main results, we showed that the above structures can be optimally computed from either the CDAWG for $T$ stored in read-only memory or its self-index version of size $e$ without a text in $O(e)$ worst-case time and words of working space. To obtain the above results, we devised techniques for enumerating a particular subset of suffixes in the lexicographic and text orders using the forward and backward search on the CDAWG by extending the results by Belazzougui",
    "path": "papers/23/08/2308.02269.json",
    "total_tokens": 955,
    "translated_title": "基于紧凑的有向无环词图进行压缩索引数组的最优计算",
    "translated_abstract": "本文首次研究了将基于自动机的文本索引结构（称为紧凑的有向无环词图，CDAWG）大小为$e$的文本$T$的计算复杂性，转换成适用于高度重复文本的其他文本索引结构的情况：大小为$r$的经过运行长度编码的BWT、大小为$r$的不可约PLCP数组、大小为$e$的准不可约LPF数组，以及大小为$O(r)$的lex解析和大小为$z$的LZ77解析，其中$r, z \\le e$。作为主要结果，我们证明了上述结构可以通过从只读存储器中的CDAWG或其大小为$e$的自索引版本中最优地计算得到，计算时间为$O(e)$，工作空间为字长。为了获得上述结果，我们设计了在CDAWG上通过正向和反向搜索来枚举词典和文本顺序中特定后缀子集的技术，扩展了Belazzougui的结果。",
    "tldr": "本文研究了将紧凑的有向无环词图（CDAWG）转换成其他适用于高度重复文本的文本索引结构的计算复杂性，并提出了优化计算方法，为这些转换提供了最优的时间和空间复杂度。"
}