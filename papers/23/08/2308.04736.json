{
    "title": "Case Study: Using AI-Assisted Code Generation In Mobile Teams. (arXiv:2308.04736v1 [cs.SE])",
    "abstract": "The aim of this study is to evaluate the performance of AI-assisted programming in actual mobile development teams that are focused on native mobile languages like Kotlin and Swift. The extensive case study involves 16 participants and 2 technical reviewers, from a software development department designed to understand the impact of using LLMs trained for code generation in specific phases of the team, more specifically, technical onboarding and technical stack switch. The study uses technical problems dedicated to each phase and requests solutions from the participants with and without using AI-Code generators. It measures time, correctness, and technical integration using ReviewerScore, a metric specific to the paper and extracted from actual industry standards, the code reviewers of merge requests. The output is converted and analyzed together with feedback from the participants in an attempt to determine if using AI-assisted programming tools will have an impact on getting develope",
    "link": "http://arxiv.org/abs/2308.04736",
    "context": "Title: Case Study: Using AI-Assisted Code Generation In Mobile Teams. (arXiv:2308.04736v1 [cs.SE])\nAbstract: The aim of this study is to evaluate the performance of AI-assisted programming in actual mobile development teams that are focused on native mobile languages like Kotlin and Swift. The extensive case study involves 16 participants and 2 technical reviewers, from a software development department designed to understand the impact of using LLMs trained for code generation in specific phases of the team, more specifically, technical onboarding and technical stack switch. The study uses technical problems dedicated to each phase and requests solutions from the participants with and without using AI-Code generators. It measures time, correctness, and technical integration using ReviewerScore, a metric specific to the paper and extracted from actual industry standards, the code reviewers of merge requests. The output is converted and analyzed together with feedback from the participants in an attempt to determine if using AI-assisted programming tools will have an impact on getting develope",
    "path": "papers/23/08/2308.04736.json",
    "total_tokens": 976,
    "translated_title": "案例研究：在移动团队中使用AI辅助代码生成",
    "translated_abstract": "本研究旨在评估在专注于Kotlin和Swift等原生移动语言的实际移动开发团队中使用AI辅助编程的性能。这个广泛的案例研究涉及16名参与者和2名技术评审人员，来自一个软件开发部门，旨在了解在团队的特定阶段中使用针对代码生成进行训练的LLMs的影响，更具体地说是技术入职和技术堆栈切换。研究使用针对每个阶段的技术问题，并要求参与者使用和不使用AI-Code生成器提供解决方案。它通过ReviewerScore这一特定于本论文的度量标准，以及从实际行业标准（合并请求的代码评审人员）中提取的度量时间、正确性和技术集成。输出与参与者的反馈一起转换和分析，以确定使用AI辅助编程工具是否对获得开发人员有影响。",
    "tldr": "本研究通过案例研究评估了在专注于移动开发的团队中使用AI辅助代码生成的性能。通过对参与者进行技术入职和技术堆栈切换阶段的问题求解，评估了使用和不使用AI-Code生成器的影响。研究结合了时间、正确性和技术集成等度量指标，并分析了参与者的反馈，以确定使用AI辅助编程工具是否对开发人员产生影响。",
    "en_tdlr": "This study evaluates the performance of AI-assisted code generation in mobile development teams and assesses its impact on technical onboarding and technical stack switch. It uses a case study approach with participants solving technical problems using AI-Code generators, and measures time, correctness, and technical integration to determine the effects of AI-assisted programming tools on developers."
}