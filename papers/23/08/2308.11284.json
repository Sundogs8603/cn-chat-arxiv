{
    "title": "LEAP: Efficient and Automated Test Method for NLP Software. (arXiv:2308.11284v1 [cs.SE])",
    "abstract": "The widespread adoption of DNNs in NLP software has highlighted the need for robustness. Researchers proposed various automatic testing techniques for adversarial test cases. However, existing methods suffer from two limitations: weak error-discovering capabilities, with success rates ranging from 0% to 24.6% for BERT-based NLP software, and time inefficiency, taking 177.8s to 205.28s per test case, making them challenging for time-constrained scenarios. To address these issues, this paper proposes LEAP, an automated test method that uses LEvy flight-based Adaptive Particle swarm optimization integrated with textual features to generate adversarial test cases. Specifically, we adopt Levy flight for population initialization to increase the diversity of generated test cases. We also design an inertial weight adaptive update operator to improve the efficiency of LEAP's global optimization of high-dimensional text examples and a mutation operator based on the greedy strategy to reduce the",
    "link": "http://arxiv.org/abs/2308.11284",
    "context": "Title: LEAP: Efficient and Automated Test Method for NLP Software. (arXiv:2308.11284v1 [cs.SE])\nAbstract: The widespread adoption of DNNs in NLP software has highlighted the need for robustness. Researchers proposed various automatic testing techniques for adversarial test cases. However, existing methods suffer from two limitations: weak error-discovering capabilities, with success rates ranging from 0% to 24.6% for BERT-based NLP software, and time inefficiency, taking 177.8s to 205.28s per test case, making them challenging for time-constrained scenarios. To address these issues, this paper proposes LEAP, an automated test method that uses LEvy flight-based Adaptive Particle swarm optimization integrated with textual features to generate adversarial test cases. Specifically, we adopt Levy flight for population initialization to increase the diversity of generated test cases. We also design an inertial weight adaptive update operator to improve the efficiency of LEAP's global optimization of high-dimensional text examples and a mutation operator based on the greedy strategy to reduce the",
    "path": "papers/23/08/2308.11284.json",
    "total_tokens": 916,
    "translated_title": "LEAP: NLP软件的高效自动化测试方法",
    "translated_abstract": "在NLP软件中广泛使用的深度神经网络的普及凸显了对鲁棒性的需求。研究人员提出了各种用于对抗性测试用例的自动化测试技术。然而，现有方法存在两个限制：错误发现能力较弱，对基于BERT的NLP软件的成功率从0%到24.6%不等；时间效率低，每个测试用例需要177.8秒到205.28秒，使其在时间受限的场景中具有挑战性。为解决这些问题，本文提出了LEAP，一种自动化测试方法，它使用基于LEvy飞行的自适应粒子群算法与文本特征相结合来生成对抗性测试用例。具体而言，我们采用Levy飞行进行种群初始化，以增加生成测试用例的多样性。我们还设计了一种惯性权重自适应更新操作符，以提高LEAP在高维文本示例的全局优化效率，并基于贪婪策略设计了一种变异操作符，以减少计算开销。",
    "tldr": "LEAP是一种用于NLP软件的高效自动化测试方法，它通过结合LEvy飞行的自适应粒子群算法和文本特征来生成对抗性测试用例，解决了现有方法在错误发现能力和时间效率方面的限制。"
}