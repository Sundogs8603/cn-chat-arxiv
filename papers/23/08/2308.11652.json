{
    "title": "Accelerating Exact Combinatorial Optimization via RL-based Initialization -- A Case Study in Scheduling. (arXiv:2308.11652v1 [cs.LG])",
    "abstract": "Scheduling on dataflow graphs (also known as computation graphs) is an NP-hard problem. The traditional exact methods are limited by runtime complexity, while reinforcement learning (RL) and heuristic-based approaches struggle with determinism and solution quality. This research aims to develop an innovative approach that employs machine learning (ML) for addressing combinatorial optimization problems, using scheduling as a case study. The goal is to provide guarantees in optimality and determinism while maintaining the runtime cost of heuristic methods. Specifically, we introduce a novel two-phase RL-to-ILP scheduling framework, which includes three steps: 1) RL solver acts as coarse-grain scheduler, 2) solution relaxation and 3) exact solving via ILP. Our framework demonstrates the same scheduling performance compared with using exact scheduling methods while achieving up to 128 $\\times$ speed improvements. This was conducted on actual EdgeTPU platforms, utilizing ImageNet DNN comput",
    "link": "http://arxiv.org/abs/2308.11652",
    "context": "Title: Accelerating Exact Combinatorial Optimization via RL-based Initialization -- A Case Study in Scheduling. (arXiv:2308.11652v1 [cs.LG])\nAbstract: Scheduling on dataflow graphs (also known as computation graphs) is an NP-hard problem. The traditional exact methods are limited by runtime complexity, while reinforcement learning (RL) and heuristic-based approaches struggle with determinism and solution quality. This research aims to develop an innovative approach that employs machine learning (ML) for addressing combinatorial optimization problems, using scheduling as a case study. The goal is to provide guarantees in optimality and determinism while maintaining the runtime cost of heuristic methods. Specifically, we introduce a novel two-phase RL-to-ILP scheduling framework, which includes three steps: 1) RL solver acts as coarse-grain scheduler, 2) solution relaxation and 3) exact solving via ILP. Our framework demonstrates the same scheduling performance compared with using exact scheduling methods while achieving up to 128 $\\times$ speed improvements. This was conducted on actual EdgeTPU platforms, utilizing ImageNet DNN comput",
    "path": "papers/23/08/2308.11652.json",
    "total_tokens": 938,
    "translated_title": "使用基于强化学习的初始化加速精确组合优化--调度案例研究",
    "translated_abstract": "数据流图（也称为计算图）上的调度是一个NP难的问题。传统的精确方法受到运行时复杂度的限制，而强化学习（RL）和启发式方法在确定性和解决方案质量方面存在困难。本研究旨在开发一种创新方法，利用机器学习（ML）解决组合优化问题，以调度为案例研究。目标是在保持启发式方法运行时间成本的同时，提供优化性和确定性的保证。具体而言，我们引入了一种新颖的两阶段RL-ILP调度框架，包括三个步骤：1）RL求解器作为粗粒度调度器，2）解决方案放松和3）通过ILP进行精确求解。我们的框架表明，在实际的EdgeTPU平台上，利用ImageNet DNN计算，与使用精确调度方法相比，具有相同的调度性能并实现高达128倍的速度提升。",
    "tldr": "本研究提出了一种基于强化学习的初始化加速精确组合优化的方法，以调度为案例研究。该方法在保持启发式方法运行时间成本的同时，提供了优化性和确定性的保证，并在实际的EdgeTPU平台上实现了128倍的速度提升。"
}