{
    "title": "Natlog: Embedding Logic Programming into the Python Deep-Learning Ecosystem. (arXiv:2308.15890v1 [cs.AI])",
    "abstract": "Driven by expressiveness commonalities of Python and our Python-based embedded logic-based language Natlog, we design high-level interaction patterns between equivalent language constructs and data types on the two sides.  By directly connecting generators and backtracking, nested tuples and terms, coroutines and first-class logic engines, reflection and meta-interpretation, we enable logic-based language constructs to access the full power of the Python ecosystem.  We show the effectiveness of our design via Natlog apps working as orchestrators for JAX and Pytorch pipelines and as DCG-driven GPT3 and DALL.E prompt generators.  Keyphrases: embedding of logic programming in the Python ecosystem, high-level inter-paradigm data exchanges, coroutining with logic engines, logic-based neuro-symbolic computing, logic grammars as prompt-generators for Large Language Models, logic-based neural network configuration and training.",
    "link": "http://arxiv.org/abs/2308.15890",
    "context": "Title: Natlog: Embedding Logic Programming into the Python Deep-Learning Ecosystem. (arXiv:2308.15890v1 [cs.AI])\nAbstract: Driven by expressiveness commonalities of Python and our Python-based embedded logic-based language Natlog, we design high-level interaction patterns between equivalent language constructs and data types on the two sides.  By directly connecting generators and backtracking, nested tuples and terms, coroutines and first-class logic engines, reflection and meta-interpretation, we enable logic-based language constructs to access the full power of the Python ecosystem.  We show the effectiveness of our design via Natlog apps working as orchestrators for JAX and Pytorch pipelines and as DCG-driven GPT3 and DALL.E prompt generators.  Keyphrases: embedding of logic programming in the Python ecosystem, high-level inter-paradigm data exchanges, coroutining with logic engines, logic-based neuro-symbolic computing, logic grammars as prompt-generators for Large Language Models, logic-based neural network configuration and training.",
    "path": "papers/23/08/2308.15890.json",
    "total_tokens": 745,
    "translated_title": "Natlog: 将逻辑编程嵌入Python深度学习生态系统",
    "translated_abstract": "受到Python和我们基于Python的嵌入式逻辑语言Natlog的表达力共性的驱动，我们设计了两者之间的等效语言结构和数据类型的高级交互模式。通过直接连接生成器和回溯、嵌套元组和术语、协程和一流逻辑引擎、反射和元解释，我们使逻辑语言结构能够访问Python生态系统的全部能力。我们通过Natlog应用程序作为JAX和Pytorch管道的编排器以及作为DCG驱动的GPT3和DALL.E提示生成器展示了我们设计的有效性。",
    "tldr": "Natlog通过高级交互模式和多种功能的连接，将逻辑编程嵌入到Python深度学习生态系统中，实现了逻辑语言结构对Python生态系统的完全访问能力。",
    "en_tdlr": "Natlog embeds logic programming into the Python deep-learning ecosystem, enabling logic-based language constructs to access the full power of the Python ecosystem through high-level interaction patterns and various connections."
}