{
    "title": "Natural language to SQL in low-code platforms. (arXiv:2308.15239v1 [cs.AI])",
    "abstract": "One of the developers' biggest challenges in low-code platforms is retrieving data from a database using SQL queries. Here, we propose a pipeline allowing developers to write natural language (NL) to retrieve data. In this study, we collect, label, and validate data covering the SQL queries most often performed by OutSystems users. We use that data to train a NL model that generates SQL. Alongside this, we describe the entire pipeline, which comprises a feedback loop that allows us to quickly collect production data and use it to retrain our SQL generation model. Using crowd-sourcing, we collect 26k NL and SQL pairs and obtain an additional 1k pairs from production data. Finally, we develop a UI that allows developers to input a NL query in a prompt and receive a user-friendly representation of the resulting SQL query. We use A/B testing to compare four different models in production and observe a 240% improvement in terms of adoption of the feature, 220% in terms of engagement rate, a",
    "link": "http://arxiv.org/abs/2308.15239",
    "context": "Title: Natural language to SQL in low-code platforms. (arXiv:2308.15239v1 [cs.AI])\nAbstract: One of the developers' biggest challenges in low-code platforms is retrieving data from a database using SQL queries. Here, we propose a pipeline allowing developers to write natural language (NL) to retrieve data. In this study, we collect, label, and validate data covering the SQL queries most often performed by OutSystems users. We use that data to train a NL model that generates SQL. Alongside this, we describe the entire pipeline, which comprises a feedback loop that allows us to quickly collect production data and use it to retrain our SQL generation model. Using crowd-sourcing, we collect 26k NL and SQL pairs and obtain an additional 1k pairs from production data. Finally, we develop a UI that allows developers to input a NL query in a prompt and receive a user-friendly representation of the resulting SQL query. We use A/B testing to compare four different models in production and observe a 240% improvement in terms of adoption of the feature, 220% in terms of engagement rate, a",
    "path": "papers/23/08/2308.15239.json",
    "total_tokens": 953,
    "translated_title": "低代码平台中的自然语言转SQL",
    "translated_abstract": "低代码平台开发人员面临的最大挑战之一是使用SQL查询从数据库中检索数据。我们提出了一种管道，允许开发人员编写自然语言（NL）来检索数据。在这项研究中，我们收集、标注和验证了OutSystems用户最常使用的SQL查询所涉及的数据。我们使用这些数据来训练一个NL模型来生成SQL。同时，我们描述了整个管道，其中包括一个反馈循环，使我们能够快速收集生产数据，并用它来重新训练我们的SQL生成模型。通过众包，我们收集了26k个NL和SQL对，并从生产数据中获得了额外的1k对。最后，我们开发了一个用户界面，允许开发人员在提示中输入NL查询，并获得对应SQL查询的用户友好表示。我们使用A/B测试来比较生产中的四个不同模型，观察到特性采用率提高了240%，参与率提高了220%。",
    "tldr": "本研究提出了一种自然语言转SQL的管道，允许低代码平台开发人员使用自然语言检索数据库中的数据。通过收集和标注大量数据，训练了一个NL模型来生成SQL，并使用反馈循环不断优化模型。通过A/B测试，观察到特性采用率提高了240%，参与率提高了220%。"
}