{
    "title": "Learning-Based Automatic Synthesis of Software Code and Configuration. (arXiv:2305.15642v1 [cs.SE])",
    "abstract": "Increasing demands in software industry and scarcity of software engineers motivates researchers and practitioners to automate the process of software generation and configuration. Large scale automatic software generation and configuration is a very complex and challenging task. In this proposal, we set out to investigate this problem by breaking down automatic software generation and configuration into two different tasks. In first task, we propose to synthesize software automatically with input output specifications. This task is further broken down into two sub-tasks. The first sub-task is about synthesizing programs with a genetic algorithm which is driven by a neural network based fitness function trained with program traces and specifications. For the second sub-task, we formulate program synthesis as a continuous optimization problem and synthesize programs with covariance matrix adaption evolutionary strategy (a state-of-the-art continuous optimization method). Finally, for th",
    "link": "http://arxiv.org/abs/2305.15642",
    "context": "Title: Learning-Based Automatic Synthesis of Software Code and Configuration. (arXiv:2305.15642v1 [cs.SE])\nAbstract: Increasing demands in software industry and scarcity of software engineers motivates researchers and practitioners to automate the process of software generation and configuration. Large scale automatic software generation and configuration is a very complex and challenging task. In this proposal, we set out to investigate this problem by breaking down automatic software generation and configuration into two different tasks. In first task, we propose to synthesize software automatically with input output specifications. This task is further broken down into two sub-tasks. The first sub-task is about synthesizing programs with a genetic algorithm which is driven by a neural network based fitness function trained with program traces and specifications. For the second sub-task, we formulate program synthesis as a continuous optimization problem and synthesize programs with covariance matrix adaption evolutionary strategy (a state-of-the-art continuous optimization method). Finally, for th",
    "path": "papers/23/05/2305.15642.json",
    "total_tokens": 864,
    "translated_title": "基于学习的软件代码和配置自动生成",
    "translated_abstract": "软件行业的需求增加和软件工程师的稀缺性推动研究人员和从业者自动化软件生成和配置的过程。大规模的自动软件代码生成和配置是一个非常复杂和具有挑战性的任务。本研究将自动软件生成和配置拆分为两个不同的任务进行研究。在第一个任务中，我们提出了使用输入输出规范自动合成软件的方法。这个任务被进一步分为两个子任务。第一个子任务是使用遗传算法合成程序，其驱动神经网络基于程序跟踪和规范训练的适应度函数。对于第二个子任务，我们将程序合成形式化为连续优化问题，并使用协方差矩阵适应进化策略（一种最先进的连续优化方法）来合成程序。最后，对于配置生成，我们采用基于强化学习的方法来实现。",
    "tldr": "本文介绍了一种基于学习的自动软件代码和配置生成方法，其中通过遗传算法和神经网络训练的适应度函数自动合成程序，使用协方差矩阵适应进化策略完成程序合成，并采用强化学习方法实现配置生成。",
    "en_tdlr": "This paper proposes a learning-based approach for automatic software code and configuration synthesis, which uses a genetic algorithm and neural network trained fitness function for program synthesis, covariance matrix adaptation evolutionary strategy for continuous optimization program synthesis, and reinforcement learning for configuration generation."
}