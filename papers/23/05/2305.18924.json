{
    "title": "Bottom-Up Grounding in the Probabilistic Logic Programming System Fusemate. (arXiv:2305.18924v2 [cs.AI] UPDATED)",
    "abstract": "This paper introduces the Fusemate probabilistic logic programming system. Fusemate's inference engine comprises a grounding component and a variable elimination method for probabilistic inference. Fusemate differs from most other systems by grounding the program in a bottom-up way instead of the common top-down way. While bottom-up grounding is attractive for a number of reasons, e.g., for dynamically creating distributions of varying support sizes, it makes it harder to control the amount of ground clauses generated. We address this problem by interleaving grounding with a query-guided relevance test which prunes rules whose bodies are inconsistent with the query. We present our method in detail and demonstrate it with examples that involve \"time\", such as (hidden) Markov models. Our experiments demonstrate competitive or better performance compared to a state-of-the art probabilistic logic programming system, in particular for high branching problems.",
    "link": "http://arxiv.org/abs/2305.18924",
    "context": "Title: Bottom-Up Grounding in the Probabilistic Logic Programming System Fusemate. (arXiv:2305.18924v2 [cs.AI] UPDATED)\nAbstract: This paper introduces the Fusemate probabilistic logic programming system. Fusemate's inference engine comprises a grounding component and a variable elimination method for probabilistic inference. Fusemate differs from most other systems by grounding the program in a bottom-up way instead of the common top-down way. While bottom-up grounding is attractive for a number of reasons, e.g., for dynamically creating distributions of varying support sizes, it makes it harder to control the amount of ground clauses generated. We address this problem by interleaving grounding with a query-guided relevance test which prunes rules whose bodies are inconsistent with the query. We present our method in detail and demonstrate it with examples that involve \"time\", such as (hidden) Markov models. Our experiments demonstrate competitive or better performance compared to a state-of-the art probabilistic logic programming system, in particular for high branching problems.",
    "path": "papers/23/05/2305.18924.json",
    "total_tokens": 817,
    "translated_title": "Fusemate概率逻辑编程系统中的自下而上推理",
    "translated_abstract": "本文介绍了Fusemate概率逻辑编程系统，该系统的推理引擎包括一个自下而上推理的grounding组件和一个变量消除方法用于概率推理。Fusemate不同于大多数系统，它采用自下而上的方式对程序进行grounding。本文解决了自下而上推理难以控制生成的ground clauses数量的问题，通过交错grounding和一个基于查询引导的相关性测试来修剪与查询不一致的规则。我们详细介绍了我们的方法，并通过包含“时间”的示例（如（隐藏）马尔可夫模型）进行演示。我们的实验证明，在高分支问题上，相比于最先进的概率逻辑编程系统，我们的性能更具竞争力或更好。",
    "tldr": "介绍了自下而上推理的概率逻辑编程系统Fusemate，提出了基于查询引导的相关性测试修剪规则，解决了自下而上推理难以控制ground clauses生成数量的问题，并在包含“时间”的示例中表现出更好的性能。",
    "en_tdlr": "This paper introduces a bottom-up grounded probabilistic logic programming system Fusemate, which addresses the problem of uncontrolled ground clause generation through a query-guided relevance test and shows competitive or better performance compared to state-of-the-art systems, especially for high branching problems."
}