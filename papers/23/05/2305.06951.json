{
    "title": "FastDiagP: An Algorithm for Parallelized Direct Diagnosis. (arXiv:2305.06951v1 [cs.AI])",
    "abstract": "Constraint-based applications attempt to identify a solution that meets all defined user requirements. If the requirements are inconsistent with the underlying constraint set, algorithms that compute diagnoses for inconsistent constraints should be implemented to help users resolve the \"no solution could be found\" dilemma. FastDiag is a typical direct diagnosis algorithm that supports diagnosis calculation without predetermining conflicts. However, this approach faces runtime performance issues, especially when analyzing complex and large-scale knowledge bases. In this paper, we propose a novel algorithm, so-called FastDiagP, which is based on the idea of speculative programming. This algorithm extends FastDiag by integrating a parallelization mechanism that anticipates and pre-calculates consistency checks requested by FastDiag. This mechanism helps to provide consistency checks with fast answers and boosts the algorithm's runtime performance. The performance improvements of our propo",
    "link": "http://arxiv.org/abs/2305.06951",
    "context": "Title: FastDiagP: An Algorithm for Parallelized Direct Diagnosis. (arXiv:2305.06951v1 [cs.AI])\nAbstract: Constraint-based applications attempt to identify a solution that meets all defined user requirements. If the requirements are inconsistent with the underlying constraint set, algorithms that compute diagnoses for inconsistent constraints should be implemented to help users resolve the \"no solution could be found\" dilemma. FastDiag is a typical direct diagnosis algorithm that supports diagnosis calculation without predetermining conflicts. However, this approach faces runtime performance issues, especially when analyzing complex and large-scale knowledge bases. In this paper, we propose a novel algorithm, so-called FastDiagP, which is based on the idea of speculative programming. This algorithm extends FastDiag by integrating a parallelization mechanism that anticipates and pre-calculates consistency checks requested by FastDiag. This mechanism helps to provide consistency checks with fast answers and boosts the algorithm's runtime performance. The performance improvements of our propo",
    "path": "papers/23/05/2305.06951.json",
    "total_tokens": 927,
    "translated_title": "FastDiagP：一种并行化直接诊断算法",
    "translated_abstract": "基于约束的应用程序旨在查找符合所有定义用户需求的解决方案。如果需求与底层约束集不一致，则应实现计算不一致约束的诊断算法，以帮助用户解决“找不到解决方案”的困境。FastDiag是一种典型的直接诊断算法，支持在未确定冲突的情况下进行诊断计算。然而，这种方法面临着运行时性能问题，特别是在分析复杂和大规模知识库时。在本文中，我们提出了一种称为FastDiagP的新算法，它基于推测编程的思想。该算法通过集成一种并行化机制来扩展FastDiag，该机制预计并预计算FastDiag请求的一致性检查。这种机制有助于为一致性检查提供快速答案，并提高算法的运行时性能。我们的提议算法的性能改进是使用基准数据集进行评估的，实验结果表明，FastDiagP的诊断运行时性能比其前身FastDiag显著提高。",
    "tldr": "FastDiagP是一种并行化的直接诊断算法，通过集成一种预测性编程机制以提高一致性检查的速度，解决了FastDiag在分析复杂和大规模知识库时的运行时性能问题。",
    "en_tdlr": "FastDiagP is a parallelized direct diagnosis algorithm that solves the runtime performance issues of its predecessor, FastDiag, by integrating a speculative programming mechanism to improve the speed of consistency checks."
}