{
    "title": "AMULET: Adaptive Matrix-Multiplication-Like Tasks. (arXiv:2305.08872v1 [cs.PL])",
    "abstract": "Many useful tasks in data science and machine learning applications can be written as simple variations of matrix multiplication. However, users have difficulty performing such tasks as existing matrix/vector libraries support only a limited class of computations hand-tuned for each unique hardware platform. Users can alternatively write the task as a simple nested loop but current compilers are not sophisticated enough to generate fast code for the task written in this way. To address these issues, we extend an open-source compiler to recognize and optimize these matrix multiplication-like tasks. Our framework, called Amulet, uses both database-style and compiler optimization techniques to generate fast code tailored to its execution environment. We show through experiments that Amulet achieves speedups on a variety of matrix multiplication-like tasks compared to existing compilers. For large matrices Amulet typically performs within 15% of hand-tuned matrix multiplication libraries, ",
    "link": "http://arxiv.org/abs/2305.08872",
    "context": "Title: AMULET: Adaptive Matrix-Multiplication-Like Tasks. (arXiv:2305.08872v1 [cs.PL])\nAbstract: Many useful tasks in data science and machine learning applications can be written as simple variations of matrix multiplication. However, users have difficulty performing such tasks as existing matrix/vector libraries support only a limited class of computations hand-tuned for each unique hardware platform. Users can alternatively write the task as a simple nested loop but current compilers are not sophisticated enough to generate fast code for the task written in this way. To address these issues, we extend an open-source compiler to recognize and optimize these matrix multiplication-like tasks. Our framework, called Amulet, uses both database-style and compiler optimization techniques to generate fast code tailored to its execution environment. We show through experiments that Amulet achieves speedups on a variety of matrix multiplication-like tasks compared to existing compilers. For large matrices Amulet typically performs within 15% of hand-tuned matrix multiplication libraries, ",
    "path": "papers/23/05/2305.08872.json",
    "total_tokens": 952,
    "translated_title": "AMULET：自适应矩阵乘法类任务",
    "translated_abstract": "在数据科学和机器学习应用中，许多有用的任务可以写成矩阵乘法的简单变种。然而，现有的矩阵/向量库只支持一类特定的计算，并为每个独特的硬件平台手动调优，因此用户很难执行这些任务。用户可以将任务编写为简单的嵌套循环，但当前的编译器并不足够复杂，无法为以这种方式编写的任务生成快速的代码。为了解决这些问题，我们扩展了一个开源编译器，以识别并优化这些矩阵乘法类任务。我们的框架称为AMULET，利用数据库式和编译器优化技术来生成针对其执行环境定制的快速代码。通过实验，我们证明AMULET在各种矩阵乘法类任务上实现了加速，相比现有的编译器，AMULET通常可以在15％以内的误差范围内与手动调优的矩阵乘法库相媲美。",
    "tldr": "AMULET是一个开源编译器，通过利用数据库式和编译器优化技术来优化矩阵乘法类任务，从而在执行环境下生成快速代码，相比现有编译器， AMULTET能够在各种矩阵乘法类任务上实现加速，并可以和手动调优的矩阵乘法库相媲美。",
    "en_tdlr": "AMULET is an open-source compiler that optimizes matrix multiplication-like tasks by using both database-style and compiler optimization techniques to generate fast code tailored to its execution environment. AMULET achieves speedups on a variety of matrix multiplication-like tasks compared to existing compilers and can be competitive with hand-tuned matrix multiplication libraries within a 15% error margin for large matrices."
}