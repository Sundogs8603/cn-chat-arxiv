{
    "title": "Understanding Automatic Differentiation Pitfalls. (arXiv:2305.07546v1 [math.NA])",
    "abstract": "Automatic differentiation, also known as backpropagation, AD, autodiff, or algorithmic differentiation, is a popular technique for computing derivatives of computer programs accurately and efficiently. Sometimes, however, the derivatives computed by AD could be interpreted as incorrect. These pitfalls occur systematically across tools and approaches. In this paper we broadly categorize problematic usages of AD and illustrate each category with examples such as chaos, time-averaged oscillations, discretizations, fixed-point loops, lookup tables, and linear solvers. We also review debugging techniques and their effectiveness in these situations. With this article we hope to help readers avoid unexpected behavior, detect problems more easily when they occur, and have more realistic expectations from AD tools.",
    "link": "http://arxiv.org/abs/2305.07546",
    "context": "Title: Understanding Automatic Differentiation Pitfalls. (arXiv:2305.07546v1 [math.NA])\nAbstract: Automatic differentiation, also known as backpropagation, AD, autodiff, or algorithmic differentiation, is a popular technique for computing derivatives of computer programs accurately and efficiently. Sometimes, however, the derivatives computed by AD could be interpreted as incorrect. These pitfalls occur systematically across tools and approaches. In this paper we broadly categorize problematic usages of AD and illustrate each category with examples such as chaos, time-averaged oscillations, discretizations, fixed-point loops, lookup tables, and linear solvers. We also review debugging techniques and their effectiveness in these situations. With this article we hope to help readers avoid unexpected behavior, detect problems more easily when they occur, and have more realistic expectations from AD tools.",
    "path": "papers/23/05/2305.07546.json",
    "total_tokens": 774,
    "translated_title": "理解自动微分陷阱",
    "translated_abstract": "自动微分（也被称为反向传播、AD、autodiff或算法微分）是一种计算计算机程序导数的流行技术，既准确又高效。然而，由自动微分计算出的导数有时可能被解释为不正确的。这些陷阱在工具和方法中普遍存在。本文广泛分类自动微分的问题用法，并通过示例（如混沌、时间平均振荡、离散化、固定点循环、查找表和线性求解器）来说明每个类别。我们还回顾了调试技术及其在这些情况下的有效性。本文旨在帮助读者避免意外行为，在发生问题时更容易检测问题，并从自动微分工具中获得更实际的期望。",
    "tldr": "本文将广泛分类自动微分的问题用法，并通过举例说明每个类别，旨在帮助读者避免意外行为，在发生问题时更容易检测问题，并从自动微分工具中获得更实际的期望。",
    "en_tdlr": "This paper categorizes problematic usages of automatic differentiation and provides examples for each category, with the aim of helping readers avoid unexpected behavior, detect problems more easily when they occur, and have more realistic expectations from AD tools."
}