{
    "title": "Think Outside the Code: Brainstorming Boosts Large Language Models in Code Generation. (arXiv:2305.10679v1 [cs.AI])",
    "abstract": "Code generation aims to automatically generate source code from high-level task specifications, which can significantly increase productivity of software engineering. Recently, approaches based on large language models (LLMs) have shown remarkable code generation abilities on simple tasks. However, generate code for more complex tasks, such as competition-level problems, remains challenging. In this paper, we introduce Brainstorm framework for code generation. It leverages a brainstorming step that generates and selects diverse thoughts on the problem to facilitate algorithmic reasoning, where the thoughts are possible blueprint of solving the problem. We demonstrate that Brainstorm significantly enhances the ability of LLMs to solve competition-level programming problems, resulting in a more than 50% increase in the pass@$k$ metrics for ChatGPT on the CodeContests benchmark, achieving state-of-the-art performance. Furthermore, our experiments conducted on LeetCode contests show that o",
    "link": "http://arxiv.org/abs/2305.10679",
    "context": "Title: Think Outside the Code: Brainstorming Boosts Large Language Models in Code Generation. (arXiv:2305.10679v1 [cs.AI])\nAbstract: Code generation aims to automatically generate source code from high-level task specifications, which can significantly increase productivity of software engineering. Recently, approaches based on large language models (LLMs) have shown remarkable code generation abilities on simple tasks. However, generate code for more complex tasks, such as competition-level problems, remains challenging. In this paper, we introduce Brainstorm framework for code generation. It leverages a brainstorming step that generates and selects diverse thoughts on the problem to facilitate algorithmic reasoning, where the thoughts are possible blueprint of solving the problem. We demonstrate that Brainstorm significantly enhances the ability of LLMs to solve competition-level programming problems, resulting in a more than 50% increase in the pass@$k$ metrics for ChatGPT on the CodeContests benchmark, achieving state-of-the-art performance. Furthermore, our experiments conducted on LeetCode contests show that o",
    "path": "papers/23/05/2305.10679.json",
    "total_tokens": 937,
    "translated_title": "超越编码：头脑风暴提升大型语言模型在代码生成中的应用",
    "translated_abstract": "代码生成旨在从高级任务规范自动生成源代码，可显着提高软件工程的生产力。最近，基于大型语言模型（LLMs）的方法在简单任务的代码生成能力方面表现出色。然而，生成更复杂任务的代码（如竞争级别的问题）仍然很具有挑战性。在本文中，我们介绍了Brainstorm框架用于代码生成。它利用了一个头脑风暴步骤，生成并选择关于问题的不同想法以促进算法推理，其中这些思考是解决问题的可能蓝图。我们证明Brainstorm显著增强了LLMs解决竞争级别编程问题的能力，在CodeContests基准测试中，ChatGPT的pass@$k$指标增加了50％以上，实现了最先进的性能。此外，我们在LeetCode竞赛中进行的实验表明，o",
    "tldr": "本文介绍了一个名为Brainstorm的框架，利用头脑风暴步骤生成并选择关于问题的不同想法，可显著增强大型语言模型（LLMs）解决竞争级别编程问题的能力，结果在CodeContests基准测试中，ChatGPT的pass@$k$指标增加了50％以上。",
    "en_tdlr": "This paper introduces a framework called Brainstorm, which leverages a brainstorming step to generate and select diverse thoughts on the problem to facilitate algorithmic reasoning, significantly enhancing the ability of large language models (LLMs) to solve competition-level programming problems, resulting in a more than 50% increase in the pass@$k$ metrics for ChatGPT on the CodeContests benchmark, achieving state-of-the-art performance."
}