{
    "title": "Alfred: A System for Prompted Weak Supervision. (arXiv:2305.18623v1 [cs.LG])",
    "abstract": "Alfred is the first system for programmatic weak supervision (PWS) that creates training data for machine learning by prompting. In contrast to typical PWS systems where weak supervision sources are programs coded by experts, Alfred enables users to encode their subject matter expertise via natural language prompts for language and vision-language models. Alfred provides a simple Python interface for the key steps of this emerging paradigm, with a high-throughput backend for large-scale data labeling. Users can quickly create, evaluate, and refine their prompt-based weak supervision sources; map the results to weak labels; and resolve their disagreements with a label model. Alfred enables a seamless local development experience backed by models served from self-managed computing clusters. It automatically optimizes the execution of prompts with optimized batching mechanisms. We find that this optimization improves query throughput by 2.9x versus a naive approach. We present two example",
    "link": "http://arxiv.org/abs/2305.18623",
    "context": "Title: Alfred: A System for Prompted Weak Supervision. (arXiv:2305.18623v1 [cs.LG])\nAbstract: Alfred is the first system for programmatic weak supervision (PWS) that creates training data for machine learning by prompting. In contrast to typical PWS systems where weak supervision sources are programs coded by experts, Alfred enables users to encode their subject matter expertise via natural language prompts for language and vision-language models. Alfred provides a simple Python interface for the key steps of this emerging paradigm, with a high-throughput backend for large-scale data labeling. Users can quickly create, evaluate, and refine their prompt-based weak supervision sources; map the results to weak labels; and resolve their disagreements with a label model. Alfred enables a seamless local development experience backed by models served from self-managed computing clusters. It automatically optimizes the execution of prompts with optimized batching mechanisms. We find that this optimization improves query throughput by 2.9x versus a naive approach. We present two example",
    "path": "papers/23/05/2305.18623.json",
    "total_tokens": 918,
    "translated_title": "Alfred: 一种通过提示进行弱监督的系统",
    "translated_abstract": "Alfred是第一个使用提示创建机器学习训练数据的程序式弱监督(PWS)系统。与典型的PWS系统不同，其中弱监督源由专家编写的程序，Alfred允许用户通过自然语言提示为语言和视觉-语言模型编写主题专业知识。Alfred为这种新兴范式的关键步骤提供简单的Python接口，具有大规模数据标注的高吞吐量后端。用户可以快速创建、评估和完善基于提示的弱监督来源；将结果映射到弱标签；并使用标签模型解决不同意见。Alfred支持被自管理的计算集群提供的模型服务，实现无缝的本地开发体验。它使用优化的批处理机制自动优化提示的执行。我们发现，与简单方法相比，这种优化可以将查询吞吐量提高2.9倍。我们提供了两个示例。",
    "tldr": "Alfred是一个系统，通过提示创建机器学习训练数据，而不是由专家编写的程序式弱监督(PWS)系统，用户可以通过自然语言提示为语言和视觉-语言模型编写主题专业知识。Alfred为这种新兴范式的关键步骤提供简单的Python接口，具有大规模数据标注的高吞吐量后端。"
}