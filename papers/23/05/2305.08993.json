{
    "title": "Survey of Malware Analysis through Control Flow Graph using Machine Learning. (arXiv:2305.08993v1 [cs.CR])",
    "abstract": "Malware is a significant threat to the security of computer systems and networks which requires sophisticated techniques to analyze the behavior and functionality for detection. Traditional signature-based malware detection methods have become ineffective in detecting new and unknown malware due to their rapid evolution. One of the most promising techniques that can overcome the limitations of signature-based detection is to use control flow graphs (CFGs). CFGs leverage the structural information of a program to represent the possible paths of execution as a graph, where nodes represent instructions and edges represent control flow dependencies. Machine learning (ML) algorithms are being used to extract these features from CFGs and classify them as malicious or benign. In this survey, we aim to review some state-of-the-art methods for malware detection through CFGs using ML, focusing on the different ways of extracting, representing, and classifying. Specifically, we present a comprehe",
    "link": "http://arxiv.org/abs/2305.08993",
    "context": "Title: Survey of Malware Analysis through Control Flow Graph using Machine Learning. (arXiv:2305.08993v1 [cs.CR])\nAbstract: Malware is a significant threat to the security of computer systems and networks which requires sophisticated techniques to analyze the behavior and functionality for detection. Traditional signature-based malware detection methods have become ineffective in detecting new and unknown malware due to their rapid evolution. One of the most promising techniques that can overcome the limitations of signature-based detection is to use control flow graphs (CFGs). CFGs leverage the structural information of a program to represent the possible paths of execution as a graph, where nodes represent instructions and edges represent control flow dependencies. Machine learning (ML) algorithms are being used to extract these features from CFGs and classify them as malicious or benign. In this survey, we aim to review some state-of-the-art methods for malware detection through CFGs using ML, focusing on the different ways of extracting, representing, and classifying. Specifically, we present a comprehe",
    "path": "papers/23/05/2305.08993.json",
    "total_tokens": 811,
    "translated_title": "基于机器学习的控制流图恶意软件分析综述",
    "translated_abstract": "恶意软件对计算机系统和网络的安全构成了重大威胁，需要先进的技术对其进行行为和功能分析以进行检测。传统的基于签名的恶意软件检测方法由于恶意软件的快速演化已经失效。其中最有希望克服基于签名检测方法局限的技术之一是使用控制流图（CFG）。CFG利用程序的结构信息将可执行路径表示为图形，其中节点表示指令，边表示控制流依赖关系。目前利用机器学习算法从CFG中提取这些特征并将其分类为恶意或良性的方法已经成为主流。在本综述中，我们旨在回顾一些基于CFG和机器学习的恶意软件检测的最新方法，重点关注从CFG中提取，表示和分类的不同方法。",
    "tldr": "本文介绍了最新基于控制流图和机器学习的恶意软件检测方法，重点关注了从CFG中提取、表示、分类的不同方法。",
    "en_tdlr": "This paper presents state-of-the-art techniques for malware detection through control flow graphs and machine learning, with a focus on the different ways of extracting, representing, and classifying the features from CFGs."
}