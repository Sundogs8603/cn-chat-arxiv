{
    "title": "Fast Pareto Optimization Using Sliding Window Selection. (arXiv:2305.07178v1 [cs.NE])",
    "abstract": "Pareto optimization using evolutionary multi-objective algorithms has been widely applied to solve constrained submodular optimization problems. A crucial factor determining the runtime of the used evolutionary algorithms to obtain good approximations is the population size of the algorithms which grows with the number of trade-offs that the algorithms encounter. In this paper, we introduce a sliding window speed up technique for recently introduced algorithms. We prove that our technique eliminates the population size as a crucial factor negatively impacting the runtime and achieves the same theoretical performance guarantees as previous approaches within less computation time. Our experimental investigations for the classical maximum coverage problem confirms that our sliding window technique clearly leads to better results for a wide range of instances and constraint settings.",
    "link": "http://arxiv.org/abs/2305.07178",
    "context": "Title: Fast Pareto Optimization Using Sliding Window Selection. (arXiv:2305.07178v1 [cs.NE])\nAbstract: Pareto optimization using evolutionary multi-objective algorithms has been widely applied to solve constrained submodular optimization problems. A crucial factor determining the runtime of the used evolutionary algorithms to obtain good approximations is the population size of the algorithms which grows with the number of trade-offs that the algorithms encounter. In this paper, we introduce a sliding window speed up technique for recently introduced algorithms. We prove that our technique eliminates the population size as a crucial factor negatively impacting the runtime and achieves the same theoretical performance guarantees as previous approaches within less computation time. Our experimental investigations for the classical maximum coverage problem confirms that our sliding window technique clearly leads to better results for a wide range of instances and constraint settings.",
    "path": "papers/23/05/2305.07178.json",
    "total_tokens": 783,
    "translated_title": "使用滑动窗口选择的快速Pareto优化",
    "translated_abstract": "Pareto优化使用进化多目标算法已被广泛应用于解决约束子模优化问题。决定所使用的进化算法运行时间的一个关键因素是算法的种群大小，其随算法遇到的折衷数量增长。在本文中，我们介绍了一种滑动窗口加速技术来加速最近引入的算法。我们证明了我们的技术消除了种群大小作为影响运行时间的关键因素，并且在更少的计算时间内实现了与以前方法相同的理论性能保证。我们对经典的最大覆盖问题进行的实验调查证实，我们的滑动窗口技术明显导致广泛的实例和约束设置的更好结果。",
    "tldr": "本文介绍了一种滑动窗口加速技术，以减少算法的种群大小，从而在更短的时间内实现与以前方法相同的理论性能保证。实验结果表明，该方法可以在广泛的实例和约束设置中实现更好的结果。",
    "en_tdlr": "This paper introduces a sliding window speed-up technique to reduce the population size of evolutionary algorithms used in Pareto optimization, achieving the same theoretical performance guarantees as previous approaches within less computation time, and experimental investigations confirm better results for a wide range of instances and constraint settings for the classical maximum coverage problem."
}