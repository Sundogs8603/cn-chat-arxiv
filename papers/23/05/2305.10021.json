{
    "title": "An efficient solver for ASP(Q). (arXiv:2305.10021v1 [cs.AI])",
    "abstract": "Answer Set Programming with Quantifiers ASP(Q) extends Answer Set Programming (ASP) to allow for declarative and modular modeling of problems from the entire polynomial hierarchy. The first implementation of ASP(Q), called qasp, was based on a translation to Quantified Boolean Formulae (QBF) with the aim of exploiting the well-developed and mature QBF-solving technology. However, the implementation of the QBF encoding employed in qasp is very general and might produce formulas that are hard to evaluate for existing QBF solvers because of the large number of symbols and sub-clauses. In this paper, we present a new implementation that builds on the ideas of qasp and features both a more efficient encoding procedure and new optimized encodings of ASP(Q) programs in QBF. The new encodings produce smaller formulas (in terms of the number of quantifiers, variables, and clauses) and result in a more efficient evaluation process. An algorithm selection strategy automatically combines several Q",
    "link": "http://arxiv.org/abs/2305.10021",
    "context": "Title: An efficient solver for ASP(Q). (arXiv:2305.10021v1 [cs.AI])\nAbstract: Answer Set Programming with Quantifiers ASP(Q) extends Answer Set Programming (ASP) to allow for declarative and modular modeling of problems from the entire polynomial hierarchy. The first implementation of ASP(Q), called qasp, was based on a translation to Quantified Boolean Formulae (QBF) with the aim of exploiting the well-developed and mature QBF-solving technology. However, the implementation of the QBF encoding employed in qasp is very general and might produce formulas that are hard to evaluate for existing QBF solvers because of the large number of symbols and sub-clauses. In this paper, we present a new implementation that builds on the ideas of qasp and features both a more efficient encoding procedure and new optimized encodings of ASP(Q) programs in QBF. The new encodings produce smaller formulas (in terms of the number of quantifiers, variables, and clauses) and result in a more efficient evaluation process. An algorithm selection strategy automatically combines several Q",
    "path": "papers/23/05/2305.10021.json",
    "total_tokens": 1014,
    "translated_title": "ASP(Q)的高效求解器",
    "translated_abstract": "带量词的答案集编程ASP(Q)通过将问题模块化和声明化，将答案集编程（ASP）扩展到整个多项式层次结构中的问题建模。第一个实现ASP(Q)的工具qasp基于量化布尔公式（QBF）的翻译，旨在利用成熟的QBF求解技术。然而，qasp中采用的QBF编码实现非常通用，由于符号和子句的数量庞大，可能难以评估现有的QBF求解器。本文提出了一种新的实现方法，建立在qasp的思想基础上，具有更高效的编码过程和ASP(Q)程序在QBF中的新优化编码。新的编码产生更小的公式（在量词、变量和子句的数量方面），并导致更高效的评估过程。算法选择策略自动组合多个QBF求解器，以找到最佳的求解器来评估编码，从而进一步提高了我们求解器的性能。我们的实验评估表明，我们的求解器在运行时间和内存消耗方面优于qasp和其他ASP(Q)的最先进的求解器。",
    "tldr": "本文提出了一个基于qasp思想的ASP(Q)求解器，引入了更有效的编码过程和新的优化编码，并使用算法选择策略来提高性能，实验结果表明优于qasp和其他最先进的解决方案。",
    "en_tdlr": "This paper proposes an efficient solver for Answer Set Programming with Quantifiers (ASP(Q)) based on qasp approach, which introduces a more efficient encoding process and optimized encodings, and uses algorithm selection strategy to combine multiple QBF solvers to improve performance. Experimental results show that the proposed solver outperforms qasp and other state-of-the-art solvers for ASP(Q)."
}