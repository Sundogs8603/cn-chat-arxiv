{
    "title": "Coeditor: Leveraging Contextual Changes for Multi-round Code Auto-editing. (arXiv:2305.18584v1 [cs.SE])",
    "abstract": "Developers often dedicate significant time to maintaining and refactoring existing code. However, most prior work on generative models for code focuses solely on creating new code, neglecting the unique requirements of editing existing code. In this work, we explore a multi-round code auto-editing setting, aiming to predict edits to a code region based on recent changes within the same codebase. Our model, Coeditor, is a fine-tuned CodeT5 model with enhancements specifically designed for code editing tasks. We encode code changes using a line diff format and employ static analysis to form large customized model contexts, ensuring appropriate information for prediction. We collect a code editing dataset from the commit histories of 1650 open-source Python projects for training and evaluation. In a simplified single-round, single-edit task, Coeditor significantly outperforms the best code completion approach -- nearly doubling its exact-match accuracy, despite using a much smaller model ",
    "link": "http://arxiv.org/abs/2305.18584",
    "context": "Title: Coeditor: Leveraging Contextual Changes for Multi-round Code Auto-editing. (arXiv:2305.18584v1 [cs.SE])\nAbstract: Developers often dedicate significant time to maintaining and refactoring existing code. However, most prior work on generative models for code focuses solely on creating new code, neglecting the unique requirements of editing existing code. In this work, we explore a multi-round code auto-editing setting, aiming to predict edits to a code region based on recent changes within the same codebase. Our model, Coeditor, is a fine-tuned CodeT5 model with enhancements specifically designed for code editing tasks. We encode code changes using a line diff format and employ static analysis to form large customized model contexts, ensuring appropriate information for prediction. We collect a code editing dataset from the commit histories of 1650 open-source Python projects for training and evaluation. In a simplified single-round, single-edit task, Coeditor significantly outperforms the best code completion approach -- nearly doubling its exact-match accuracy, despite using a much smaller model ",
    "path": "papers/23/05/2305.18584.json",
    "total_tokens": 858,
    "translated_title": "Coeditor：利用上下文变化进行多轮代码自动编辑",
    "translated_abstract": "开发人员经常花费大量时间来维护和重构现有代码。然而，大多数关于生成模型的先前工作都仅关注于创建新代码，忽略了对编辑现有代码的独特要求。在这项工作中，我们探索了一个多轮代码自动编辑的设置，旨在基于同一代码库中的最近变化来预测对代码区域的编辑。我们的模型Coeditor是一个经过细化的CodeT5模型，具有专门设计用于代码编辑任务的增强功能。我们使用行差异格式对代码更改进行编码，并采用静态分析来形成大型定制模型上下文，以确保适当的预测信息。我们从1650个开源Python项目的提交历史中收集了一个代码编辑数据集用于训练和评估。在简化的单轮单编辑任务中，Coeditor的准确性显著优于最佳的代码完成方法，准确率近乎翻倍，即使使用的模型更小。",
    "tldr": "Coeditor开发了一个多轮代码自动编辑模型，利用同一代码库中的最近变化来预测对代码区域的编辑，表现出更高的准确率。",
    "en_tdlr": "Coeditor develops a multi-round code auto-editing model that predicts edits to a code region based on recent changes within the same codebase, showing higher accuracy in a simplified single-round, single-edit task compared to the best code completion approach."
}