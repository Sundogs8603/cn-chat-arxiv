{
    "title": "ProgSG: Cross-Modality Representation Learning for Programs in Electronic Design Automation. (arXiv:2305.10838v1 [cs.LG])",
    "abstract": "Recent years have witnessed the growing popularity of domain-specific accelerators (DSAs), such as Google's TPUs, for accelerating various applications such as deep learning, search, autonomous driving, etc. To facilitate DSA designs, high-level synthesis (HLS) is used, which allows a developer to compile a high-level description in the form of software code in C and C++ into a design in low-level hardware description languages (such as VHDL or Verilog) and eventually synthesized into a DSA on an ASIC (application-specific integrated circuit) or FPGA (field-programmable gate arrays). However, existing HLS tools still require microarchitecture decisions, expressed in terms of pragmas (such as directives for parallelization and pipelining). To enable more people to design DSAs, it is desirable to automate such decisions with the help of deep learning for predicting the quality of HLS designs. This requires us a deeper understanding of the program, which is a combination of original code ",
    "link": "http://arxiv.org/abs/2305.10838",
    "context": "Title: ProgSG: Cross-Modality Representation Learning for Programs in Electronic Design Automation. (arXiv:2305.10838v1 [cs.LG])\nAbstract: Recent years have witnessed the growing popularity of domain-specific accelerators (DSAs), such as Google's TPUs, for accelerating various applications such as deep learning, search, autonomous driving, etc. To facilitate DSA designs, high-level synthesis (HLS) is used, which allows a developer to compile a high-level description in the form of software code in C and C++ into a design in low-level hardware description languages (such as VHDL or Verilog) and eventually synthesized into a DSA on an ASIC (application-specific integrated circuit) or FPGA (field-programmable gate arrays). However, existing HLS tools still require microarchitecture decisions, expressed in terms of pragmas (such as directives for parallelization and pipelining). To enable more people to design DSAs, it is desirable to automate such decisions with the help of deep learning for predicting the quality of HLS designs. This requires us a deeper understanding of the program, which is a combination of original code ",
    "path": "papers/23/05/2305.10838.json",
    "total_tokens": 860,
    "translated_title": "ProgSG：用于电子设计自动化程序的跨模态表征学习",
    "translated_abstract": "近年来，领域特定加速器（DSAs）（例如Google的TPUs）在加速各种应用程序（例如深度学习、搜索、自动驾驶等）方面越来越受欢迎。为了促进DSA设计，使用高级综合（HLS），它允许开发人员将C和C ++软件代码中的高级描述编译为低级硬件描述语言（例如VHDL或Verilog）上的设计，并最终合成为ASIC或FPGA上的DSA。然而，现有的HLS工具仍需要微架构决策，以pragma（例如并行化和流水线指令）的形式表示。为了使更多人设计DSA，希望能够通过深度学习自动化做出这些决策以预测HLS设计的质量。这需要我们更深入地了解程序，即原始代码的组合。",
    "tldr": "该论文介绍了一种跨模态表征学习方法，用于电子自动化设计中高级综合工具的优化，并促进领域特定加速器（DSAs）的设计自动化化。",
    "en_tdlr": "This paper presents a cross-modality representation learning method for optimizing high-level synthesis tools in electronic automation design and promoting the design automation of domain-specific accelerators (DSAs) through deep learning."
}