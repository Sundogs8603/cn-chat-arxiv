{
    "title": "GRAPE for Fast and Scalable Graph Processing and random walk-based Embedding. (arXiv:2110.06196v3 [cs.LG] UPDATED)",
    "abstract": "Graph Representation Learning (GRL) methods opened new avenues for addressing complex, real-world problems represented by graphs. However, many graphs used in these applications comprise millions of nodes and billions of edges and are beyond the capabilities of current methods and software implementations. We present GRAPE, a software resource for graph processing and embedding that can scale with big graphs by using specialized and smart data structures, algorithms, and a fast parallel implementation of random walk-based methods. Compared with state-of-the-art software resources, GRAPE shows an improvement of orders of magnitude in empirical space and time complexity, as well as a competitive edge and node label prediction performance. GRAPE comprises about 1.7 million well-documented lines of Python and Rust code and provides 69 node embedding methods, 25 inference models, a collection of efficient graph processing utilities and over 80,000 graphs from the literature and other source",
    "link": "http://arxiv.org/abs/2110.06196",
    "context": "Title: GRAPE for Fast and Scalable Graph Processing and random walk-based Embedding. (arXiv:2110.06196v3 [cs.LG] UPDATED)\nAbstract: Graph Representation Learning (GRL) methods opened new avenues for addressing complex, real-world problems represented by graphs. However, many graphs used in these applications comprise millions of nodes and billions of edges and are beyond the capabilities of current methods and software implementations. We present GRAPE, a software resource for graph processing and embedding that can scale with big graphs by using specialized and smart data structures, algorithms, and a fast parallel implementation of random walk-based methods. Compared with state-of-the-art software resources, GRAPE shows an improvement of orders of magnitude in empirical space and time complexity, as well as a competitive edge and node label prediction performance. GRAPE comprises about 1.7 million well-documented lines of Python and Rust code and provides 69 node embedding methods, 25 inference models, a collection of efficient graph processing utilities and over 80,000 graphs from the literature and other source",
    "path": "papers/21/10/2110.06196.json",
    "total_tokens": 875,
    "translated_title": "GRAPE: 用于快速可扩展图处理和基于随机游走的嵌入的软件资源",
    "translated_abstract": "图表示学习方法为解决由图表示的复杂实际问题打开了新的途径。然而，这些应用中使用的图中包含数百万个节点和数十亿个边，已经超出了当前方法和软件实现的能力。我们提出了GRAPE，这是一个用于图处理和嵌入的软件资源，可以使用专业而智能的数据结构、算法和快速并行实现的随机游走方法来扩展大型图。与现有最先进的软件资源相比，GRAPE在经验空间和时间复杂度上都显示出数量级的改进，以及竞争性的节点标签预测性能。GRAPE包括约170万行Python和Rust代码，提供69种节点嵌入方法、25种推断模型、一系列高效的图处理工具和超过80,000个来自文献和其他来源的图。",
    "tldr": "GRAPE是一种软件资源，用于处理大型图，并利用专业和智能的数据结构、算法和快速并行实现的随机游走方法，实现了比现有最先进的软件资源更高的时间和空间复杂度，具有竞争性的节点标签预测性能。",
    "en_tdlr": "GRAPE is a software resource for processing large graphs, which achieves higher time and space complexity and competitive node label prediction performance compared to the state-of-the-art software resources by using specialized and intelligent data structures, algorithms, and fast parallel implementation of random walk-based methods."
}