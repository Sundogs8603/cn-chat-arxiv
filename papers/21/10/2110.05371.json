{
    "title": "Graph-Based Machine Learning Improves Just-in-Time Defect Prediction. (arXiv:2110.05371v3 [cs.SE] UPDATED)",
    "abstract": "The increasing complexity of today's software requires the contribution of thousands of developers. This complex collaboration structure makes developers more likely to introduce defect-prone changes that lead to software faults. Determining when these defect-prone changes are introduced has proven challenging, and using traditional machine learning (ML) methods to make these determinations seems to have reached a plateau. In this work, we build contribution graphs consisting of developers and source files to capture the nuanced complexity of changes required to build software. By leveraging these contribution graphs, our research shows the potential of using graph-based ML to improve Just-In-Time (JIT) defect prediction. We hypothesize that features extracted from the contribution graphs may be better predictors of defect-prone changes than intrinsic features derived from software characteristics. We corroborate our hypothesis using graph-based ML for classifying edges that represent ",
    "link": "http://arxiv.org/abs/2110.05371",
    "context": "Title: Graph-Based Machine Learning Improves Just-in-Time Defect Prediction. (arXiv:2110.05371v3 [cs.SE] UPDATED)\nAbstract: The increasing complexity of today's software requires the contribution of thousands of developers. This complex collaboration structure makes developers more likely to introduce defect-prone changes that lead to software faults. Determining when these defect-prone changes are introduced has proven challenging, and using traditional machine learning (ML) methods to make these determinations seems to have reached a plateau. In this work, we build contribution graphs consisting of developers and source files to capture the nuanced complexity of changes required to build software. By leveraging these contribution graphs, our research shows the potential of using graph-based ML to improve Just-In-Time (JIT) defect prediction. We hypothesize that features extracted from the contribution graphs may be better predictors of defect-prone changes than intrinsic features derived from software characteristics. We corroborate our hypothesis using graph-based ML for classifying edges that represent ",
    "path": "papers/21/10/2110.05371.json",
    "total_tokens": 937,
    "translated_title": "基于图的机器学习改进了 JIT 缺陷预测",
    "translated_abstract": "当今软件不断增加的复杂性需要数千名开发人员的贡献。由于复杂的合作结构，开发人员更可能引入易出现缺陷的更改，导致软件故障。确定这些易出现缺陷的更改被引入的时间已经变得具有挑战性，而使用传统的机器学习方法进行这些决策似乎已经达到了瓶颈。在本研究中，我们构建了由开发人员和源文件组成的贡献图来捕捉构建软件所需的微妙复杂性。通过利用这些贡献图，我们的研究展示了利用基于图的机器学习改进 JIT 缺陷预测的潜力。我们假设从贡献图中提取的特征可能比从软件特征派生的本质特征更好地预测易出现缺陷的更改。我们使用基于图的机器学习来分类表示开发人员之间交互的边，以证实我们的假设。",
    "tldr": "该论文使用基于图的机器学习技术，构建了一个由开发人员和源文件组成的贡献图，利用这个图提取的特征，改进了 JIT 缺陷预测，比传统的机器学习方法更好地预测了易出现缺陷的更改。",
    "en_tdlr": "This paper proposes using graph-based machine learning to improve just-in-time (JIT) defect prediction by building a contribution graph consisting of developers and source files to capture the nuanced complexity of changes required to build software. The features extracted from the contribution graph were found to be better predictors of defect-prone changes than intrinsic features derived from software characteristics."
}