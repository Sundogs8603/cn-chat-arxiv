{
    "title": "Pythia: A Customizable Hardware Prefetching Framework Using Online Reinforcement Learning. (arXiv:2109.12021v5 [cs.AR] UPDATED)",
    "abstract": "Past research has proposed numerous hardware prefetching techniques, most of which rely on exploiting one specific type of program context information (e.g., program counter, cacheline address) to predict future memory accesses. These techniques either completely neglect a prefetcher's undesirable effects (e.g., memory bandwidth usage) on the overall system, or incorporate system-level feedback as an afterthought to a system-unaware prefetch algorithm. We show that prior prefetchers often lose their performance benefit over a wide range of workloads and system configurations due to their inherent inability to take multiple different types of program context and system-level feedback information into account while prefetching. In this paper, we make a case for designing a holistic prefetch algorithm that learns to prefetch using multiple different types of program context and system-level feedback information inherent to its design.  To this end, we propose Pythia, which formulates the ",
    "link": "http://arxiv.org/abs/2109.12021",
    "context": "Title: Pythia: A Customizable Hardware Prefetching Framework Using Online Reinforcement Learning. (arXiv:2109.12021v5 [cs.AR] UPDATED)\nAbstract: Past research has proposed numerous hardware prefetching techniques, most of which rely on exploiting one specific type of program context information (e.g., program counter, cacheline address) to predict future memory accesses. These techniques either completely neglect a prefetcher's undesirable effects (e.g., memory bandwidth usage) on the overall system, or incorporate system-level feedback as an afterthought to a system-unaware prefetch algorithm. We show that prior prefetchers often lose their performance benefit over a wide range of workloads and system configurations due to their inherent inability to take multiple different types of program context and system-level feedback information into account while prefetching. In this paper, we make a case for designing a holistic prefetch algorithm that learns to prefetch using multiple different types of program context and system-level feedback information inherent to its design.  To this end, we propose Pythia, which formulates the ",
    "path": "papers/21/09/2109.12021.json",
    "total_tokens": 872,
    "tldr": "Pythia是一种可定制的硬件预取框架，使用在线强化学习算法来进行预取，能够考虑多种程序上下文和系统级反馈信息，提高了预取性能。"
}