{
    "title": "Computing Graph Descriptors on Edge Streams. (arXiv:2109.01494v5 [cs.LG] UPDATED)",
    "abstract": "Feature extraction is an essential task in graph analytics. These feature vectors, called graph descriptors, are used in downstream vector-space-based graph analysis models. This idea has proved fruitful in the past, with spectral-based graph descriptors providing state-of-the-art classification accuracy. However, known algorithms to compute meaningful descriptors do not scale to large graphs since: (1) they require storing the entire graph in memory, and (2) the end-user has no control over the algorithm's runtime. In this paper, we present streaming algorithms to approximately compute three different graph descriptors capturing the essential structure of graphs. Operating on edge streams allows us to avoid storing the entire graph in memory, and controlling the sample size enables us to keep the runtime of our algorithms within desired bounds. We demonstrate the efficacy of the proposed descriptors by analyzing the approximation error and classification accuracy. Our scalable algorit",
    "link": "http://arxiv.org/abs/2109.01494",
    "context": "Title: Computing Graph Descriptors on Edge Streams. (arXiv:2109.01494v5 [cs.LG] UPDATED)\nAbstract: Feature extraction is an essential task in graph analytics. These feature vectors, called graph descriptors, are used in downstream vector-space-based graph analysis models. This idea has proved fruitful in the past, with spectral-based graph descriptors providing state-of-the-art classification accuracy. However, known algorithms to compute meaningful descriptors do not scale to large graphs since: (1) they require storing the entire graph in memory, and (2) the end-user has no control over the algorithm's runtime. In this paper, we present streaming algorithms to approximately compute three different graph descriptors capturing the essential structure of graphs. Operating on edge streams allows us to avoid storing the entire graph in memory, and controlling the sample size enables us to keep the runtime of our algorithms within desired bounds. We demonstrate the efficacy of the proposed descriptors by analyzing the approximation error and classification accuracy. Our scalable algorit",
    "path": "papers/21/09/2109.01494.json",
    "total_tokens": 835,
    "translated_title": "在边流上计算图描述符",
    "translated_abstract": "特征提取是图分析中重要的任务。这些称为图描述符的特征向量在下游基于向量空间的图分析模型中得到应用。已有的基于谱的图描述符算法提供了最先进的分类准确性，但是已知的计算有意义的描述符的算法不能适用于大型图，因为它们需要将整个图存储于内存中，并且终端用户无法控制算法的运行时间。本文提出了流式算法来近似计算捕捉图的基本结构的三种不同的图描述符。在边流上操作使我们避免将整个图存储于内存中，并且控制采样大小使我们能够将算法的运行时间保持在所需范围内。我们通过分析逼近误差和分类准确性来证明所提出的描述符的有效性。我们的可扩展算法...",
    "tldr": "本文提出了在边流上近似计算图描述符的流式算法，能够捕捉图的基本结构，并避免整个图存储于内存中。该算法具有可扩展性，可控制的运行时间和较高的分类准确性。",
    "en_tdlr": "This paper proposes streaming algorithms to approximately compute graph descriptors on edge streams, capturing the essential structure of graphs and avoiding storing the entire graph in memory. The algorithm is scalable, with controllable runtime and high classification accuracy."
}