{
    "title": "Smart Choices and the Selection Monad. (arXiv:2007.08926v8 [cs.LO] UPDATED)",
    "abstract": "Describing systems in terms of choices and their resulting costs and rewards offers the promise of freeing algorithm designers and programmers from specifying how those choices should be made; in implementations, the choices can be realized by optimization techniques and, increasingly, by machine-learning methods. We study this approach from a programming-language perspective. We define two small languages that support decision-making abstractions: one with choices and rewards, and the other additionally with probabilities. We give both operational and denotational semantics.  In the case of the second language we consider three denotational semantics, with varying degrees of correlation between possible program values and expected rewards. The operational semantics combine the usual semantics of standard constructs with optimization over spaces of possible execution strategies. The denotational semantics, which are compositional, rely on the selection monad, to handle choice, augmente",
    "link": "http://arxiv.org/abs/2007.08926",
    "context": "Title: Smart Choices and the Selection Monad. (arXiv:2007.08926v8 [cs.LO] UPDATED)\nAbstract: Describing systems in terms of choices and their resulting costs and rewards offers the promise of freeing algorithm designers and programmers from specifying how those choices should be made; in implementations, the choices can be realized by optimization techniques and, increasingly, by machine-learning methods. We study this approach from a programming-language perspective. We define two small languages that support decision-making abstractions: one with choices and rewards, and the other additionally with probabilities. We give both operational and denotational semantics.  In the case of the second language we consider three denotational semantics, with varying degrees of correlation between possible program values and expected rewards. The operational semantics combine the usual semantics of standard constructs with optimization over spaces of possible execution strategies. The denotational semantics, which are compositional, rely on the selection monad, to handle choice, augmente",
    "path": "papers/20/07/2007.08926.json",
    "total_tokens": 1039,
    "translated_title": "智能选择和选择单子",
    "translated_abstract": "用选择和相应的成本和收益来描述系统，有望使算法设计人员和程序员从指定如何进行选择中解放出来；在实际实现中，可以通过优化技术和越来越多的机器学习方法来实现这些选择。我们从编程语言的角度研究了这种方法。我们定义了两种支持决策抽象的小语言：一个具有选择和收益，另一个则额外加入了概率。我们给出了操作语义和底层语义。针对第二种语言，我们考虑了三种底层语义，它们在可能的程序值和预期回报之间具有不同程度的相关性。操作语义将标准构造的通常语义与可能的执行策略空间的优化相结合。基于选择单子的组合底层语义，增加第二种语言中的概率单子。我们展示了选择单子可以被理解为一种特殊类型的 continuation 单子，而语言的操作语义和底层语义则通过单子翻译相关。最后，我们通过将其应用于两个简单的例子，展示了我们方法的有用性。",
    "tldr": "该论文提出了基于选择和成本收益的系统描述方式，并从编程语言的角度研究了此方法。研究者定义了两种支持决策抽象的小语言，并给出了它们的操作语义和底层语义，并将底层语义增强为选择和概率单子。该研究通过应用于两个简单例子展示了此方法的实用性。",
    "en_tdlr": "This paper proposes a system description approach based on choices and resulting costs and rewards and studies it from a programming-language perspective. The researchers define two small languages that support decision-making abstractions and provide both operational and denotational semantics, with the latter enhanced by selection and probability monads. The usefulness of the approach is demonstrated through application to two simple examples."
}