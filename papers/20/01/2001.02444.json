{
    "title": "Learning to Encode and Classify Test Executions. (arXiv:2001.02444v2 [cs.SE] UPDATED)",
    "abstract": "The challenge of automatically determining the correctness of test executions is referred to as the test oracle problem and is one of the key remaining issues for automated testing. The goal in this paper is to solve the test oracle problem in a way that is general, scalable and accurate. To achieve this, we use supervised learning over test execution traces. We label a small fraction of the execution traces with their verdict of pass or fail. We use the labelled traces to train a neural network (NN) model to learn to distinguish runtime patterns for passing versus failing executions for a given program. Our approach for building this NN model involves the following steps, 1. Instrument the program to record execution traces as sequences of method invocations and global state, 2. Label a small fraction of the execution traces with their verdicts, 3. Designing a NN component that embeds information in execution traces to fixed length vectors, 4. Design a NN model that uses the trace inf",
    "link": "http://arxiv.org/abs/2001.02444",
    "context": "Title: Learning to Encode and Classify Test Executions. (arXiv:2001.02444v2 [cs.SE] UPDATED)\nAbstract: The challenge of automatically determining the correctness of test executions is referred to as the test oracle problem and is one of the key remaining issues for automated testing. The goal in this paper is to solve the test oracle problem in a way that is general, scalable and accurate. To achieve this, we use supervised learning over test execution traces. We label a small fraction of the execution traces with their verdict of pass or fail. We use the labelled traces to train a neural network (NN) model to learn to distinguish runtime patterns for passing versus failing executions for a given program. Our approach for building this NN model involves the following steps, 1. Instrument the program to record execution traces as sequences of method invocations and global state, 2. Label a small fraction of the execution traces with their verdicts, 3. Designing a NN component that embeds information in execution traces to fixed length vectors, 4. Design a NN model that uses the trace inf",
    "path": "papers/20/01/2001.02444.json",
    "total_tokens": 892,
    "translated_title": "学习编码和分类测试执行",
    "translated_abstract": "自动确定测试执行的正确性被称为测试神谕问题，是自动化测试中的一个关键问题。本文的目标是以一种通用、可扩展和准确的方式解决测试神谕问题。为了实现这一目标，我们使用监督学习来学习测试执行的轨迹。我们对执行轨迹的少部分进行标记，以其通过与失败的结论进行标记。我们使用这些标记的轨迹来训练一个神经网络模型，以学习区分给定程序的通过与失败执行的运行时模式。我们构建这个神经网络模型的方法涉及以下步骤，1. 为程序安装记录执行轨迹，作为方法调用和全局状态的序列，2. 对执行轨迹的少部分进行标记，3. 设计一个神经网络组件，用于将执行轨迹中的信息嵌入到固定长度的向量中，4. 设计一个使用轨迹信息的神经网络模型。",
    "tldr": "本文旨在通过使用监督学习和神经网络模型，解决自动测试中的测试神谕问题。作者采用对执行轨迹进行标记和训练的方法来学习区分通过和失败执行的运行时模式，实现了通用、可扩展和准确的解决方案。"
}