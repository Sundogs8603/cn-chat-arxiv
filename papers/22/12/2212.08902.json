{
    "title": "Know What I don't Know: Handling Ambiguous and Unanswerable Questions for Text-to-SQL. (arXiv:2212.08902v2 [cs.CL] UPDATED)",
    "abstract": "The task of text-to-SQL aims to convert a natural language question into its corresponding SQL query within the context of relational tables. Existing text-to-SQL parsers generate a \"plausible\" SQL query for an arbitrary user question, thereby failing to correctly handle problematic user questions. To formalize this problem, we conduct a preliminary study on the observed ambiguous and unanswerable cases in text-to-SQL and summarize them into 6 feature categories. Correspondingly, we identify the causes behind each category and propose requirements for handling ambiguous and unanswerable questions. Following this study, we propose a simple yet effective counterfactual example generation approach that automatically produces ambiguous and unanswerable text-to-SQL examples. Furthermore, we propose a weakly supervised DTE (Detecting-Then-Explaining) model for error detection, localization, and explanation. Experimental results show that our model achieves the best result on both real-world ",
    "link": "http://arxiv.org/abs/2212.08902",
    "context": "Title: Know What I don't Know: Handling Ambiguous and Unanswerable Questions for Text-to-SQL. (arXiv:2212.08902v2 [cs.CL] UPDATED)\nAbstract: The task of text-to-SQL aims to convert a natural language question into its corresponding SQL query within the context of relational tables. Existing text-to-SQL parsers generate a \"plausible\" SQL query for an arbitrary user question, thereby failing to correctly handle problematic user questions. To formalize this problem, we conduct a preliminary study on the observed ambiguous and unanswerable cases in text-to-SQL and summarize them into 6 feature categories. Correspondingly, we identify the causes behind each category and propose requirements for handling ambiguous and unanswerable questions. Following this study, we propose a simple yet effective counterfactual example generation approach that automatically produces ambiguous and unanswerable text-to-SQL examples. Furthermore, we propose a weakly supervised DTE (Detecting-Then-Explaining) model for error detection, localization, and explanation. Experimental results show that our model achieves the best result on both real-world ",
    "path": "papers/22/12/2212.08902.json",
    "total_tokens": 907,
    "translated_title": "处理模糊和无法回答的问题：针对文本到SQL的处理",
    "translated_abstract": "文本到SQL的任务旨在将自然语言问题转换为相应的SQL查询，从而在关系表的上下文中完成查询。现有的文本到SQL解析器可以为任意用户问题生成“合理”的SQL查询，但这样会无法正确处理具有问题的用户问题。为了解决这个问题，我们对文本到SQL中观察到的模糊和无法回答的情况进行了初步研究，并将其总结为6个特征类别。相应地，我们确定了每个类别背后的原因，并提出了处理模糊和无法回答问题的要求。在进行这项研究之后，我们提出了一种简单而有效的反事实的示例生成方法，可以自动生成模糊和无法回答的文本到SQL示例。此外，我们提出了一种弱监督的DTE（检测-然后解释）模型，用于错误检测，本地化和解释。实验结果表明，我们的模型在真实世界的数据集上取得了最佳结果。",
    "tldr": "本论文针对文本到SQL解析中的模糊和无法回答问题进行了研究，并提出一种简单明了的反事实示例生成方法和弱监督的错误检测模型，实验结果优异。"
}