{
    "title": "Compiler Optimization for Quantum Computing Using Reinforcement Learning. (arXiv:2212.04508v2 [quant-ph] UPDATED)",
    "abstract": "Any quantum computing application, once encoded as a quantum circuit, must be compiled before being executable on a quantum computer. Similar to classical compilation, quantum compilation is a sequential process with many compilation steps and numerous possible optimization passes. Despite the similarities, the development of compilers for quantum computing is still in its infancy -lacking mutual consolidation on the best sequence of passes, compatibility, adaptability, and flexibility. In this work, we take advantage of decades of classical compiler optimization and propose a reinforcement learning framework for developing optimized quantum circuit compilation flows. Through distinct constraints and a unifying interface, the framework supports the combination of techniques from different compilers and optimization tools in a single compilation flow. Experimental evaluations show that the proposed framework -set up with a selection of compilation passes from IBM's Qiskit and Quanti",
    "link": "http://arxiv.org/abs/2212.04508",
    "context": "Title: Compiler Optimization for Quantum Computing Using Reinforcement Learning. (arXiv:2212.04508v2 [quant-ph] UPDATED)\nAbstract: Any quantum computing application, once encoded as a quantum circuit, must be compiled before being executable on a quantum computer. Similar to classical compilation, quantum compilation is a sequential process with many compilation steps and numerous possible optimization passes. Despite the similarities, the development of compilers for quantum computing is still in its infancy -lacking mutual consolidation on the best sequence of passes, compatibility, adaptability, and flexibility. In this work, we take advantage of decades of classical compiler optimization and propose a reinforcement learning framework for developing optimized quantum circuit compilation flows. Through distinct constraints and a unifying interface, the framework supports the combination of techniques from different compilers and optimization tools in a single compilation flow. Experimental evaluations show that the proposed framework -set up with a selection of compilation passes from IBM's Qiskit and Quanti",
    "path": "papers/22/12/2212.04508.json",
    "total_tokens": 1037,
    "translated_title": "使用强化学习的编译器优化量子计算",
    "translated_abstract": "任何一个量子计算应用，一旦被编码成量子电路，就必须在在量子计算机上执行之前进行编译。与经典编译相似，量子编译是一个有序的过程，其中有许多编译步骤和许多可供优化的操作。尽管有相似之处，但量子计算机编译器的开发仍然处于起步阶段，缺乏对最佳操作序列、兼容性、适应性和灵活性的共识。在这项工作中，我们借鉴了几十年经典编译器优化的经验，提出了一种强化学习框架，用于开发经过优化的量子电路编译流程。通过不同的约束条件和统一的接口，该框架支持将不同编译器和优化工具的技术组合在一个单一的编译流程中。实验评估表明，所提出的框架 - 借助IBM的Qiskit和Google的Cirq和TensorFlow Quantum的一系列编译操作，旨在提高量子编译的效率和质量。通过强化学习算法优化其编译流程，克服了传统启发式的缺点，并可适应各种约束条件下的编译要求。",
    "tldr": "这篇论文提出了一种基于强化学习算法的量子编译器优化框架，旨在提高量子编译的效率和品质，克服了传统启发式方法的缺点，并可适应各种约束条件下的编译要求。"
}