{
    "title": "From Understanding the Population Dynamics of the NSGA-II to the First Proven Lower Bounds. (arXiv:2209.13974v2 [cs.NE] CROSS LISTED)",
    "abstract": "Due to the more complicated population dynamics of the NSGA-II, none of the existing runtime guarantees for this algorithm is accompanied by a non-trivial lower bound. Via a first mathematical understanding of the population dynamics of the NSGA-II, that is, by estimating the expected number of individuals having a certain objective value, we prove that the NSGA-II with suitable population size needs $\\Omega(Nn\\log n)$ function evaluations to find the Pareto front of the OneMinMax problem and $\\Omega(Nn^k)$ evaluations on the OneJumpZeroJump problem with jump size $k$. These bounds are asymptotically tight (that is, they match previously shown upper bounds) and show that the NSGA-II here does not even in terms of the parallel runtime (number of iterations) profit from larger population sizes. For the OneJumpZeroJump problem and when the same sorting is used for the computation of the crowding distance contributions of the two objectives, we even obtain a runtime estimate that is tight ",
    "link": "http://arxiv.org/abs/2209.13974",
    "context": "Title: From Understanding the Population Dynamics of the NSGA-II to the First Proven Lower Bounds. (arXiv:2209.13974v2 [cs.NE] CROSS LISTED)\nAbstract: Due to the more complicated population dynamics of the NSGA-II, none of the existing runtime guarantees for this algorithm is accompanied by a non-trivial lower bound. Via a first mathematical understanding of the population dynamics of the NSGA-II, that is, by estimating the expected number of individuals having a certain objective value, we prove that the NSGA-II with suitable population size needs $\\Omega(Nn\\log n)$ function evaluations to find the Pareto front of the OneMinMax problem and $\\Omega(Nn^k)$ evaluations on the OneJumpZeroJump problem with jump size $k$. These bounds are asymptotically tight (that is, they match previously shown upper bounds) and show that the NSGA-II here does not even in terms of the parallel runtime (number of iterations) profit from larger population sizes. For the OneJumpZeroJump problem and when the same sorting is used for the computation of the crowding distance contributions of the two objectives, we even obtain a runtime estimate that is tight ",
    "path": "papers/22/09/2209.13974.json",
    "total_tokens": 975,
    "translated_title": "从理解NSGA-II的人口动态到首次证明的下限",
    "translated_abstract": "由于NSGA-II的更为复杂的人口动态，目前该算法的所有运行时保证都没有附带任何非平凡下限。通过对NSGA-II的人口动态进行第一次数学理解，即通过估计具有特定目标值的个体的期望数量，我们证明了NSGA-II需要适当的人口规模才能在$OneMinMax$问题中找到Pareto前沿，并在跳跃大小为$k$时需要$\\Omega(Nn^k)$次评估来解决$OneJumpZeroJump$问题。这些下限是渐进紧密的（即与之前显示的上限匹配），并且表明在并行运行时间（迭代次数）方面，即使使用更大的人口大小，NSGA-II也不会从中获益。对于$OneJumpZeroJump$问题，当使用相同的排序来计算两个目标的拥挤距离贡献时，我们甚至获得了一个紧密的运行时估计。",
    "tldr": "本论文证明了NSGA-II算法在适当的人口规模下，在解决$OneMinMax$问题时需要$\\Omega(Nn\\log n)$次函数评估，并在解决跳跃大小为$k$的$OneJumpZeroJump$问题时需要$\\Omega(Nn^k)$次评估。这些下限也表明，即使使用更大的人口大小，NSGA-II也不能在并行运行时间方面受益。",
    "en_tdlr": "This paper proves that the NSGA-II algorithm requires $\\Omega(Nn\\log n)$ function evaluations to solve the $OneMinMax$ problem and $\\Omega(Nn^k)$ evaluations to solve the $OneJumpZeroJump$ problem with jump size $k$, both under appropriate population size. These lower bounds also indicate that the NSGA-II cannot benefit from larger population sizes in terms of parallel runtime."
}