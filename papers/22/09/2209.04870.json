{
    "title": "An Improved Algorithm For Online Min-Sum Set Cover. (arXiv:2209.04870v3 [cs.DS] UPDATED)",
    "abstract": "We study a fundamental model of online preference aggregation, where an algorithm maintains an ordered list of $n$ elements. An input is a stream of preferred sets $R_1, R_2, \\dots, R_t, \\dots$. Upon seeing $R_t$ and without knowledge of any future sets, an algorithm has to rerank elements (change the list ordering), so that at least one element of $R_t$ is found near the list front. The incurred cost is a sum of the list update costs (the number of swaps of neighboring list elements) and access costs (position of the first element of $R_t$ on the list). This scenario occurs naturally in applications such as ordering items in an online shop using aggregated preferences of shop customers. The theoretical underpinning of this problem is known as Min-Sum Set Cover.  Unlike previous work (Fotakis et al., ICALP 2020, NIPS 2020) that mostly studied the performance of an online algorithm ALG against the static optimal solution (a single optimal list ordering), in this paper, we study an argua",
    "link": "http://arxiv.org/abs/2209.04870",
    "context": "Title: An Improved Algorithm For Online Min-Sum Set Cover. (arXiv:2209.04870v3 [cs.DS] UPDATED)\nAbstract: We study a fundamental model of online preference aggregation, where an algorithm maintains an ordered list of $n$ elements. An input is a stream of preferred sets $R_1, R_2, \\dots, R_t, \\dots$. Upon seeing $R_t$ and without knowledge of any future sets, an algorithm has to rerank elements (change the list ordering), so that at least one element of $R_t$ is found near the list front. The incurred cost is a sum of the list update costs (the number of swaps of neighboring list elements) and access costs (position of the first element of $R_t$ on the list). This scenario occurs naturally in applications such as ordering items in an online shop using aggregated preferences of shop customers. The theoretical underpinning of this problem is known as Min-Sum Set Cover.  Unlike previous work (Fotakis et al., ICALP 2020, NIPS 2020) that mostly studied the performance of an online algorithm ALG against the static optimal solution (a single optimal list ordering), in this paper, we study an argua",
    "path": "papers/22/09/2209.04870.json",
    "total_tokens": 1077,
    "translated_title": "一种改进的在线最小和集覆盖算法",
    "translated_abstract": "本文研究了一种基本的在线偏好聚合模型，其中算法维护了一个包含 n 个元素的有序列表。输入是一个首选集合 R1，R2，...，Rt，... 的流。在看到Rt时，算法不知道未来的任何集合，必须重新排序元素（更改列表排序），以便在列表前部至少找到一个Rt的元素。产生的成本是列表更新成本（相邻列表元素交换次数）和存取成本（Rt的第一个元素在列表上的位置）的总和。这种情况在应用程序中自然发生，在使用商店客户的聚合偏好订购项目时。这个问题的理论基础被称为最小和集覆盖。与之前的工作（Fotakis等人，ICALP 2020，NIPS 2020）大多研究了在线算法ALG与静态最优解（唯一最优列表排序）之间的性能不同，本文研究了一种论证方法，并提出了一种新的随机算法RR及其扩展RR+。我们表明，我们的算法RR+实现了一个$\\tilde{O}(n^{2/3})$-competitive ratio相对于最优离线解，这是在线设置中已知的最佳绑定的改进。",
    "tldr": "本论文提出了一种改进的在线最小和集覆盖算法，其算法能够在不知道未来集合的前提下重新排序元素，以至于列表前的至少一个元素能够匹配上流中的某个元素，同时算法的表现也优于以往的算法。",
    "en_tdlr": "This paper presents an improved algorithm for online min-sum set cover, where the algorithm is able to reorder elements without knowledge of future sets to find a matching element from the stream, and outperforms previous algorithms in terms of competitive ratio."
}