{
    "title": "A Comparison of Reinforcement Learning Frameworks for Software Testing Tasks. (arXiv:2208.12136v3 [cs.SE] UPDATED)",
    "abstract": "Software testing activities scrutinize the artifacts and the behavior of a software product to find possible defects and ensure that the product meets its expected requirements. Recently, Deep Reinforcement Learning (DRL) has been successfully employed in complex testing tasks such as game testing, regression testing, and test case prioritization to automate the process and provide continuous adaptation. Practitioners can employ DRL by implementing from scratch a DRL algorithm or using a DRL framework. DRL frameworks offer well-maintained implemented state-of-the-art DRL algorithms to facilitate and speed up the development of DRL applications. Developers have widely used these frameworks to solve problems in various domains including software testing. However, to the best of our knowledge, there is no study that empirically evaluates the effectiveness and performance of implemented algorithms in DRL frameworks. Moreover, some guidelines are lacking from the literature that would help ",
    "link": "http://arxiv.org/abs/2208.12136",
    "context": "Title: A Comparison of Reinforcement Learning Frameworks for Software Testing Tasks. (arXiv:2208.12136v3 [cs.SE] UPDATED)\nAbstract: Software testing activities scrutinize the artifacts and the behavior of a software product to find possible defects and ensure that the product meets its expected requirements. Recently, Deep Reinforcement Learning (DRL) has been successfully employed in complex testing tasks such as game testing, regression testing, and test case prioritization to automate the process and provide continuous adaptation. Practitioners can employ DRL by implementing from scratch a DRL algorithm or using a DRL framework. DRL frameworks offer well-maintained implemented state-of-the-art DRL algorithms to facilitate and speed up the development of DRL applications. Developers have widely used these frameworks to solve problems in various domains including software testing. However, to the best of our knowledge, there is no study that empirically evaluates the effectiveness and performance of implemented algorithms in DRL frameworks. Moreover, some guidelines are lacking from the literature that would help ",
    "path": "papers/22/08/2208.12136.json",
    "total_tokens": 871,
    "translated_title": "软件测试任务的强化学习框架比较",
    "translated_abstract": "软件测试活动通过审查软件产品的工件和行为，发现可能的缺陷并确保产品满足预期要求。最近，深度强化学习（DRL）已成功应用于复杂的测试任务，如游戏测试、回归测试和测试用例优化，以自动化过程并提供持续适应性。开发者可以通过从头实现DRL算法或使用DRL框架来使用DRL。DRL框架提供了维护良好、实现了最新DRL算法的工具，以便加快DRL应用的开发。开发者已广泛使用这些框架来解决包括软件测试在内的各个领域的问题。然而，据我们所知，目前还没有对DRL框架中实现算法的有效性和性能进行实证评估的研究。此外，文献中缺乏一些指导方针，这些指导方针将帮助开发者在使用DRL框架时做出决策。",
    "tldr": "本论文比较了软件测试任务中不同强化学习框架的效果和性能，并指出当前文献中缺乏对DRL框架中实现算法的实证评估和指导方针。"
}