{
    "title": "PyABSA: A Modularized Framework for Reproducible Aspect-based Sentiment Analysis. (arXiv:2208.01368v3 [cs.CL] UPDATED)",
    "abstract": "The advancement of aspect-based sentiment analysis (ABSA) has urged the lack of a user-friendly framework that can largely lower the difficulty of reproducing state-of-the-art ABSA performance, especially for beginners. To meet the demand, we present \\our, a modularized framework built on PyTorch for reproducible ABSA. To facilitate ABSA research, PyABSA supports several ABSA subtasks, including aspect term extraction, aspect sentiment classification, and end-to-end aspect-based sentiment analysis. Concretely, PyABSA integrates 29 models and 26 datasets. With just a few lines of code, the result of a model on a specific dataset can be reproduced. With a modularized design, PyABSA can also be flexibly extended to considered models, datasets, and other related tasks. Besides, PyABSA highlights its data augmentation and annotation features, which significantly address data scarcity. All are welcome to have a try at \\url{https://github.com/yangheng95/PyABSA}.",
    "link": "http://arxiv.org/abs/2208.01368",
    "context": "Title: PyABSA: A Modularized Framework for Reproducible Aspect-based Sentiment Analysis. (arXiv:2208.01368v3 [cs.CL] UPDATED)\nAbstract: The advancement of aspect-based sentiment analysis (ABSA) has urged the lack of a user-friendly framework that can largely lower the difficulty of reproducing state-of-the-art ABSA performance, especially for beginners. To meet the demand, we present \\our, a modularized framework built on PyTorch for reproducible ABSA. To facilitate ABSA research, PyABSA supports several ABSA subtasks, including aspect term extraction, aspect sentiment classification, and end-to-end aspect-based sentiment analysis. Concretely, PyABSA integrates 29 models and 26 datasets. With just a few lines of code, the result of a model on a specific dataset can be reproduced. With a modularized design, PyABSA can also be flexibly extended to considered models, datasets, and other related tasks. Besides, PyABSA highlights its data augmentation and annotation features, which significantly address data scarcity. All are welcome to have a try at \\url{https://github.com/yangheng95/PyABSA}.",
    "path": "papers/22/08/2208.01368.json",
    "total_tokens": 926,
    "translated_title": "PyABSA: 一个用于可复现的基于方面的情感分析的模块化框架",
    "translated_abstract": "随着方面情感分析（ABSA）的发展，急需一个用户友好的框架，可以大大降低复制最新技术的ABSA性能的难度，尤其是对初学者来说。为了满足需求，我们介绍了PyABSA，一个基于PyTorch构建的模块化框架，用于可复现的ABSA。为了促进ABSA研究，PyABSA支持多个ABSA子任务，包括方面术语提取、方面情感分类和端到端的基于方面的情感分析。具体而言，PyABSA集成了29个模型和26个数据集。只需几行代码，就可以复现模型在特定数据集上的结果。通过模块化设计，PyABSA还可以灵活扩展到考虑的模型、数据集和其他相关任务。此外，PyABSA突出了其数据增强和标注功能，显著解决了数据稀缺问题。欢迎大家在\\url{https://github.com/yangheng95/PyABSA}上尝试使用。",
    "tldr": "PyABSA是一个基于PyTorch的可复现的基于方面的情感分析的模块化框架，支持多个ABSA子任务和数据集，具有灵活的扩展性，并解决了数据稀缺问题。",
    "en_tdlr": "PyABSA is a modularized framework for reproducible aspect-based sentiment analysis built on PyTorch. It supports multiple ABSA subtasks and datasets, with flexible extensibility, and addresses data scarcity."
}