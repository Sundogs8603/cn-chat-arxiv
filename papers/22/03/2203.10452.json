{
    "title": "CrossBeam: Learning to Search in Bottom-Up Program Synthesis. (arXiv:2203.10452v1 [cs.LG] CROSS LISTED)",
    "abstract": "Many approaches to program synthesis perform a search within an enormous space of programs to find one that satisfies a given specification. Prior works have used neural models to guide combinatorial search algorithms, but such approaches still explore a huge portion of the search space and quickly become intractable as the size of the desired program increases. To tame the search space blowup, we propose training a neural model to learn a hands-on search policy for bottom-up synthesis, instead of relying on a combinatorial search algorithm. Our approach, called CrossBeam, uses the neural model to choose how to combine previously-explored programs into new programs, taking into account the search history and partial program executions. Motivated by work in structured prediction on learning to search, CrossBeam is trained on-policy using data extracted from its own bottom-up searches on training tasks. We evaluate CrossBeam in two very different domains, string manipulation and logic pr",
    "link": "http://arxiv.org/abs/2203.10452",
    "context": "Title: CrossBeam: Learning to Search in Bottom-Up Program Synthesis. (arXiv:2203.10452v1 [cs.LG] CROSS LISTED)\nAbstract: Many approaches to program synthesis perform a search within an enormous space of programs to find one that satisfies a given specification. Prior works have used neural models to guide combinatorial search algorithms, but such approaches still explore a huge portion of the search space and quickly become intractable as the size of the desired program increases. To tame the search space blowup, we propose training a neural model to learn a hands-on search policy for bottom-up synthesis, instead of relying on a combinatorial search algorithm. Our approach, called CrossBeam, uses the neural model to choose how to combine previously-explored programs into new programs, taking into account the search history and partial program executions. Motivated by work in structured prediction on learning to search, CrossBeam is trained on-policy using data extracted from its own bottom-up searches on training tasks. We evaluate CrossBeam in two very different domains, string manipulation and logic pr",
    "path": "papers/22/03/2203.10452.json",
    "total_tokens": 831,
    "translated_title": "CrossBeam: 在自底向上程序合成中学习搜索",
    "translated_abstract": "许多程序合成方法在庞大的程序空间中进行搜索，以找到满足给定规范的程序。先前的工作使用神经模型来指导组合搜索算法，但是这样的方法仍然探索了搜索空间的很大部分，并且随着所需程序的大小增加，很快变得难以处理。为了控制搜索空间的膨胀问题，我们提出了一种训练神经模型来学习自底向上合成中的搜索策略的方法，而不是依赖于组合搜索算法。我们的方法称为CrossBeam，使用神经模型来选择如何将先前探索的程序组合成新的程序，考虑到搜索历史和部分程序的执行。受结构化预测中学习搜索的相关工作的启发，CrossBeam在训练任务上使用从自己的自底向上搜索中提取的数据来进行有策略的训练。我们在两个非常不同的领域，字符串操作和逻辑编程中评估了CrossBeam。",
    "tldr": "CrossBeam是一种在自底向上程序合成中学习搜索策略的方法，通过训练神经模型来选择如何合并先前探索的程序，以控制搜索空间的膨胀。"
}