{
    "title": "Decision Diagram-Based Branch-and-Bound with Caching for Dominance and Suboptimality Detection. (arXiv:2211.13118v2 [cs.DS] UPDATED)",
    "abstract": "The branch-and-bound algorithm based on decision diagrams introduced by Bergman et al. in 2016 is a framework for solving discrete optimization problems with a dynamic programming formulation. It works by compiling a series of bounded-width decision diagrams that can provide lower and upper bounds for any given subproblem. Eventually, every part of the search space will be either explored or pruned by the algorithm, thus proving optimality. This paper presents new ingredients to speed up the search by exploiting the structure of dynamic programming models. The key idea is to prevent the repeated exploration of nodes corresponding to the same dynamic programming states by storing and querying thresholds in a data structure called the Barrier. These thresholds are based on dominance relations between partial solutions previously found. They can be further strengthened by integrating the filtering techniques introduced by Gillard et al. in 2021. Computational experiments show that the pru",
    "link": "http://arxiv.org/abs/2211.13118",
    "context": "Title: Decision Diagram-Based Branch-and-Bound with Caching for Dominance and Suboptimality Detection. (arXiv:2211.13118v2 [cs.DS] UPDATED)\nAbstract: The branch-and-bound algorithm based on decision diagrams introduced by Bergman et al. in 2016 is a framework for solving discrete optimization problems with a dynamic programming formulation. It works by compiling a series of bounded-width decision diagrams that can provide lower and upper bounds for any given subproblem. Eventually, every part of the search space will be either explored or pruned by the algorithm, thus proving optimality. This paper presents new ingredients to speed up the search by exploiting the structure of dynamic programming models. The key idea is to prevent the repeated exploration of nodes corresponding to the same dynamic programming states by storing and querying thresholds in a data structure called the Barrier. These thresholds are based on dominance relations between partial solutions previously found. They can be further strengthened by integrating the filtering techniques introduced by Gillard et al. in 2021. Computational experiments show that the pru",
    "path": "papers/22/11/2211.13118.json",
    "total_tokens": 893,
    "tldr": "本文提出了一种决策图-Based的分支定界算法，在动态规划模型结构下，通过缓存和查询阈值，显著加速搜索。"
}