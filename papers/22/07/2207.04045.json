{
    "title": "Runtime Analysis for Permutation-based Evolutionary Algorithms. (arXiv:2207.04045v3 [cs.NE] UPDATED)",
    "abstract": "While the theoretical analysis of evolutionary algorithms (EAs) has made significant progress for pseudo-Boolean optimization problems in the last 25 years, only sporadic theoretical results exist on how EAs solve permutation-based problems.  To overcome the lack of permutation-based benchmark problems, we propose a general way to transfer the classic pseudo-Boolean benchmarks into benchmarks defined on sets of permutations. We then conduct a rigorous runtime analysis of the permutation-based $(1+1)$ EA proposed by Scharnow, Tinnefeld, and Wegener (2004) on the analogues of the LeadingOnes and Jump benchmarks. The latter shows that, different from bit-strings, it is not only the Hamming distance that determines how difficult it is to mutate a permutation $\\sigma$ into another one $\\tau$, but also the precise cycle structure of $\\sigma \\tau^{-1}$. For this reason, we also regard the more symmetric scramble mutation operator. We observe that it not only leads to simpler proofs, but also ",
    "link": "http://arxiv.org/abs/2207.04045",
    "context": "Title: Runtime Analysis for Permutation-based Evolutionary Algorithms. (arXiv:2207.04045v3 [cs.NE] UPDATED)\nAbstract: While the theoretical analysis of evolutionary algorithms (EAs) has made significant progress for pseudo-Boolean optimization problems in the last 25 years, only sporadic theoretical results exist on how EAs solve permutation-based problems.  To overcome the lack of permutation-based benchmark problems, we propose a general way to transfer the classic pseudo-Boolean benchmarks into benchmarks defined on sets of permutations. We then conduct a rigorous runtime analysis of the permutation-based $(1+1)$ EA proposed by Scharnow, Tinnefeld, and Wegener (2004) on the analogues of the LeadingOnes and Jump benchmarks. The latter shows that, different from bit-strings, it is not only the Hamming distance that determines how difficult it is to mutate a permutation $\\sigma$ into another one $\\tau$, but also the precise cycle structure of $\\sigma \\tau^{-1}$. For this reason, we also regard the more symmetric scramble mutation operator. We observe that it not only leads to simpler proofs, but also ",
    "path": "papers/22/07/2207.04045.json",
    "total_tokens": 964,
    "translated_title": "基于排列的进化算法的运行时分析",
    "translated_abstract": "尽管在过去25年针对伪布尔优化问题的进化算法（EAs）的理论分析取得了重大进展，但在如何解决基于排列的问题的理论结果方面只存在零星的结果。为了克服基于排列的基准问题的不足，我们提出了一种将经典的伪布尔基准转化为基于排列集合定义的基准的通用方法。然后，我们对Scharnow，Tinnefeld和Wegener（2004）提出的基于排列的（1+1）EA在LeadingOnes和Jump基准的类似物上进行了严格的运行时分析。后者表明，与位串不同，不仅汉明距离决定了将一个排列$\\sigma$变异为另一个排列$\\tau$的困难程度，还有$\\sigma\\tau^{-1}$的精确循环结构。因此，我们还考虑了更对称的混淆变异算子。我们观察到，这不仅导致了更简单的证明，还导致了更好的效果。",
    "tldr": "本文对基于排列的进化算法进行了运行时分析，并提出了一种通用方法将经典的伪布尔基准转化为基于排列集合定义的基准。研究发现，与位串不同，排列变异的困难程度不仅取决于汉明距离，还与排列的精确循环结构有关。",
    "en_tdlr": "This paper presents a runtime analysis of permutation-based evolutionary algorithms and proposes a general approach to transform classic pseudo-Boolean benchmarks into benchmarks defined on sets of permutations. The analysis reveals that the difficulty of permutation mutation is not only determined by the Hamming distance, but also depends on the precise cycle structure of the permutations."
}