{
    "title": "Automatic Identification of Self-Admitted Technical Debt from Four Different Sources. (arXiv:2202.02387v5 [cs.SE] UPDATED)",
    "abstract": "Technical debt refers to taking shortcuts to achieve short-term goals while sacrificing the long-term maintainability and evolvability of software systems. A large part of technical debt is explicitly reported by the developers themselves; this is commonly referred to as Self-Admitted Technical Debt or SATD. Previous work has focused on identifying SATD from source code comments and issue trackers. However, there are no approaches available for automatically identifying SATD from other sources such as commit messages and pull requests, or by combining multiple sources. Therefore, we propose and evaluate an approach for automated SATD identification that integrates four sources: source code comments, commit messages, pull requests, and issue tracking systems. Our findings show that our approach outperforms baseline approaches and achieves an average F1-score of 0.611 when detecting four types of SATD (i.e., code/design debt, requirement debt, documentation debt, and test debt) from the ",
    "link": "http://arxiv.org/abs/2202.02387",
    "context": "Title: Automatic Identification of Self-Admitted Technical Debt from Four Different Sources. (arXiv:2202.02387v5 [cs.SE] UPDATED)\nAbstract: Technical debt refers to taking shortcuts to achieve short-term goals while sacrificing the long-term maintainability and evolvability of software systems. A large part of technical debt is explicitly reported by the developers themselves; this is commonly referred to as Self-Admitted Technical Debt or SATD. Previous work has focused on identifying SATD from source code comments and issue trackers. However, there are no approaches available for automatically identifying SATD from other sources such as commit messages and pull requests, or by combining multiple sources. Therefore, we propose and evaluate an approach for automated SATD identification that integrates four sources: source code comments, commit messages, pull requests, and issue tracking systems. Our findings show that our approach outperforms baseline approaches and achieves an average F1-score of 0.611 when detecting four types of SATD (i.e., code/design debt, requirement debt, documentation debt, and test debt) from the ",
    "path": "papers/22/02/2202.02387.json",
    "total_tokens": 886,
    "translated_title": "来源多元化的自我承认技术债务的自动识别",
    "translated_abstract": "技术债务是指为达到短期目标而采取捷径，而牺牲软件系统的长期可维护性和可发展性。大部分技术债务是由开发人员自己明确报告的；这通常被称为自我承认的技术债务（SATD）。以往的工作重点是从源代码注释和问题跟踪器中识别SATD。然而，目前没有可自动从其他来源（如提交消息和拉请求）或通过多种来源组合自动识别SATD的方法。因此，我们提出并评估了一种自动SATD识别方法，该方法整合了四个来源：源代码注释、提交消息、拉请求和问题跟踪系统。我们的研究发现，我们的方法优于基准方法，在识别四种类型的SATD（即代码/设计债务、需求债务、文档债务和测试债务）时达到了平均F1得分0.611。",
    "tldr": "本文提出了一种整合多种来源的自动SATD识别方法，能够有效地找到代码/设计债务、需求债务、文档债务和测试债务。"
}