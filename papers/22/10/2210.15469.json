{
    "title": "Learning Failure-Inducing Models for Testing Software-Defined Networks. (arXiv:2210.15469v2 [cs.SE] UPDATED)",
    "abstract": "Software-defined networks (SDN) enable flexible and effective communication systems that are managed by centralized software controllers. However, such a controller can undermine the underlying communication network of an SDN-based system and thus must be carefully tested. When an SDN-based system fails, in order to address such a failure, engineers need to precisely understand the conditions under which it occurs. In this article, we introduce a machine learning-guided fuzzing method, named FuzzSDN, aiming at both (1) generating effective test data leading to failures in SDN-based systems and (2) learning accurate failure-inducing models that characterize conditions under which such system fails. To our knowledge, FuzzSDN is the first attempt to simultaneously address these two objectives for SDNs. We evaluate FuzzSDN by applying it to systems controlled by two open-source SDN controllers. Further, we compare FuzzSDN with two state-of-the-art methods for fuzzing SDNs and two baselines",
    "link": "http://arxiv.org/abs/2210.15469",
    "context": "Title: Learning Failure-Inducing Models for Testing Software-Defined Networks. (arXiv:2210.15469v2 [cs.SE] UPDATED)\nAbstract: Software-defined networks (SDN) enable flexible and effective communication systems that are managed by centralized software controllers. However, such a controller can undermine the underlying communication network of an SDN-based system and thus must be carefully tested. When an SDN-based system fails, in order to address such a failure, engineers need to precisely understand the conditions under which it occurs. In this article, we introduce a machine learning-guided fuzzing method, named FuzzSDN, aiming at both (1) generating effective test data leading to failures in SDN-based systems and (2) learning accurate failure-inducing models that characterize conditions under which such system fails. To our knowledge, FuzzSDN is the first attempt to simultaneously address these two objectives for SDNs. We evaluate FuzzSDN by applying it to systems controlled by two open-source SDN controllers. Further, we compare FuzzSDN with two state-of-the-art methods for fuzzing SDNs and two baselines",
    "path": "papers/22/10/2210.15469.json",
    "total_tokens": 888,
    "translated_title": "学习SDN软件定义网络测试失败模型",
    "translated_abstract": "软件定义网络（SDN）能够实现由中央化的软件控制器管理的灵活和高效的通信系统。然而，这样的控制器可能会破坏基于SDN的系统的底层通信网络，因此必须进行仔细测试。当基于SDN的系统失败时，工程师需要精确地了解其发生条件以应对此类故障。本文介绍了一种名为FuzzSDN的机器学习引导模糊测试方法，旨在（1）生成导致SDN系统失败的有效测试数据和（2）学习准确的故障诱导模型，以表征此类系统失败的条件。据我们所知，FuzzSDN是首次尝试同时解决这两个SDN目标的方法。我们通过将其应用于两个开源SDN控制器控制的系统来评估FuzzSDN。此外，我们还将FuzzSDN与两种最先进的SDN模糊测试方法和两个基准进行比较。",
    "tldr": "本文介绍了一种名为FuzzSDN的机器学习引导模糊测试方法，可生成导致SDN系统失败的有效测试数据，并学习准确的故障诱导模型以表征此类系统失败的条件。",
    "en_tdlr": "This article introduces a machine learning-guided fuzzing method named FuzzSDN, which can generate effective test data leading to failures in SDN-based systems and learn accurate failure-inducing models that characterize conditions under which such systems fail."
}