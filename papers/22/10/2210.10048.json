{
    "title": "AnalogVNN: A fully modular framework for modeling and optimizing photonic neural networks. (arXiv:2210.10048v2 [cs.LG] UPDATED)",
    "abstract": "AnalogVNN, a simulation framework built on PyTorch which can simulate the effects of optoelectronic noise, limited precision, and signal normalization present in photonic neural network accelerators. We use this framework to train and optimize linear and convolutional neural networks with up to 9 layers and ~1.7 million parameters, while gaining insights into how normalization, activation function, reduced precision, and noise influence accuracy in analog photonic neural networks. By following the same layer structure design present in PyTorch, the AnalogVNN framework allows users to convert most digital neural network models to their analog counterparts with just a few lines of code, taking full advantage of the open-source optimization, deep learning, and GPU acceleration libraries available through PyTorch. Code is available at https://analogvnn.github.io",
    "link": "http://arxiv.org/abs/2210.10048",
    "context": "Title: AnalogVNN: A fully modular framework for modeling and optimizing photonic neural networks. (arXiv:2210.10048v2 [cs.LG] UPDATED)\nAbstract: AnalogVNN, a simulation framework built on PyTorch which can simulate the effects of optoelectronic noise, limited precision, and signal normalization present in photonic neural network accelerators. We use this framework to train and optimize linear and convolutional neural networks with up to 9 layers and ~1.7 million parameters, while gaining insights into how normalization, activation function, reduced precision, and noise influence accuracy in analog photonic neural networks. By following the same layer structure design present in PyTorch, the AnalogVNN framework allows users to convert most digital neural network models to their analog counterparts with just a few lines of code, taking full advantage of the open-source optimization, deep learning, and GPU acceleration libraries available through PyTorch. Code is available at https://analogvnn.github.io",
    "path": "papers/22/10/2210.10048.json",
    "total_tokens": 985,
    "translated_title": "AnalogVNN：完全模块化的光子神经网络建模和优化框架",
    "translated_abstract": "AnalogVNN 是一个基于 PyTorch 构建的仿真框架，可以模拟光子神经网络加速器中存在的光电噪声、有限精度和信号归一化等影响，我们使用此框架训练和优化具有最多 9 层和约 1.7 百万参数的线性和卷积神经网络，并深入了解归一化、激活函数、降低精度和噪音对模拟光学神经网络准确性的影响。通过遵循 PyTorch 中存在的相同层结构设计，AnalogVNN 框架允许用户仅使用几行代码将大多数数字神经网络模型转换为其模拟光学神经网络模型，充分利用 PyTorch 提供的开源优化、深度学习和 GPU 加速库。代码可在 https://analogvnn.github.io 上获得。",
    "tldr": "AnalogVNN是一个基于PyTorch的光学神经网络仿真框架，可以模拟光电噪声、有限精度和信号归一化等影响，使用框架可训练和优化线性/卷积神经网络，得出在光学神经网络中影响准确性的归一化、激活函数、降低精度和噪音等因素，实现数字神经网络模型向其模拟光学神经网络模型的转换。",
    "en_tdlr": "AnalogVNN is a PyTorch-based photonic neural network simulation framework that can model the effects of optoelectronic noise, limited precision, and signal normalization. With AnalogVNN, users can train and optimize linear and convolutional neural networks and gain insights into how normalization, activation function, reduced precision, and noise affect accuracy in analog photonic neural networks. The framework also allows users to convert most digital neural network models to their photonic analog counterparts with just a few lines of code."
}