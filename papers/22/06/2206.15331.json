{
    "title": "GitHub Copilot AI pair programmer: Asset or Liability?. (arXiv:2206.15331v2 [cs.SE] UPDATED)",
    "abstract": "Automatic program synthesis is a long-lasting dream in software engineering. Recently, a promising Deep Learning (DL) based solution, called Copilot, has been proposed by OpenAI and Microsoft as an industrial product. Although some studies evaluate the correctness of Copilot solutions and report its issues, more empirical evaluations are necessary to understand how developers can benefit from it effectively. In this paper, we study the capabilities of Copilot in two different programming tasks: (i) generating (and reproducing) correct and efficient solutions for fundamental algorithmic problems, and (ii) comparing Copilot's proposed solutions with those of human programmers on a set of programming tasks. For the former, we assess the performance and functionality of Copilot in solving selected fundamental problems in computer science, like sorting and implementing data structures. In the latter, a dataset of programming problems with human-provided solutions is used. The results show t",
    "link": "http://arxiv.org/abs/2206.15331",
    "context": "Title: GitHub Copilot AI pair programmer: Asset or Liability?. (arXiv:2206.15331v2 [cs.SE] UPDATED)\nAbstract: Automatic program synthesis is a long-lasting dream in software engineering. Recently, a promising Deep Learning (DL) based solution, called Copilot, has been proposed by OpenAI and Microsoft as an industrial product. Although some studies evaluate the correctness of Copilot solutions and report its issues, more empirical evaluations are necessary to understand how developers can benefit from it effectively. In this paper, we study the capabilities of Copilot in two different programming tasks: (i) generating (and reproducing) correct and efficient solutions for fundamental algorithmic problems, and (ii) comparing Copilot's proposed solutions with those of human programmers on a set of programming tasks. For the former, we assess the performance and functionality of Copilot in solving selected fundamental problems in computer science, like sorting and implementing data structures. In the latter, a dataset of programming problems with human-provided solutions is used. The results show t",
    "path": "papers/22/06/2206.15331.json",
    "total_tokens": 860,
    "translated_abstract": "自动程序合成是软件工程长久以来的梦想。最近，OpenAI和微软提出了一种有前途的基于深度学习的解决方案，称为Copilot，作为一种工业产品。尽管一些研究评估了Copilot解决方案的正确性并报告了它的问题，但需要更多的实证评估才能了解开发人员如何有效地从中受益。在本文中，我们研究了Copilot在两个不同编程任务中的能力：(i)生成（和再现）基础算法问题的正确且高效的解决方案，(ii)将Copilot提出的解决方案与人类程序员在一组编程任务上的提供方案进行比较。对于前者，我们评估了Copilot在计算机科学中选定的基本问题的解决性能和功能，如排序和实现数据结构。在后者中，使用了一个由人类提供的编程问题和解决方案的数据集。结果显示",
    "tldr": "该论文评估了被称为Copilot的深度学习程序合成工具在解决基础算法问题和与人类程序员的对比中的性能，并调查了人们对其可接受性的看法。",
    "en_tdlr": "This paper evaluates the performance of a promising deep learning program synthesis tool called Copilot in solving fundamental algorithmic problems and its comparison with human programmers, and investigates people's perceptions of its acceptability."
}