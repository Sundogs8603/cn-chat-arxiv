{
    "title": "CodeAttack: Code-Based Adversarial Attacks for Pre-trained Programming Language Models. (arXiv:2206.00052v3 [cs.CL] UPDATED)",
    "abstract": "Pre-trained programming language (PL) models (such as CodeT5, CodeBERT, GraphCodeBERT, etc.,) have the potential to automate software engineering tasks involving code understanding and code generation. However, these models operate in the natural channel of code, i.e., they are primarily concerned with the human understanding of the code. They are not robust to changes in the input and thus, are potentially susceptible to adversarial attacks in the natural channel. We propose, CodeAttack, a simple yet effective black-box attack model that uses code structure to generate effective, efficient, and imperceptible adversarial code samples and demonstrates the vulnerabilities of the state-of-the-art PL models to code-specific adversarial attacks. We evaluate the transferability of CodeAttack on several code-code (translation and repair) and code-NL (summarization) tasks across different programming languages. CodeAttack outperforms state-of-the-art adversarial NLP attack models to achieve th",
    "link": "http://arxiv.org/abs/2206.00052",
    "context": "Title: CodeAttack: Code-Based Adversarial Attacks for Pre-trained Programming Language Models. (arXiv:2206.00052v3 [cs.CL] UPDATED)\nAbstract: Pre-trained programming language (PL) models (such as CodeT5, CodeBERT, GraphCodeBERT, etc.,) have the potential to automate software engineering tasks involving code understanding and code generation. However, these models operate in the natural channel of code, i.e., they are primarily concerned with the human understanding of the code. They are not robust to changes in the input and thus, are potentially susceptible to adversarial attacks in the natural channel. We propose, CodeAttack, a simple yet effective black-box attack model that uses code structure to generate effective, efficient, and imperceptible adversarial code samples and demonstrates the vulnerabilities of the state-of-the-art PL models to code-specific adversarial attacks. We evaluate the transferability of CodeAttack on several code-code (translation and repair) and code-NL (summarization) tasks across different programming languages. CodeAttack outperforms state-of-the-art adversarial NLP attack models to achieve th",
    "path": "papers/22/06/2206.00052.json",
    "total_tokens": 913,
    "translated_title": "CodeAttack：面向预训练编程语言模型的基于代码的对抗攻击",
    "translated_abstract": "预训练的编程语言模型（例如CodeT5，CodeBERT，GraphCodeBERT等）有潜力自动化涉及代码理解和代码生成的软件工程任务。然而，这些模型在代码的自然通道中运行，即它们主要关注人对代码的理解。它们对输入的变化不够鲁棒，因此潜在易受自然通道中的对抗性攻击。我们提出了CodeAttack，这是一个简单而有效的黑盒攻击模型，利用代码结构生成有效、高效和难以察觉的对抗样本，并展示了最先进的PL模型在代码特定的对抗性攻击方面的漏洞。我们评估了CodeAttack在不同编程语言的多个代码-代码（翻译和修复）和代码-NL（摘要）任务上的可转移性。CodeAttack在全面超越最先进的自然语言处理对抗攻击模型方面表现出色。",
    "tldr": "CodeAttack是一个基于代码结构的黑盒攻击模型，能够生成有效、高效和难以察觉的对抗性攻击样本，并证明预训练编程语言模型存在易受代码特定的对抗性攻击的漏洞。",
    "en_tdlr": "CodeAttack is a black-box attack model based on code structure that generates effective, efficient, and imperceptible adversarial code samples, demonstrating the vulnerability of pre-trained programming language models to code-specific adversarial attacks. CodeAttack outperforms state-of-the-art adversarial NLP attack models to achieve comprehensive success."
}