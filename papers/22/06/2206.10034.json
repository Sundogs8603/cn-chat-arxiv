{
    "title": "Deep Learning Models on CPUs: A Methodology for Efficient Training. (arXiv:2206.10034v2 [cs.LG] UPDATED)",
    "abstract": "GPUs have been favored for training deep learning models due to their highly parallelized architecture. As a result, most studies on training optimization focus on GPUs. There is often a trade-off, however, between cost and efficiency when deciding on how to choose the proper hardware for training. In particular, CPU servers can be beneficial if training on CPUs was more efficient, as they incur fewer hardware update costs and better utilizing existing infrastructure. This paper makes several contributions to research on training deep learning models using CPUs. First, it presents a method for optimizing the training of deep learning models on Intel CPUs and a toolkit called ProfileDNN, which we developed to improve performance profiling. Second, we describe a generic training optimization method that guides our workflow and explores several case studies where we identified performance issues and then optimized the Intel Extension for PyTorch, resulting in an overall 2x training perfor",
    "link": "http://arxiv.org/abs/2206.10034",
    "context": "Title: Deep Learning Models on CPUs: A Methodology for Efficient Training. (arXiv:2206.10034v2 [cs.LG] UPDATED)\nAbstract: GPUs have been favored for training deep learning models due to their highly parallelized architecture. As a result, most studies on training optimization focus on GPUs. There is often a trade-off, however, between cost and efficiency when deciding on how to choose the proper hardware for training. In particular, CPU servers can be beneficial if training on CPUs was more efficient, as they incur fewer hardware update costs and better utilizing existing infrastructure. This paper makes several contributions to research on training deep learning models using CPUs. First, it presents a method for optimizing the training of deep learning models on Intel CPUs and a toolkit called ProfileDNN, which we developed to improve performance profiling. Second, we describe a generic training optimization method that guides our workflow and explores several case studies where we identified performance issues and then optimized the Intel Extension for PyTorch, resulting in an overall 2x training perfor",
    "path": "papers/22/06/2206.10034.json",
    "total_tokens": 927,
    "tldr": "本文提出了一种基于Intel CPU的深度学习模型训练优化方法和一个名为ProfileDNN的工具包。通过优化Intel Extension for PyTorch，大大提高了CPU上的深度学习模型的训练性能。"
}