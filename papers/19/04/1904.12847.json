{
    "title": "Optimal Sparse Decision Trees. (arXiv:1904.12847v6 [cs.LG] UPDATED)",
    "abstract": "Decision tree algorithms have been among the most popular algorithms for interpretable (transparent) machine learning since the early 1980's. The problem that has plagued decision tree algorithms since their inception is their lack of optimality, or lack of guarantees of closeness to optimality: decision tree algorithms are often greedy or myopic, and sometimes produce unquestionably suboptimal models. Hardness of decision tree optimization is both a theoretical and practical obstacle, and even careful mathematical programming approaches have not been able to solve these problems efficiently. This work introduces the first practical algorithm for optimal decision trees for binary variables. The algorithm is a co-design of analytical bounds that reduce the search space and modern systems techniques, including data structures and a custom bit-vector library. Our experiments highlight advantages in scalability, speed, and proof of optimality. The code is available at https://github.com/xi",
    "link": "http://arxiv.org/abs/1904.12847",
    "context": "Title: Optimal Sparse Decision Trees. (arXiv:1904.12847v6 [cs.LG] UPDATED)\nAbstract: Decision tree algorithms have been among the most popular algorithms for interpretable (transparent) machine learning since the early 1980's. The problem that has plagued decision tree algorithms since their inception is their lack of optimality, or lack of guarantees of closeness to optimality: decision tree algorithms are often greedy or myopic, and sometimes produce unquestionably suboptimal models. Hardness of decision tree optimization is both a theoretical and practical obstacle, and even careful mathematical programming approaches have not been able to solve these problems efficiently. This work introduces the first practical algorithm for optimal decision trees for binary variables. The algorithm is a co-design of analytical bounds that reduce the search space and modern systems techniques, including data structures and a custom bit-vector library. Our experiments highlight advantages in scalability, speed, and proof of optimality. The code is available at https://github.com/xi",
    "path": "papers/19/04/1904.12847.json",
    "total_tokens": 910,
    "translated_title": "最优稀疏决策树",
    "translated_abstract": "决策树算法自从1980年代初以来就一直是可解释（透明）机器学习中最受欢迎的算法之一。然而，自从它们问世以来，困扰决策树算法的问题就是它们的非最优性，或者说缺乏接近最优的保证：决策树算法往往是贪婪的或者目光短浅的，有时会产生明显非最优的模型。决策树优化的困难既是一个理论上的障碍，也是一个实际上的障碍，即使是仔细的数学规划方法也无法高效地解决这些问题。本文提出了第一个针对二进制变量的最优决策树的实用算法。该算法通过分析界限减小搜索空间，并利用现代系统技术，包括数据结构和自定义位向量库。我们的实验证明了在可扩展性、速度和最优性证明方面的优势。代码可在https://github.com/xi获得。",
    "tldr": "这篇论文介绍了第一个针对二进制变量的最优决策树的实用算法，通过分析界限和现代系统技术的结合来解决决策树优化的困难，实验证明了其在可扩展性、速度和最优性证明方面的优势。"
}